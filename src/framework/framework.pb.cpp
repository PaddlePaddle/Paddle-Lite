// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: framework.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "framework.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/io/zero_copy_stream_impl_lite.h>
#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/wire_format_lite_inl.h>
// @@protoc_insertion_point(includes)

namespace paddle_mobile {
namespace framework {
namespace proto {
class OpDesc_AttrDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<OpDesc_Attr> _instance;
} _OpDesc_Attr_default_instance_;
class OpDesc_VarDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<OpDesc_Var> _instance;
} _OpDesc_Var_default_instance_;
class OpDescDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<OpDesc> _instance;
} _OpDesc_default_instance_;
class OpProto_VarDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<OpProto_Var> _instance;
} _OpProto_Var_default_instance_;
class OpProto_AttrDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<OpProto_Attr> _instance;
} _OpProto_Attr_default_instance_;
class OpProtoDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<OpProto> _instance;
} _OpProto_default_instance_;
class VarType_TensorDescDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<VarType_TensorDesc>
      _instance;
} _VarType_TensorDesc_default_instance_;
class VarType_LoDTensorDescDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<VarType_LoDTensorDesc>
      _instance;
} _VarType_LoDTensorDesc_default_instance_;
class VarType_LoDTensorArrayDescDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<
      VarType_LoDTensorArrayDesc>
      _instance;
} _VarType_LoDTensorArrayDesc_default_instance_;
class VarType_ReaderDescDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<VarType_ReaderDesc>
      _instance;
} _VarType_ReaderDesc_default_instance_;
class VarType_ChannelDescDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<VarType_ChannelDesc>
      _instance;
} _VarType_ChannelDesc_default_instance_;
class VarType_TupleDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<VarType_Tuple> _instance;
} _VarType_Tuple_default_instance_;
class VarTypeDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<VarType> _instance;
} _VarType_default_instance_;
class VarDescDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<VarDesc> _instance;
} _VarDesc_default_instance_;
class BlockDescDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<BlockDesc> _instance;
} _BlockDesc_default_instance_;
class ProgramDescDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ProgramDesc> _instance;
} _ProgramDesc_default_instance_;

namespace protobuf_framework_2eproto {

PROTOBUF_CONSTEXPR_VAR::google::protobuf::internal::ParseTableField const
    TableStruct::entries[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
        {0, 0, 0, ::google::protobuf::internal::kInvalidMask, 0, 0},
};

PROTOBUF_CONSTEXPR_VAR::google::protobuf::internal::
    AuxillaryParseTableField const
        TableStruct::aux[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
            ::google::protobuf::internal::AuxillaryParseTableField(),
};
PROTOBUF_CONSTEXPR_VAR::google::protobuf::internal::ParseTable const
    TableStruct::schema[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
        {NULL, NULL, 0, -1, -1, -1, -1, NULL, false},
        {NULL, NULL, 0, -1, -1, -1, -1, NULL, false},
        {NULL, NULL, 0, -1, -1, -1, -1, NULL, false},
        {NULL, NULL, 0, -1, -1, -1, -1, NULL, false},
        {NULL, NULL, 0, -1, -1, -1, -1, NULL, false},
        {NULL, NULL, 0, -1, -1, -1, -1, NULL, false},
        {NULL, NULL, 0, -1, -1, -1, -1, NULL, false},
        {NULL, NULL, 0, -1, -1, -1, -1, NULL, false},
        {NULL, NULL, 0, -1, -1, -1, -1, NULL, false},
        {NULL, NULL, 0, -1, -1, -1, -1, NULL, false},
        {NULL, NULL, 0, -1, -1, -1, -1, NULL, false},
        {NULL, NULL, 0, -1, -1, -1, -1, NULL, false},
        {NULL, NULL, 0, -1, -1, -1, -1, NULL, false},
        {NULL, NULL, 0, -1, -1, -1, -1, NULL, false},
        {NULL, NULL, 0, -1, -1, -1, -1, NULL, false},
        {NULL, NULL, 0, -1, -1, -1, -1, NULL, false},
};

void TableStruct::InitDefaultsImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  _OpDesc_Attr_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_OpDesc_Attr_default_instance_);
  _OpDesc_Var_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_OpDesc_Var_default_instance_);
  _OpDesc_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_OpDesc_default_instance_);
  _OpProto_Var_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_OpProto_Var_default_instance_);
  _OpProto_Attr_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_OpProto_Attr_default_instance_);
  _OpProto_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_OpProto_default_instance_);
  _VarType_TensorDesc_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_VarType_TensorDesc_default_instance_);
  _VarType_LoDTensorDesc_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_VarType_LoDTensorDesc_default_instance_);
  _VarType_LoDTensorArrayDesc_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_VarType_LoDTensorArrayDesc_default_instance_);
  _VarType_ReaderDesc_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_VarType_ReaderDesc_default_instance_);
  _VarType_ChannelDesc_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_VarType_ChannelDesc_default_instance_);
  _VarType_Tuple_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_VarType_Tuple_default_instance_);
  _VarType_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_VarType_default_instance_);
  _VarDesc_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_VarDesc_default_instance_);
  _BlockDesc_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_BlockDesc_default_instance_);
  _ProgramDesc_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_ProgramDesc_default_instance_);
  _VarType_LoDTensorDesc_default_instance_._instance.get_mutable()->tensor_ =
      const_cast<::paddle_mobile::framework::proto::VarType_TensorDesc*>(
          ::paddle_mobile::framework::proto::VarType_TensorDesc::
              internal_default_instance());
  _VarType_LoDTensorArrayDesc_default_instance_._instance.get_mutable()
      ->tensor_ =
      const_cast<::paddle_mobile::framework::proto::VarType_TensorDesc*>(
          ::paddle_mobile::framework::proto::VarType_TensorDesc::
              internal_default_instance());
  _VarType_default_instance_._instance.get_mutable()->selected_rows_ =
      const_cast<::paddle_mobile::framework::proto::VarType_TensorDesc*>(
          ::paddle_mobile::framework::proto::VarType_TensorDesc::
              internal_default_instance());
  _VarType_default_instance_._instance.get_mutable()->lod_tensor_ =
      const_cast<::paddle_mobile::framework::proto::VarType_LoDTensorDesc*>(
          ::paddle_mobile::framework::proto::VarType_LoDTensorDesc::
              internal_default_instance());
  _VarType_default_instance_._instance.get_mutable()->tensor_array_ =
      const_cast<
          ::paddle_mobile::framework::proto::VarType_LoDTensorArrayDesc*>(
          ::paddle_mobile::framework::proto::VarType_LoDTensorArrayDesc::
              internal_default_instance());
  _VarType_default_instance_._instance.get_mutable()->reader_ =
      const_cast<::paddle_mobile::framework::proto::VarType_ReaderDesc*>(
          ::paddle_mobile::framework::proto::VarType_ReaderDesc::
              internal_default_instance());
  _VarType_default_instance_._instance.get_mutable()->channel_ =
      const_cast<::paddle_mobile::framework::proto::VarType_ChannelDesc*>(
          ::paddle_mobile::framework::proto::VarType_ChannelDesc::
              internal_default_instance());
  _VarType_default_instance_._instance.get_mutable()->tuple_ =
      const_cast<::paddle_mobile::framework::proto::VarType_Tuple*>(
          ::paddle_mobile::framework::proto::VarType_Tuple::
              internal_default_instance());
  _VarDesc_default_instance_._instance.get_mutable()
      ->type_ = const_cast<::paddle_mobile::framework::proto::VarType*>(
      ::paddle_mobile::framework::proto::VarType::internal_default_instance());
}

void InitDefaults() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &TableStruct::InitDefaultsImpl);
}
namespace {
void AddDescriptorsImpl() { InitDefaults(); }
}  // anonymous namespace

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}

}  // namespace protobuf_framework_2eproto

bool VarType_Type_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
    case 10:
    case 11:
    case 12:
    case 13:
    case 14:
    case 15:
    case 16:
    case 17:
    case 18:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const VarType_Type VarType::BOOL;
const VarType_Type VarType::INT16;
const VarType_Type VarType::INT32;
const VarType_Type VarType::INT64;
const VarType_Type VarType::FP16;
const VarType_Type VarType::FP32;
const VarType_Type VarType::FP64;
const VarType_Type VarType::LOD_TENSOR;
const VarType_Type VarType::SELECTED_ROWS;
const VarType_Type VarType::FEED_MINIBATCH;
const VarType_Type VarType::FETCH_LIST;
const VarType_Type VarType::STEP_SCOPES;
const VarType_Type VarType::LOD_RANK_TABLE;
const VarType_Type VarType::LOD_TENSOR_ARRAY;
const VarType_Type VarType::PLACE_LIST;
const VarType_Type VarType::READER;
const VarType_Type VarType::CHANNEL;
const VarType_Type VarType::RAW;
const VarType_Type VarType::TUPLE;
const VarType_Type VarType::Type_MIN;
const VarType_Type VarType::Type_MAX;
const int VarType::Type_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
bool AttrType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
      return true;
    default:
      return false;
  }
}

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int OpDesc_Attr::kNameFieldNumber;
const int OpDesc_Attr::kTypeFieldNumber;
const int OpDesc_Attr::kIFieldNumber;
const int OpDesc_Attr::kFFieldNumber;
const int OpDesc_Attr::kSFieldNumber;
const int OpDesc_Attr::kIntsFieldNumber;
const int OpDesc_Attr::kFloatsFieldNumber;
const int OpDesc_Attr::kStringsFieldNumber;
const int OpDesc_Attr::kBFieldNumber;
const int OpDesc_Attr::kBoolsFieldNumber;
const int OpDesc_Attr::kBlockIdxFieldNumber;
const int OpDesc_Attr::kLFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

OpDesc_Attr::OpDesc_Attr()
    : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_framework_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:paddle_mobile.framework.proto.OpDesc.Attr)
}
OpDesc_Attr::OpDesc_Attr(const OpDesc_Attr& from)
    : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      ints_(from.ints_),
      floats_(from.floats_),
      strings_(from.strings_),
      bools_(from.bools_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_name()) {
    name_.AssignWithDefault(
        &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
        from.name_);
  }
  s_.UnsafeSetDefault(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_s()) {
    s_.AssignWithDefault(
        &::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.s_);
  }
  ::memcpy(&type_, &from.type_,
           static_cast<size_t>(reinterpret_cast<char*>(&block_idx_) -
                               reinterpret_cast<char*>(&type_)) +
               sizeof(block_idx_));
  // @@protoc_insertion_point(copy_constructor:paddle_mobile.framework.proto.OpDesc.Attr)
}

void OpDesc_Attr::SharedCtor() {
  _cached_size_ = 0;
  name_.UnsafeSetDefault(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
  s_.UnsafeSetDefault(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&type_, 0, static_cast<size_t>(reinterpret_cast<char*>(&block_idx_) -
                                          reinterpret_cast<char*>(&type_)) +
                          sizeof(block_idx_));
}

OpDesc_Attr::~OpDesc_Attr() {
  // @@protoc_insertion_point(destructor:paddle_mobile.framework.proto.OpDesc.Attr)
  SharedDtor();
}

void OpDesc_Attr::SharedDtor() {
  name_.DestroyNoArena(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
  s_.DestroyNoArena(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void OpDesc_Attr::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const OpDesc_Attr& OpDesc_Attr::default_instance() {
  protobuf_framework_2eproto::InitDefaults();
  return *internal_default_instance();
}

OpDesc_Attr* OpDesc_Attr::New(::google::protobuf::Arena* arena) const {
  OpDesc_Attr* n = new OpDesc_Attr;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void OpDesc_Attr::Clear() {
  // @@protoc_insertion_point(message_clear_start:paddle_mobile.framework.proto.OpDesc.Attr)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ints_.Clear();
  floats_.Clear();
  strings_.Clear();
  bools_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(!name_.IsDefault(
          &::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*name_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(!s_.IsDefault(
          &::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*s_.UnsafeRawStringPointer())->clear();
    }
  }
  if (cached_has_bits & 252u) {
    ::memset(&type_, 0,
             static_cast<size_t>(reinterpret_cast<char*>(&block_idx_) -
                                 reinterpret_cast<char*>(&type_)) +
                 sizeof(block_idx_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool OpDesc_Attr::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) \
  if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::io::LazyStringOutputStream unknown_fields_string(
      ::google::protobuf::NewPermanentCallback(
          &_internal_metadata_,
          &::google::protobuf::internal::InternalMetadataWithArenaLite::
              mutable_unknown_fields));
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_string, false);
  // @@protoc_insertion_point(parse_start:paddle_mobile.framework.proto.OpDesc.Attr)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p =
        input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (
        ::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string name = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) ==
            static_cast<::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
              input, this->mutable_name()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required .paddle_mobile.framework.proto.AttrType type = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) ==
            static_cast<::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
               int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
              input, &value)));
          if (::paddle_mobile::framework::proto::AttrType_IsValid(value)) {
            set_type(static_cast<::paddle_mobile::framework::proto::AttrType>(
                value));
          } else {
            unknown_fields_stream.WriteVarint32(16u);
            unknown_fields_stream.WriteVarint32(
                static_cast<::google::protobuf::uint32>(value));
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 i = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) ==
            static_cast<::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_i();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
               ::google::protobuf::int32,
               ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(input,
                                                                         &i_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional float f = 4;
      case 4: {
        if (static_cast<::google::protobuf::uint8>(tag) ==
            static_cast<::google::protobuf::uint8>(37u /* 37 & 0xFF */)) {
          set_has_f();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
               float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
              input, &f_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string s = 5;
      case 5: {
        if (static_cast<::google::protobuf::uint8>(tag) ==
            static_cast<::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
              input, this->mutable_s()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated int32 ints = 6;
      case 6: {
        if (static_cast<::google::protobuf::uint8>(tag) ==
            static_cast<::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {
          DO_((
              ::google::protobuf::internal::WireFormatLite::
                  ReadRepeatedPrimitive<
                      ::google::protobuf::int32,
                      ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                      1, 48u, input, this->mutable_ints())));
        } else if (static_cast<::google::protobuf::uint8>(tag) ==
                   static_cast<::google::protobuf::uint8>(
                       50u /* 50 & 0xFF */)) {
          DO_((
              ::google::protobuf::internal::WireFormatLite::
                  ReadPackedPrimitiveNoInline<
                      ::google::protobuf::int32,
                      ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                      input, this->mutable_ints())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated float floats = 7;
      case 7: {
        if (static_cast<::google::protobuf::uint8>(tag) ==
            static_cast<::google::protobuf::uint8>(61u /* 61 & 0xFF */)) {
          DO_((
              ::google::protobuf::internal::WireFormatLite::
                  ReadRepeatedPrimitive<
                      float,
                      ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                      1, 61u, input, this->mutable_floats())));
        } else if (static_cast<::google::protobuf::uint8>(tag) ==
                   static_cast<::google::protobuf::uint8>(
                       58u /* 58 & 0xFF */)) {
          DO_((
              ::google::protobuf::internal::WireFormatLite::
                  ReadPackedPrimitiveNoInline<
                      float,
                      ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                      input, this->mutable_floats())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string strings = 8;
      case 8: {
        if (static_cast<::google::protobuf::uint8>(tag) ==
            static_cast<::google::protobuf::uint8>(66u /* 66 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
              input, this->add_strings()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool b = 10;
      case 10: {
        if (static_cast<::google::protobuf::uint8>(tag) ==
            static_cast<::google::protobuf::uint8>(80u /* 80 & 0xFF */)) {
          set_has_b();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
               bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
              input, &b_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated bool bools = 11;
      case 11: {
        if (static_cast<::google::protobuf::uint8>(tag) ==
            static_cast<::google::protobuf::uint8>(88u /* 88 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::
                   ReadRepeatedPrimitive<
                       bool,
                       ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                       1, 88u, input, this->mutable_bools())));
        } else if (static_cast<::google::protobuf::uint8>(tag) ==
                   static_cast<::google::protobuf::uint8>(
                       90u /* 90 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::
                   ReadPackedPrimitiveNoInline<
                       bool,
                       ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                       input, this->mutable_bools())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 block_idx = 12;
      case 12: {
        if (static_cast<::google::protobuf::uint8>(tag) ==
            static_cast<::google::protobuf::uint8>(96u /* 96 & 0xFF */)) {
          set_has_block_idx();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
               ::google::protobuf::int32,
               ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
              input, &block_idx_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int64 l = 13;
      case 13: {
        if (static_cast<::google::protobuf::uint8>(tag) ==
            static_cast<::google::protobuf::uint8>(104u /* 104 & 0xFF */)) {
          set_has_l();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
               ::google::protobuf::int64,
               ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(input,
                                                                         &l_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:paddle_mobile.framework.proto.OpDesc.Attr)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:paddle_mobile.framework.proto.OpDesc.Attr)
  return false;
#undef DO_
}

void OpDesc_Attr::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:paddle_mobile.framework.proto.OpDesc.Attr)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string name = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
        1, this->name(), output);
  }

  // required .paddle_mobile.framework.proto.AttrType type = 2;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(2, this->type(),
                                                            output);
  }

  // optional int32 i = 3;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->i(),
                                                             output);
  }

  // optional float f = 4;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(4, this->f(),
                                                             output);
  }

  // optional string s = 5;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
        5, this->s(), output);
  }

  // repeated int32 ints = 6;
  for (int i = 0, n = this->ints_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->ints(i),
                                                             output);
  }

  // repeated float floats = 7;
  for (int i = 0, n = this->floats_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(7, this->floats(i),
                                                             output);
  }

  // repeated string strings = 8;
  for (int i = 0, n = this->strings_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteString(
        8, this->strings(i), output);
  }

  // optional bool b = 10;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(10, this->b(),
                                                            output);
  }

  // repeated bool bools = 11;
  for (int i = 0, n = this->bools_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(11, this->bools(i),
                                                            output);
  }

  // optional int32 block_idx = 12;
  if (cached_has_bits & 0x00000080u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
        12, this->block_idx(), output);
  }

  // optional int64 l = 13;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(13, this->l(),
                                                             output);
  }

  output->WriteRaw(
      _internal_metadata_.unknown_fields().data(),
      static_cast<int>(_internal_metadata_.unknown_fields().size()));
  // @@protoc_insertion_point(serialize_end:paddle_mobile.framework.proto.OpDesc.Attr)
}

size_t OpDesc_Attr::RequiredFieldsByteSizeFallback() const {
  // @@protoc_insertion_point(required_fields_byte_size_fallback_start:paddle_mobile.framework.proto.OpDesc.Attr)
  size_t total_size = 0;

  if (has_name()) {
    // required string name = 1;
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                          this->name());
  }

  if (has_type()) {
    // required .paddle_mobile.framework.proto.AttrType type = 2;
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::EnumSize(
                          this->type());
  }

  return total_size;
}
size_t OpDesc_Attr::ByteSizeLong() const {
  // @@protoc_insertion_point(message_byte_size_start:paddle_mobile.framework.proto.OpDesc.Attr)
  size_t total_size = 0;

  total_size += _internal_metadata_.unknown_fields().size();

  if (((_has_bits_[0] & 0x00000005) ^ 0x00000005) ==
      0) {  // All required fields are present.
    // required string name = 1;
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                          this->name());

    // required .paddle_mobile.framework.proto.AttrType type = 2;
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::EnumSize(
                          this->type());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  // repeated int32 ints = 6;
  {
    size_t data_size =
        ::google::protobuf::internal::WireFormatLite::Int32Size(this->ints_);
    total_size +=
        1 * ::google::protobuf::internal::FromIntSize(this->ints_size());
    total_size += data_size;
  }

  // repeated float floats = 7;
  {
    unsigned int count = static_cast<unsigned int>(this->floats_size());
    size_t data_size = 4UL * count;
    total_size +=
        1 * ::google::protobuf::internal::FromIntSize(this->floats_size());
    total_size += data_size;
  }

  // repeated string strings = 8;
  total_size +=
      1 * ::google::protobuf::internal::FromIntSize(this->strings_size());
  for (int i = 0, n = this->strings_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
        this->strings(i));
  }

  // repeated bool bools = 11;
  {
    unsigned int count = static_cast<unsigned int>(this->bools_size());
    size_t data_size = 1UL * count;
    total_size +=
        1 * ::google::protobuf::internal::FromIntSize(this->bools_size());
    total_size += data_size;
  }

  // optional string s = 5;
  if (has_s()) {
    total_size +=
        1 + ::google::protobuf::internal::WireFormatLite::StringSize(this->s());
  }

  if (_has_bits_[0 / 32] & 248u) {
    // optional int32 i = 3;
    if (has_i()) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::Int32Size(
                            this->i());
    }

    // optional float f = 4;
    if (has_f()) {
      total_size += 1 + 4;
    }

    // optional bool b = 10;
    if (has_b()) {
      total_size += 1 + 1;
    }

    // optional int64 l = 13;
    if (has_l()) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::Int64Size(
                            this->l());
    }

    // optional int32 block_idx = 12;
    if (has_block_idx()) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::Int32Size(
                            this->block_idx());
    }
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void OpDesc_Attr::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const OpDesc_Attr*>(&from));
}

void OpDesc_Attr::MergeFrom(const OpDesc_Attr& from) {
  // @@protoc_insertion_point(class_specific_merge_from_start:paddle_mobile.framework.proto.OpDesc.Attr)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void)cached_has_bits;

  ints_.MergeFrom(from.ints_);
  floats_.MergeFrom(from.floats_);
  strings_.MergeFrom(from.strings_);
  bools_.MergeFrom(from.bools_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 255u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_name();
      name_.AssignWithDefault(
          &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
          from.name_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_s();
      s_.AssignWithDefault(
          &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
          from.s_);
    }
    if (cached_has_bits & 0x00000004u) {
      type_ = from.type_;
    }
    if (cached_has_bits & 0x00000008u) {
      i_ = from.i_;
    }
    if (cached_has_bits & 0x00000010u) {
      f_ = from.f_;
    }
    if (cached_has_bits & 0x00000020u) {
      b_ = from.b_;
    }
    if (cached_has_bits & 0x00000040u) {
      l_ = from.l_;
    }
    if (cached_has_bits & 0x00000080u) {
      block_idx_ = from.block_idx_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void OpDesc_Attr::CopyFrom(const OpDesc_Attr& from) {
  // @@protoc_insertion_point(class_specific_copy_from_start:paddle_mobile.framework.proto.OpDesc.Attr)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool OpDesc_Attr::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000005) != 0x00000005) return false;
  return true;
}

void OpDesc_Attr::Swap(OpDesc_Attr* other) {
  if (other == this) return;
  InternalSwap(other);
}
void OpDesc_Attr::InternalSwap(OpDesc_Attr* other) {
  using std::swap;
  ints_.InternalSwap(&other->ints_);
  floats_.InternalSwap(&other->floats_);
  strings_.InternalSwap(&other->strings_);
  bools_.InternalSwap(&other->bools_);
  name_.Swap(&other->name_);
  s_.Swap(&other->s_);
  swap(type_, other->type_);
  swap(i_, other->i_);
  swap(f_, other->f_);
  swap(b_, other->b_);
  swap(l_, other->l_);
  swap(block_idx_, other->block_idx_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::std::string OpDesc_Attr::GetTypeName() const {
  return "paddle_mobile.framework.proto.OpDesc.Attr";
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// OpDesc_Attr

// required string name = 1;
bool OpDesc_Attr::has_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void OpDesc_Attr::set_has_name() { _has_bits_[0] |= 0x00000001u; }
void OpDesc_Attr::clear_has_name() { _has_bits_[0] &= ~0x00000001u; }
void OpDesc_Attr::clear_name() {
  name_.ClearToEmptyNoArena(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_name();
}
const ::std::string& OpDesc_Attr::name() const {
  // @@protoc_insertion_point(field_get:paddle_mobile.framework.proto.OpDesc.Attr.name)
  return name_.GetNoArena();
}
void OpDesc_Attr::set_name(const ::std::string& value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
                   value);
  // @@protoc_insertion_point(field_set:paddle_mobile.framework.proto.OpDesc.Attr.name)
}
#if LANG_CXX11
void OpDesc_Attr::set_name(::std::string&& value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
                   ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:paddle_mobile.framework.proto.OpDesc.Attr.name)
}
#endif
void OpDesc_Attr::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
                   ::std::string(value));
  // @@protoc_insertion_point(field_set_char:paddle_mobile.framework.proto.OpDesc.Attr.name)
}
void OpDesc_Attr::set_name(const char* value, size_t size) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
                   ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:paddle_mobile.framework.proto.OpDesc.Attr.name)
}
::std::string* OpDesc_Attr::mutable_name() {
  set_has_name();
  // @@protoc_insertion_point(field_mutable:paddle_mobile.framework.proto.OpDesc.Attr.name)
  return name_.MutableNoArena(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* OpDesc_Attr::release_name() {
  // @@protoc_insertion_point(field_release:paddle_mobile.framework.proto.OpDesc.Attr.name)
  clear_has_name();
  return name_.ReleaseNoArena(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void OpDesc_Attr::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    set_has_name();
  } else {
    clear_has_name();
  }
  name_.SetAllocatedNoArena(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:paddle_mobile.framework.proto.OpDesc.Attr.name)
}

// required .paddle_mobile.framework.proto.AttrType type = 2;
bool OpDesc_Attr::has_type() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void OpDesc_Attr::set_has_type() { _has_bits_[0] |= 0x00000004u; }
void OpDesc_Attr::clear_has_type() { _has_bits_[0] &= ~0x00000004u; }
void OpDesc_Attr::clear_type() {
  type_ = 0;
  clear_has_type();
}
::paddle_mobile::framework::proto::AttrType OpDesc_Attr::type() const {
  // @@protoc_insertion_point(field_get:paddle_mobile.framework.proto.OpDesc.Attr.type)
  return static_cast<::paddle_mobile::framework::proto::AttrType>(type_);
}
void OpDesc_Attr::set_type(::paddle_mobile::framework::proto::AttrType value) {
  assert(::paddle_mobile::framework::proto::AttrType_IsValid(value));
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:paddle_mobile.framework.proto.OpDesc.Attr.type)
}

// optional int32 i = 3;
bool OpDesc_Attr::has_i() const { return (_has_bits_[0] & 0x00000008u) != 0; }
void OpDesc_Attr::set_has_i() { _has_bits_[0] |= 0x00000008u; }
void OpDesc_Attr::clear_has_i() { _has_bits_[0] &= ~0x00000008u; }
void OpDesc_Attr::clear_i() {
  i_ = 0;
  clear_has_i();
}
::google::protobuf::int32 OpDesc_Attr::i() const {
  // @@protoc_insertion_point(field_get:paddle_mobile.framework.proto.OpDesc.Attr.i)
  return i_;
}
void OpDesc_Attr::set_i(::google::protobuf::int32 value) {
  set_has_i();
  i_ = value;
  // @@protoc_insertion_point(field_set:paddle_mobile.framework.proto.OpDesc.Attr.i)
}

// optional float f = 4;
bool OpDesc_Attr::has_f() const { return (_has_bits_[0] & 0x00000010u) != 0; }
void OpDesc_Attr::set_has_f() { _has_bits_[0] |= 0x00000010u; }
void OpDesc_Attr::clear_has_f() { _has_bits_[0] &= ~0x00000010u; }
void OpDesc_Attr::clear_f() {
  f_ = 0;
  clear_has_f();
}
float OpDesc_Attr::f() const {
  // @@protoc_insertion_point(field_get:paddle_mobile.framework.proto.OpDesc.Attr.f)
  return f_;
}
void OpDesc_Attr::set_f(float value) {
  set_has_f();
  f_ = value;
  // @@protoc_insertion_point(field_set:paddle_mobile.framework.proto.OpDesc.Attr.f)
}

// optional string s = 5;
bool OpDesc_Attr::has_s() const { return (_has_bits_[0] & 0x00000002u) != 0; }
void OpDesc_Attr::set_has_s() { _has_bits_[0] |= 0x00000002u; }
void OpDesc_Attr::clear_has_s() { _has_bits_[0] &= ~0x00000002u; }
void OpDesc_Attr::clear_s() {
  s_.ClearToEmptyNoArena(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_s();
}
const ::std::string& OpDesc_Attr::s() const {
  // @@protoc_insertion_point(field_get:paddle_mobile.framework.proto.OpDesc.Attr.s)
  return s_.GetNoArena();
}
void OpDesc_Attr::set_s(const ::std::string& value) {
  set_has_s();
  s_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
                value);
  // @@protoc_insertion_point(field_set:paddle_mobile.framework.proto.OpDesc.Attr.s)
}
#if LANG_CXX11
void OpDesc_Attr::set_s(::std::string&& value) {
  set_has_s();
  s_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
                ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:paddle_mobile.framework.proto.OpDesc.Attr.s)
}
#endif
void OpDesc_Attr::set_s(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_s();
  s_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
                ::std::string(value));
  // @@protoc_insertion_point(field_set_char:paddle_mobile.framework.proto.OpDesc.Attr.s)
}
void OpDesc_Attr::set_s(const char* value, size_t size) {
  set_has_s();
  s_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
                ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:paddle_mobile.framework.proto.OpDesc.Attr.s)
}
::std::string* OpDesc_Attr::mutable_s() {
  set_has_s();
  // @@protoc_insertion_point(field_mutable:paddle_mobile.framework.proto.OpDesc.Attr.s)
  return s_.MutableNoArena(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* OpDesc_Attr::release_s() {
  // @@protoc_insertion_point(field_release:paddle_mobile.framework.proto.OpDesc.Attr.s)
  clear_has_s();
  return s_.ReleaseNoArena(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void OpDesc_Attr::set_allocated_s(::std::string* s) {
  if (s != NULL) {
    set_has_s();
  } else {
    clear_has_s();
  }
  s_.SetAllocatedNoArena(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited(), s);
  // @@protoc_insertion_point(field_set_allocated:paddle_mobile.framework.proto.OpDesc.Attr.s)
}

// repeated int32 ints = 6;
int OpDesc_Attr::ints_size() const { return ints_.size(); }
void OpDesc_Attr::clear_ints() { ints_.Clear(); }
::google::protobuf::int32 OpDesc_Attr::ints(int index) const {
  // @@protoc_insertion_point(field_get:paddle_mobile.framework.proto.OpDesc.Attr.ints)
  return ints_.Get(index);
}
void OpDesc_Attr::set_ints(int index, ::google::protobuf::int32 value) {
  ints_.Set(index, value);
  // @@protoc_insertion_point(field_set:paddle_mobile.framework.proto.OpDesc.Attr.ints)
}
void OpDesc_Attr::add_ints(::google::protobuf::int32 value) {
  ints_.Add(value);
  // @@protoc_insertion_point(field_add:paddle_mobile.framework.proto.OpDesc.Attr.ints)
}
const ::google::protobuf::RepeatedField<::google::protobuf::int32>&
OpDesc_Attr::ints() const {
  // @@protoc_insertion_point(field_list:paddle_mobile.framework.proto.OpDesc.Attr.ints)
  return ints_;
}
::google::protobuf::RepeatedField<::google::protobuf::int32>*
OpDesc_Attr::mutable_ints() {
  // @@protoc_insertion_point(field_mutable_list:paddle_mobile.framework.proto.OpDesc.Attr.ints)
  return &ints_;
}

// repeated float floats = 7;
int OpDesc_Attr::floats_size() const { return floats_.size(); }
void OpDesc_Attr::clear_floats() { floats_.Clear(); }
float OpDesc_Attr::floats(int index) const {
  // @@protoc_insertion_point(field_get:paddle_mobile.framework.proto.OpDesc.Attr.floats)
  return floats_.Get(index);
}
void OpDesc_Attr::set_floats(int index, float value) {
  floats_.Set(index, value);
  // @@protoc_insertion_point(field_set:paddle_mobile.framework.proto.OpDesc.Attr.floats)
}
void OpDesc_Attr::add_floats(float value) {
  floats_.Add(value);
  // @@protoc_insertion_point(field_add:paddle_mobile.framework.proto.OpDesc.Attr.floats)
}
const ::google::protobuf::RepeatedField<float>& OpDesc_Attr::floats() const {
  // @@protoc_insertion_point(field_list:paddle_mobile.framework.proto.OpDesc.Attr.floats)
  return floats_;
}
::google::protobuf::RepeatedField<float>* OpDesc_Attr::mutable_floats() {
  // @@protoc_insertion_point(field_mutable_list:paddle_mobile.framework.proto.OpDesc.Attr.floats)
  return &floats_;
}

// repeated string strings = 8;
int OpDesc_Attr::strings_size() const { return strings_.size(); }
void OpDesc_Attr::clear_strings() { strings_.Clear(); }
const ::std::string& OpDesc_Attr::strings(int index) const {
  // @@protoc_insertion_point(field_get:paddle_mobile.framework.proto.OpDesc.Attr.strings)
  return strings_.Get(index);
}
::std::string* OpDesc_Attr::mutable_strings(int index) {
  // @@protoc_insertion_point(field_mutable:paddle_mobile.framework.proto.OpDesc.Attr.strings)
  return strings_.Mutable(index);
}
void OpDesc_Attr::set_strings(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:paddle_mobile.framework.proto.OpDesc.Attr.strings)
  strings_.Mutable(index)->assign(value);
}
#if LANG_CXX11
void OpDesc_Attr::set_strings(int index, ::std::string&& value) {
  // @@protoc_insertion_point(field_set:paddle_mobile.framework.proto.OpDesc.Attr.strings)
  strings_.Mutable(index)->assign(std::move(value));
}
#endif
void OpDesc_Attr::set_strings(int index, const char* value) {
  GOOGLE_DCHECK(value != NULL);
  strings_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:paddle_mobile.framework.proto.OpDesc.Attr.strings)
}
void OpDesc_Attr::set_strings(int index, const char* value, size_t size) {
  strings_.Mutable(index)->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:paddle_mobile.framework.proto.OpDesc.Attr.strings)
}
::std::string* OpDesc_Attr::add_strings() {
  // @@protoc_insertion_point(field_add_mutable:paddle_mobile.framework.proto.OpDesc.Attr.strings)
  return strings_.Add();
}
void OpDesc_Attr::add_strings(const ::std::string& value) {
  strings_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:paddle_mobile.framework.proto.OpDesc.Attr.strings)
}
#if LANG_CXX11
void OpDesc_Attr::add_strings(::std::string&& value) {
  strings_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:paddle_mobile.framework.proto.OpDesc.Attr.strings)
}
#endif
void OpDesc_Attr::add_strings(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  strings_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:paddle_mobile.framework.proto.OpDesc.Attr.strings)
}
void OpDesc_Attr::add_strings(const char* value, size_t size) {
  strings_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:paddle_mobile.framework.proto.OpDesc.Attr.strings)
}
const ::google::protobuf::RepeatedPtrField<::std::string>&
OpDesc_Attr::strings() const {
  // @@protoc_insertion_point(field_list:paddle_mobile.framework.proto.OpDesc.Attr.strings)
  return strings_;
}
::google::protobuf::RepeatedPtrField<::std::string>*
OpDesc_Attr::mutable_strings() {
  // @@protoc_insertion_point(field_mutable_list:paddle_mobile.framework.proto.OpDesc.Attr.strings)
  return &strings_;
}

// optional bool b = 10;
bool OpDesc_Attr::has_b() const { return (_has_bits_[0] & 0x00000020u) != 0; }
void OpDesc_Attr::set_has_b() { _has_bits_[0] |= 0x00000020u; }
void OpDesc_Attr::clear_has_b() { _has_bits_[0] &= ~0x00000020u; }
void OpDesc_Attr::clear_b() {
  b_ = false;
  clear_has_b();
}
bool OpDesc_Attr::b() const {
  // @@protoc_insertion_point(field_get:paddle_mobile.framework.proto.OpDesc.Attr.b)
  return b_;
}
void OpDesc_Attr::set_b(bool value) {
  set_has_b();
  b_ = value;
  // @@protoc_insertion_point(field_set:paddle_mobile.framework.proto.OpDesc.Attr.b)
}

// repeated bool bools = 11;
int OpDesc_Attr::bools_size() const { return bools_.size(); }
void OpDesc_Attr::clear_bools() { bools_.Clear(); }
bool OpDesc_Attr::bools(int index) const {
  // @@protoc_insertion_point(field_get:paddle_mobile.framework.proto.OpDesc.Attr.bools)
  return bools_.Get(index);
}
void OpDesc_Attr::set_bools(int index, bool value) {
  bools_.Set(index, value);
  // @@protoc_insertion_point(field_set:paddle_mobile.framework.proto.OpDesc.Attr.bools)
}
void OpDesc_Attr::add_bools(bool value) {
  bools_.Add(value);
  // @@protoc_insertion_point(field_add:paddle_mobile.framework.proto.OpDesc.Attr.bools)
}
const ::google::protobuf::RepeatedField<bool>& OpDesc_Attr::bools() const {
  // @@protoc_insertion_point(field_list:paddle_mobile.framework.proto.OpDesc.Attr.bools)
  return bools_;
}
::google::protobuf::RepeatedField<bool>* OpDesc_Attr::mutable_bools() {
  // @@protoc_insertion_point(field_mutable_list:paddle_mobile.framework.proto.OpDesc.Attr.bools)
  return &bools_;
}

// optional int32 block_idx = 12;
bool OpDesc_Attr::has_block_idx() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
void OpDesc_Attr::set_has_block_idx() { _has_bits_[0] |= 0x00000080u; }
void OpDesc_Attr::clear_has_block_idx() { _has_bits_[0] &= ~0x00000080u; }
void OpDesc_Attr::clear_block_idx() {
  block_idx_ = 0;
  clear_has_block_idx();
}
::google::protobuf::int32 OpDesc_Attr::block_idx() const {
  // @@protoc_insertion_point(field_get:paddle_mobile.framework.proto.OpDesc.Attr.block_idx)
  return block_idx_;
}
void OpDesc_Attr::set_block_idx(::google::protobuf::int32 value) {
  set_has_block_idx();
  block_idx_ = value;
  // @@protoc_insertion_point(field_set:paddle_mobile.framework.proto.OpDesc.Attr.block_idx)
}

// optional int64 l = 13;
bool OpDesc_Attr::has_l() const { return (_has_bits_[0] & 0x00000040u) != 0; }
void OpDesc_Attr::set_has_l() { _has_bits_[0] |= 0x00000040u; }
void OpDesc_Attr::clear_has_l() { _has_bits_[0] &= ~0x00000040u; }
void OpDesc_Attr::clear_l() {
  l_ = GOOGLE_LONGLONG(0);
  clear_has_l();
}
::google::protobuf::int64 OpDesc_Attr::l() const {
  // @@protoc_insertion_point(field_get:paddle_mobile.framework.proto.OpDesc.Attr.l)
  return l_;
}
void OpDesc_Attr::set_l(::google::protobuf::int64 value) {
  set_has_l();
  l_ = value;
  // @@protoc_insertion_point(field_set:paddle_mobile.framework.proto.OpDesc.Attr.l)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int OpDesc_Var::kParameterFieldNumber;
const int OpDesc_Var::kArgumentsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

OpDesc_Var::OpDesc_Var()
    : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_framework_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:paddle_mobile.framework.proto.OpDesc.Var)
}
OpDesc_Var::OpDesc_Var(const OpDesc_Var& from)
    : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      arguments_(from.arguments_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  parameter_.UnsafeSetDefault(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_parameter()) {
    parameter_.AssignWithDefault(
        &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
        from.parameter_);
  }
  // @@protoc_insertion_point(copy_constructor:paddle_mobile.framework.proto.OpDesc.Var)
}

void OpDesc_Var::SharedCtor() {
  _cached_size_ = 0;
  parameter_.UnsafeSetDefault(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

OpDesc_Var::~OpDesc_Var() {
  // @@protoc_insertion_point(destructor:paddle_mobile.framework.proto.OpDesc.Var)
  SharedDtor();
}

void OpDesc_Var::SharedDtor() {
  parameter_.DestroyNoArena(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void OpDesc_Var::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const OpDesc_Var& OpDesc_Var::default_instance() {
  protobuf_framework_2eproto::InitDefaults();
  return *internal_default_instance();
}

OpDesc_Var* OpDesc_Var::New(::google::protobuf::Arena* arena) const {
  OpDesc_Var* n = new OpDesc_Var;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void OpDesc_Var::Clear() {
  // @@protoc_insertion_point(message_clear_start:paddle_mobile.framework.proto.OpDesc.Var)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  arguments_.Clear();
  if (has_parameter()) {
    GOOGLE_DCHECK(!parameter_.IsDefault(
        &::google::protobuf::internal::GetEmptyStringAlreadyInited()));
    (*parameter_.UnsafeRawStringPointer())->clear();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool OpDesc_Var::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) \
  if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::io::LazyStringOutputStream unknown_fields_string(
      ::google::protobuf::NewPermanentCallback(
          &_internal_metadata_,
          &::google::protobuf::internal::InternalMetadataWithArenaLite::
              mutable_unknown_fields));
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_string, false);
  // @@protoc_insertion_point(parse_start:paddle_mobile.framework.proto.OpDesc.Var)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p =
        input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (
        ::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string parameter = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) ==
            static_cast<::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
              input, this->mutable_parameter()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string arguments = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) ==
            static_cast<::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
              input, this->add_arguments()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:paddle_mobile.framework.proto.OpDesc.Var)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:paddle_mobile.framework.proto.OpDesc.Var)
  return false;
#undef DO_
}

void OpDesc_Var::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:paddle_mobile.framework.proto.OpDesc.Var)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string parameter = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
        1, this->parameter(), output);
  }

  // repeated string arguments = 2;
  for (int i = 0, n = this->arguments_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteString(
        2, this->arguments(i), output);
  }

  output->WriteRaw(
      _internal_metadata_.unknown_fields().data(),
      static_cast<int>(_internal_metadata_.unknown_fields().size()));
  // @@protoc_insertion_point(serialize_end:paddle_mobile.framework.proto.OpDesc.Var)
}

size_t OpDesc_Var::ByteSizeLong() const {
  // @@protoc_insertion_point(message_byte_size_start:paddle_mobile.framework.proto.OpDesc.Var)
  size_t total_size = 0;

  total_size += _internal_metadata_.unknown_fields().size();

  // required string parameter = 1;
  if (has_parameter()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                          this->parameter());
  }
  // repeated string arguments = 2;
  total_size +=
      1 * ::google::protobuf::internal::FromIntSize(this->arguments_size());
  for (int i = 0, n = this->arguments_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
        this->arguments(i));
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void OpDesc_Var::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const OpDesc_Var*>(&from));
}

void OpDesc_Var::MergeFrom(const OpDesc_Var& from) {
  // @@protoc_insertion_point(class_specific_merge_from_start:paddle_mobile.framework.proto.OpDesc.Var)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void)cached_has_bits;

  arguments_.MergeFrom(from.arguments_);
  if (from.has_parameter()) {
    set_has_parameter();
    parameter_.AssignWithDefault(
        &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
        from.parameter_);
  }
}

void OpDesc_Var::CopyFrom(const OpDesc_Var& from) {
  // @@protoc_insertion_point(class_specific_copy_from_start:paddle_mobile.framework.proto.OpDesc.Var)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool OpDesc_Var::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  return true;
}

void OpDesc_Var::Swap(OpDesc_Var* other) {
  if (other == this) return;
  InternalSwap(other);
}
void OpDesc_Var::InternalSwap(OpDesc_Var* other) {
  using std::swap;
  arguments_.InternalSwap(&other->arguments_);
  parameter_.Swap(&other->parameter_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::std::string OpDesc_Var::GetTypeName() const {
  return "paddle_mobile.framework.proto.OpDesc.Var";
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// OpDesc_Var

// required string parameter = 1;
bool OpDesc_Var::has_parameter() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void OpDesc_Var::set_has_parameter() { _has_bits_[0] |= 0x00000001u; }
void OpDesc_Var::clear_has_parameter() { _has_bits_[0] &= ~0x00000001u; }
void OpDesc_Var::clear_parameter() {
  parameter_.ClearToEmptyNoArena(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_parameter();
}
const ::std::string& OpDesc_Var::parameter() const {
  // @@protoc_insertion_point(field_get:paddle_mobile.framework.proto.OpDesc.Var.parameter)
  return parameter_.GetNoArena();
}
void OpDesc_Var::set_parameter(const ::std::string& value) {
  set_has_parameter();
  parameter_.SetNoArena(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:paddle_mobile.framework.proto.OpDesc.Var.parameter)
}
#if LANG_CXX11
void OpDesc_Var::set_parameter(::std::string&& value) {
  set_has_parameter();
  parameter_.SetNoArena(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:paddle_mobile.framework.proto.OpDesc.Var.parameter)
}
#endif
void OpDesc_Var::set_parameter(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_parameter();
  parameter_.SetNoArena(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(value));
  // @@protoc_insertion_point(field_set_char:paddle_mobile.framework.proto.OpDesc.Var.parameter)
}
void OpDesc_Var::set_parameter(const char* value, size_t size) {
  set_has_parameter();
  parameter_.SetNoArena(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:paddle_mobile.framework.proto.OpDesc.Var.parameter)
}
::std::string* OpDesc_Var::mutable_parameter() {
  set_has_parameter();
  // @@protoc_insertion_point(field_mutable:paddle_mobile.framework.proto.OpDesc.Var.parameter)
  return parameter_.MutableNoArena(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* OpDesc_Var::release_parameter() {
  // @@protoc_insertion_point(field_release:paddle_mobile.framework.proto.OpDesc.Var.parameter)
  clear_has_parameter();
  return parameter_.ReleaseNoArena(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void OpDesc_Var::set_allocated_parameter(::std::string* parameter) {
  if (parameter != NULL) {
    set_has_parameter();
  } else {
    clear_has_parameter();
  }
  parameter_.SetAllocatedNoArena(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited(), parameter);
  // @@protoc_insertion_point(field_set_allocated:paddle_mobile.framework.proto.OpDesc.Var.parameter)
}

// repeated string arguments = 2;
int OpDesc_Var::arguments_size() const { return arguments_.size(); }
void OpDesc_Var::clear_arguments() { arguments_.Clear(); }
const ::std::string& OpDesc_Var::arguments(int index) const {
  // @@protoc_insertion_point(field_get:paddle_mobile.framework.proto.OpDesc.Var.arguments)
  return arguments_.Get(index);
}
::std::string* OpDesc_Var::mutable_arguments(int index) {
  // @@protoc_insertion_point(field_mutable:paddle_mobile.framework.proto.OpDesc.Var.arguments)
  return arguments_.Mutable(index);
}
void OpDesc_Var::set_arguments(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:paddle_mobile.framework.proto.OpDesc.Var.arguments)
  arguments_.Mutable(index)->assign(value);
}
#if LANG_CXX11
void OpDesc_Var::set_arguments(int index, ::std::string&& value) {
  // @@protoc_insertion_point(field_set:paddle_mobile.framework.proto.OpDesc.Var.arguments)
  arguments_.Mutable(index)->assign(std::move(value));
}
#endif
void OpDesc_Var::set_arguments(int index, const char* value) {
  GOOGLE_DCHECK(value != NULL);
  arguments_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:paddle_mobile.framework.proto.OpDesc.Var.arguments)
}
void OpDesc_Var::set_arguments(int index, const char* value, size_t size) {
  arguments_.Mutable(index)->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:paddle_mobile.framework.proto.OpDesc.Var.arguments)
}
::std::string* OpDesc_Var::add_arguments() {
  // @@protoc_insertion_point(field_add_mutable:paddle_mobile.framework.proto.OpDesc.Var.arguments)
  return arguments_.Add();
}
void OpDesc_Var::add_arguments(const ::std::string& value) {
  arguments_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:paddle_mobile.framework.proto.OpDesc.Var.arguments)
}
#if LANG_CXX11
void OpDesc_Var::add_arguments(::std::string&& value) {
  arguments_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:paddle_mobile.framework.proto.OpDesc.Var.arguments)
}
#endif
void OpDesc_Var::add_arguments(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  arguments_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:paddle_mobile.framework.proto.OpDesc.Var.arguments)
}
void OpDesc_Var::add_arguments(const char* value, size_t size) {
  arguments_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:paddle_mobile.framework.proto.OpDesc.Var.arguments)
}
const ::google::protobuf::RepeatedPtrField<::std::string>&
OpDesc_Var::arguments() const {
  // @@protoc_insertion_point(field_list:paddle_mobile.framework.proto.OpDesc.Var.arguments)
  return arguments_;
}
::google::protobuf::RepeatedPtrField<::std::string>*
OpDesc_Var::mutable_arguments() {
  // @@protoc_insertion_point(field_mutable_list:paddle_mobile.framework.proto.OpDesc.Var.arguments)
  return &arguments_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int OpDesc::kTypeFieldNumber;
const int OpDesc::kInputsFieldNumber;
const int OpDesc::kOutputsFieldNumber;
const int OpDesc::kAttrsFieldNumber;
const int OpDesc::kIsTargetFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

OpDesc::OpDesc()
    : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_framework_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:paddle_mobile.framework.proto.OpDesc)
}
OpDesc::OpDesc(const OpDesc& from)
    : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      inputs_(from.inputs_),
      outputs_(from.outputs_),
      attrs_(from.attrs_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  type_.UnsafeSetDefault(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_type()) {
    type_.AssignWithDefault(
        &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
        from.type_);
  }
  is_target_ = from.is_target_;
  // @@protoc_insertion_point(copy_constructor:paddle_mobile.framework.proto.OpDesc)
}

void OpDesc::SharedCtor() {
  _cached_size_ = 0;
  type_.UnsafeSetDefault(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
  is_target_ = false;
}

OpDesc::~OpDesc() {
  // @@protoc_insertion_point(destructor:paddle_mobile.framework.proto.OpDesc)
  SharedDtor();
}

void OpDesc::SharedDtor() {
  type_.DestroyNoArena(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void OpDesc::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const OpDesc& OpDesc::default_instance() {
  protobuf_framework_2eproto::InitDefaults();
  return *internal_default_instance();
}

OpDesc* OpDesc::New(::google::protobuf::Arena* arena) const {
  OpDesc* n = new OpDesc;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void OpDesc::Clear() {
  // @@protoc_insertion_point(message_clear_start:paddle_mobile.framework.proto.OpDesc)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  inputs_.Clear();
  outputs_.Clear();
  attrs_.Clear();
  if (has_type()) {
    GOOGLE_DCHECK(!type_.IsDefault(
        &::google::protobuf::internal::GetEmptyStringAlreadyInited()));
    (*type_.UnsafeRawStringPointer())->clear();
  }
  is_target_ = false;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool OpDesc::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) \
  if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::io::LazyStringOutputStream unknown_fields_string(
      ::google::protobuf::NewPermanentCallback(
          &_internal_metadata_,
          &::google::protobuf::internal::InternalMetadataWithArenaLite::
              mutable_unknown_fields));
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_string, false);
  // @@protoc_insertion_point(parse_start:paddle_mobile.framework.proto.OpDesc)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p =
        input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (
        ::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .paddle_mobile.framework.proto.OpDesc.Var inputs = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) ==
            static_cast<::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::
                  ReadMessageNoVirtual(input, add_inputs()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .paddle_mobile.framework.proto.OpDesc.Var outputs = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) ==
            static_cast<::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::
                  ReadMessageNoVirtual(input, add_outputs()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required string type = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) ==
            static_cast<::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
              input, this->mutable_type()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .paddle_mobile.framework.proto.OpDesc.Attr attrs = 4;
      case 4: {
        if (static_cast<::google::protobuf::uint8>(tag) ==
            static_cast<::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::
                  ReadMessageNoVirtual(input, add_attrs()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool is_target = 5 [default = false];
      case 5: {
        if (static_cast<::google::protobuf::uint8>(tag) ==
            static_cast<::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {
          set_has_is_target();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
               bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
              input, &is_target_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:paddle_mobile.framework.proto.OpDesc)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:paddle_mobile.framework.proto.OpDesc)
  return false;
#undef DO_
}

void OpDesc::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:paddle_mobile.framework.proto.OpDesc)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void)cached_has_bits;

  // repeated .paddle_mobile.framework.proto.OpDesc.Var inputs = 1;
  for (unsigned int i = 0, n = static_cast<unsigned int>(this->inputs_size());
       i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
        1, this->inputs(static_cast<int>(i)), output);
  }

  // repeated .paddle_mobile.framework.proto.OpDesc.Var outputs = 2;
  for (unsigned int i = 0, n = static_cast<unsigned int>(this->outputs_size());
       i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
        2, this->outputs(static_cast<int>(i)), output);
  }

  cached_has_bits = _has_bits_[0];
  // required string type = 3;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
        3, this->type(), output);
  }

  // repeated .paddle_mobile.framework.proto.OpDesc.Attr attrs = 4;
  for (unsigned int i = 0, n = static_cast<unsigned int>(this->attrs_size());
       i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
        4, this->attrs(static_cast<int>(i)), output);
  }

  // optional bool is_target = 5 [default = false];
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(
        5, this->is_target(), output);
  }

  output->WriteRaw(
      _internal_metadata_.unknown_fields().data(),
      static_cast<int>(_internal_metadata_.unknown_fields().size()));
  // @@protoc_insertion_point(serialize_end:paddle_mobile.framework.proto.OpDesc)
}

size_t OpDesc::ByteSizeLong() const {
  // @@protoc_insertion_point(message_byte_size_start:paddle_mobile.framework.proto.OpDesc)
  size_t total_size = 0;

  total_size += _internal_metadata_.unknown_fields().size();

  // required string type = 3;
  if (has_type()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                          this->type());
  }
  // repeated .paddle_mobile.framework.proto.OpDesc.Var inputs = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->inputs_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
          ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
              this->inputs(static_cast<int>(i)));
    }
  }

  // repeated .paddle_mobile.framework.proto.OpDesc.Var outputs = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->outputs_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
          ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
              this->outputs(static_cast<int>(i)));
    }
  }

  // repeated .paddle_mobile.framework.proto.OpDesc.Attr attrs = 4;
  {
    unsigned int count = static_cast<unsigned int>(this->attrs_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
          ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
              this->attrs(static_cast<int>(i)));
    }
  }

  // optional bool is_target = 5 [default = false];
  if (has_is_target()) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void OpDesc::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const OpDesc*>(&from));
}

void OpDesc::MergeFrom(const OpDesc& from) {
  // @@protoc_insertion_point(class_specific_merge_from_start:paddle_mobile.framework.proto.OpDesc)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void)cached_has_bits;

  inputs_.MergeFrom(from.inputs_);
  outputs_.MergeFrom(from.outputs_);
  attrs_.MergeFrom(from.attrs_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_type();
      type_.AssignWithDefault(
          &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
          from.type_);
    }
    if (cached_has_bits & 0x00000002u) {
      is_target_ = from.is_target_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void OpDesc::CopyFrom(const OpDesc& from) {
  // @@protoc_insertion_point(class_specific_copy_from_start:paddle_mobile.framework.proto.OpDesc)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool OpDesc::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  if (!::google::protobuf::internal::AllAreInitialized(this->inputs()))
    return false;
  if (!::google::protobuf::internal::AllAreInitialized(this->outputs()))
    return false;
  if (!::google::protobuf::internal::AllAreInitialized(this->attrs()))
    return false;
  return true;
}

void OpDesc::Swap(OpDesc* other) {
  if (other == this) return;
  InternalSwap(other);
}
void OpDesc::InternalSwap(OpDesc* other) {
  using std::swap;
  inputs_.InternalSwap(&other->inputs_);
  outputs_.InternalSwap(&other->outputs_);
  attrs_.InternalSwap(&other->attrs_);
  type_.Swap(&other->type_);
  swap(is_target_, other->is_target_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::std::string OpDesc::GetTypeName() const {
  return "paddle_mobile.framework.proto.OpDesc";
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// OpDesc

// required string type = 3;
bool OpDesc::has_type() const { return (_has_bits_[0] & 0x00000001u) != 0; }
void OpDesc::set_has_type() { _has_bits_[0] |= 0x00000001u; }
void OpDesc::clear_has_type() { _has_bits_[0] &= ~0x00000001u; }
void OpDesc::clear_type() {
  type_.ClearToEmptyNoArena(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_type();
}
const ::std::string& OpDesc::type() const {
  // @@protoc_insertion_point(field_get:paddle_mobile.framework.proto.OpDesc.type)
  return type_.GetNoArena();
}
void OpDesc::set_type(const ::std::string& value) {
  set_has_type();
  type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
                   value);
  // @@protoc_insertion_point(field_set:paddle_mobile.framework.proto.OpDesc.type)
}
#if LANG_CXX11
void OpDesc::set_type(::std::string&& value) {
  set_has_type();
  type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
                   ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:paddle_mobile.framework.proto.OpDesc.type)
}
#endif
void OpDesc::set_type(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_type();
  type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
                   ::std::string(value));
  // @@protoc_insertion_point(field_set_char:paddle_mobile.framework.proto.OpDesc.type)
}
void OpDesc::set_type(const char* value, size_t size) {
  set_has_type();
  type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
                   ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:paddle_mobile.framework.proto.OpDesc.type)
}
::std::string* OpDesc::mutable_type() {
  set_has_type();
  // @@protoc_insertion_point(field_mutable:paddle_mobile.framework.proto.OpDesc.type)
  return type_.MutableNoArena(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* OpDesc::release_type() {
  // @@protoc_insertion_point(field_release:paddle_mobile.framework.proto.OpDesc.type)
  clear_has_type();
  return type_.ReleaseNoArena(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void OpDesc::set_allocated_type(::std::string* type) {
  if (type != NULL) {
    set_has_type();
  } else {
    clear_has_type();
  }
  type_.SetAllocatedNoArena(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited(), type);
  // @@protoc_insertion_point(field_set_allocated:paddle_mobile.framework.proto.OpDesc.type)
}

// repeated .paddle_mobile.framework.proto.OpDesc.Var inputs = 1;
int OpDesc::inputs_size() const { return inputs_.size(); }
void OpDesc::clear_inputs() { inputs_.Clear(); }
const ::paddle_mobile::framework::proto::OpDesc_Var& OpDesc::inputs(
    int index) const {
  // @@protoc_insertion_point(field_get:paddle_mobile.framework.proto.OpDesc.inputs)
  return inputs_.Get(index);
}
::paddle_mobile::framework::proto::OpDesc_Var* OpDesc::mutable_inputs(
    int index) {
  // @@protoc_insertion_point(field_mutable:paddle_mobile.framework.proto.OpDesc.inputs)
  return inputs_.Mutable(index);
}
::paddle_mobile::framework::proto::OpDesc_Var* OpDesc::add_inputs() {
  // @@protoc_insertion_point(field_add:paddle_mobile.framework.proto.OpDesc.inputs)
  return inputs_.Add();
}
::google::protobuf::RepeatedPtrField<
    ::paddle_mobile::framework::proto::OpDesc_Var>*
OpDesc::mutable_inputs() {
  // @@protoc_insertion_point(field_mutable_list:paddle_mobile.framework.proto.OpDesc.inputs)
  return &inputs_;
}
const ::google::protobuf::RepeatedPtrField<
    ::paddle_mobile::framework::proto::OpDesc_Var>&
OpDesc::inputs() const {
  // @@protoc_insertion_point(field_list:paddle_mobile.framework.proto.OpDesc.inputs)
  return inputs_;
}

// repeated .paddle_mobile.framework.proto.OpDesc.Var outputs = 2;
int OpDesc::outputs_size() const { return outputs_.size(); }
void OpDesc::clear_outputs() { outputs_.Clear(); }
const ::paddle_mobile::framework::proto::OpDesc_Var& OpDesc::outputs(
    int index) const {
  // @@protoc_insertion_point(field_get:paddle_mobile.framework.proto.OpDesc.outputs)
  return outputs_.Get(index);
}
::paddle_mobile::framework::proto::OpDesc_Var* OpDesc::mutable_outputs(
    int index) {
  // @@protoc_insertion_point(field_mutable:paddle_mobile.framework.proto.OpDesc.outputs)
  return outputs_.Mutable(index);
}
::paddle_mobile::framework::proto::OpDesc_Var* OpDesc::add_outputs() {
  // @@protoc_insertion_point(field_add:paddle_mobile.framework.proto.OpDesc.outputs)
  return outputs_.Add();
}
::google::protobuf::RepeatedPtrField<
    ::paddle_mobile::framework::proto::OpDesc_Var>*
OpDesc::mutable_outputs() {
  // @@protoc_insertion_point(field_mutable_list:paddle_mobile.framework.proto.OpDesc.outputs)
  return &outputs_;
}
const ::google::protobuf::RepeatedPtrField<
    ::paddle_mobile::framework::proto::OpDesc_Var>&
OpDesc::outputs() const {
  // @@protoc_insertion_point(field_list:paddle_mobile.framework.proto.OpDesc.outputs)
  return outputs_;
}

// repeated .paddle_mobile.framework.proto.OpDesc.Attr attrs = 4;
int OpDesc::attrs_size() const { return attrs_.size(); }
void OpDesc::clear_attrs() { attrs_.Clear(); }
const ::paddle_mobile::framework::proto::OpDesc_Attr& OpDesc::attrs(
    int index) const {
  // @@protoc_insertion_point(field_get:paddle_mobile.framework.proto.OpDesc.attrs)
  return attrs_.Get(index);
}
::paddle_mobile::framework::proto::OpDesc_Attr* OpDesc::mutable_attrs(
    int index) {
  // @@protoc_insertion_point(field_mutable:paddle_mobile.framework.proto.OpDesc.attrs)
  return attrs_.Mutable(index);
}
::paddle_mobile::framework::proto::OpDesc_Attr* OpDesc::add_attrs() {
  // @@protoc_insertion_point(field_add:paddle_mobile.framework.proto.OpDesc.attrs)
  return attrs_.Add();
}
::google::protobuf::RepeatedPtrField<
    ::paddle_mobile::framework::proto::OpDesc_Attr>*
OpDesc::mutable_attrs() {
  // @@protoc_insertion_point(field_mutable_list:paddle_mobile.framework.proto.OpDesc.attrs)
  return &attrs_;
}
const ::google::protobuf::RepeatedPtrField<
    ::paddle_mobile::framework::proto::OpDesc_Attr>&
OpDesc::attrs() const {
  // @@protoc_insertion_point(field_list:paddle_mobile.framework.proto.OpDesc.attrs)
  return attrs_;
}

// optional bool is_target = 5 [default = false];
bool OpDesc::has_is_target() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void OpDesc::set_has_is_target() { _has_bits_[0] |= 0x00000002u; }
void OpDesc::clear_has_is_target() { _has_bits_[0] &= ~0x00000002u; }
void OpDesc::clear_is_target() {
  is_target_ = false;
  clear_has_is_target();
}
bool OpDesc::is_target() const {
  // @@protoc_insertion_point(field_get:paddle_mobile.framework.proto.OpDesc.is_target)
  return is_target_;
}
void OpDesc::set_is_target(bool value) {
  set_has_is_target();
  is_target_ = value;
  // @@protoc_insertion_point(field_set:paddle_mobile.framework.proto.OpDesc.is_target)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int OpProto_Var::kNameFieldNumber;
const int OpProto_Var::kCommentFieldNumber;
const int OpProto_Var::kDuplicableFieldNumber;
const int OpProto_Var::kIntermediateFieldNumber;
const int OpProto_Var::kDispensableFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

OpProto_Var::OpProto_Var()
    : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_framework_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:paddle_mobile.framework.proto.OpProto.Var)
}
OpProto_Var::OpProto_Var(const OpProto_Var& from)
    : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_name()) {
    name_.AssignWithDefault(
        &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
        from.name_);
  }
  comment_.UnsafeSetDefault(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_comment()) {
    comment_.AssignWithDefault(
        &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
        from.comment_);
  }
  ::memcpy(&duplicable_, &from.duplicable_,
           static_cast<size_t>(reinterpret_cast<char*>(&dispensable_) -
                               reinterpret_cast<char*>(&duplicable_)) +
               sizeof(dispensable_));
  // @@protoc_insertion_point(copy_constructor:paddle_mobile.framework.proto.OpProto.Var)
}

void OpProto_Var::SharedCtor() {
  _cached_size_ = 0;
  name_.UnsafeSetDefault(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
  comment_.UnsafeSetDefault(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&duplicable_, 0,
           static_cast<size_t>(reinterpret_cast<char*>(&dispensable_) -
                               reinterpret_cast<char*>(&duplicable_)) +
               sizeof(dispensable_));
}

OpProto_Var::~OpProto_Var() {
  // @@protoc_insertion_point(destructor:paddle_mobile.framework.proto.OpProto.Var)
  SharedDtor();
}

void OpProto_Var::SharedDtor() {
  name_.DestroyNoArena(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
  comment_.DestroyNoArena(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void OpProto_Var::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const OpProto_Var& OpProto_Var::default_instance() {
  protobuf_framework_2eproto::InitDefaults();
  return *internal_default_instance();
}

OpProto_Var* OpProto_Var::New(::google::protobuf::Arena* arena) const {
  OpProto_Var* n = new OpProto_Var;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void OpProto_Var::Clear() {
  // @@protoc_insertion_point(message_clear_start:paddle_mobile.framework.proto.OpProto.Var)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(!name_.IsDefault(
          &::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*name_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(!comment_.IsDefault(
          &::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*comment_.UnsafeRawStringPointer())->clear();
    }
  }
  if (cached_has_bits & 28u) {
    ::memset(&duplicable_, 0,
             static_cast<size_t>(reinterpret_cast<char*>(&dispensable_) -
                                 reinterpret_cast<char*>(&duplicable_)) +
                 sizeof(dispensable_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool OpProto_Var::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) \
  if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::io::LazyStringOutputStream unknown_fields_string(
      ::google::protobuf::NewPermanentCallback(
          &_internal_metadata_,
          &::google::protobuf::internal::InternalMetadataWithArenaLite::
              mutable_unknown_fields));
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_string, false);
  // @@protoc_insertion_point(parse_start:paddle_mobile.framework.proto.OpProto.Var)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p =
        input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (
        ::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string name = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) ==
            static_cast<::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
              input, this->mutable_name()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required string comment = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) ==
            static_cast<::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
              input, this->mutable_comment()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool duplicable = 3 [default = false];
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) ==
            static_cast<::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_duplicable();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
               bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
              input, &duplicable_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool intermediate = 4 [default = false];
      case 4: {
        if (static_cast<::google::protobuf::uint8>(tag) ==
            static_cast<::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          set_has_intermediate();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
               bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
              input, &intermediate_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool dispensable = 5 [default = false];
      case 5: {
        if (static_cast<::google::protobuf::uint8>(tag) ==
            static_cast<::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {
          set_has_dispensable();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
               bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
              input, &dispensable_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:paddle_mobile.framework.proto.OpProto.Var)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:paddle_mobile.framework.proto.OpProto.Var)
  return false;
#undef DO_
}

void OpProto_Var::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:paddle_mobile.framework.proto.OpProto.Var)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string name = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
        1, this->name(), output);
  }

  // required string comment = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
        2, this->comment(), output);
  }

  // optional bool duplicable = 3 [default = false];
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(
        3, this->duplicable(), output);
  }

  // optional bool intermediate = 4 [default = false];
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(
        4, this->intermediate(), output);
  }

  // optional bool dispensable = 5 [default = false];
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(
        5, this->dispensable(), output);
  }

  output->WriteRaw(
      _internal_metadata_.unknown_fields().data(),
      static_cast<int>(_internal_metadata_.unknown_fields().size()));
  // @@protoc_insertion_point(serialize_end:paddle_mobile.framework.proto.OpProto.Var)
}

size_t OpProto_Var::RequiredFieldsByteSizeFallback() const {
  // @@protoc_insertion_point(required_fields_byte_size_fallback_start:paddle_mobile.framework.proto.OpProto.Var)
  size_t total_size = 0;

  if (has_name()) {
    // required string name = 1;
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                          this->name());
  }

  if (has_comment()) {
    // required string comment = 2;
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                          this->comment());
  }

  return total_size;
}
size_t OpProto_Var::ByteSizeLong() const {
  // @@protoc_insertion_point(message_byte_size_start:paddle_mobile.framework.proto.OpProto.Var)
  size_t total_size = 0;

  total_size += _internal_metadata_.unknown_fields().size();

  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) ==
      0) {  // All required fields are present.
    // required string name = 1;
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                          this->name());

    // required string comment = 2;
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                          this->comment());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  if (_has_bits_[0 / 32] & 28u) {
    // optional bool duplicable = 3 [default = false];
    if (has_duplicable()) {
      total_size += 1 + 1;
    }

    // optional bool intermediate = 4 [default = false];
    if (has_intermediate()) {
      total_size += 1 + 1;
    }

    // optional bool dispensable = 5 [default = false];
    if (has_dispensable()) {
      total_size += 1 + 1;
    }
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void OpProto_Var::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const OpProto_Var*>(&from));
}

void OpProto_Var::MergeFrom(const OpProto_Var& from) {
  // @@protoc_insertion_point(class_specific_merge_from_start:paddle_mobile.framework.proto.OpProto.Var)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 31u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_name();
      name_.AssignWithDefault(
          &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
          from.name_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_comment();
      comment_.AssignWithDefault(
          &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
          from.comment_);
    }
    if (cached_has_bits & 0x00000004u) {
      duplicable_ = from.duplicable_;
    }
    if (cached_has_bits & 0x00000008u) {
      intermediate_ = from.intermediate_;
    }
    if (cached_has_bits & 0x00000010u) {
      dispensable_ = from.dispensable_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void OpProto_Var::CopyFrom(const OpProto_Var& from) {
  // @@protoc_insertion_point(class_specific_copy_from_start:paddle_mobile.framework.proto.OpProto.Var)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool OpProto_Var::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;
  return true;
}

void OpProto_Var::Swap(OpProto_Var* other) {
  if (other == this) return;
  InternalSwap(other);
}
void OpProto_Var::InternalSwap(OpProto_Var* other) {
  using std::swap;
  name_.Swap(&other->name_);
  comment_.Swap(&other->comment_);
  swap(duplicable_, other->duplicable_);
  swap(intermediate_, other->intermediate_);
  swap(dispensable_, other->dispensable_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::std::string OpProto_Var::GetTypeName() const {
  return "paddle_mobile.framework.proto.OpProto.Var";
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// OpProto_Var

// required string name = 1;
bool OpProto_Var::has_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void OpProto_Var::set_has_name() { _has_bits_[0] |= 0x00000001u; }
void OpProto_Var::clear_has_name() { _has_bits_[0] &= ~0x00000001u; }
void OpProto_Var::clear_name() {
  name_.ClearToEmptyNoArena(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_name();
}
const ::std::string& OpProto_Var::name() const {
  // @@protoc_insertion_point(field_get:paddle_mobile.framework.proto.OpProto.Var.name)
  return name_.GetNoArena();
}
void OpProto_Var::set_name(const ::std::string& value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
                   value);
  // @@protoc_insertion_point(field_set:paddle_mobile.framework.proto.OpProto.Var.name)
}
#if LANG_CXX11
void OpProto_Var::set_name(::std::string&& value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
                   ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:paddle_mobile.framework.proto.OpProto.Var.name)
}
#endif
void OpProto_Var::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
                   ::std::string(value));
  // @@protoc_insertion_point(field_set_char:paddle_mobile.framework.proto.OpProto.Var.name)
}
void OpProto_Var::set_name(const char* value, size_t size) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
                   ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:paddle_mobile.framework.proto.OpProto.Var.name)
}
::std::string* OpProto_Var::mutable_name() {
  set_has_name();
  // @@protoc_insertion_point(field_mutable:paddle_mobile.framework.proto.OpProto.Var.name)
  return name_.MutableNoArena(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* OpProto_Var::release_name() {
  // @@protoc_insertion_point(field_release:paddle_mobile.framework.proto.OpProto.Var.name)
  clear_has_name();
  return name_.ReleaseNoArena(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void OpProto_Var::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    set_has_name();
  } else {
    clear_has_name();
  }
  name_.SetAllocatedNoArena(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:paddle_mobile.framework.proto.OpProto.Var.name)
}

// required string comment = 2;
bool OpProto_Var::has_comment() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void OpProto_Var::set_has_comment() { _has_bits_[0] |= 0x00000002u; }
void OpProto_Var::clear_has_comment() { _has_bits_[0] &= ~0x00000002u; }
void OpProto_Var::clear_comment() {
  comment_.ClearToEmptyNoArena(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_comment();
}
const ::std::string& OpProto_Var::comment() const {
  // @@protoc_insertion_point(field_get:paddle_mobile.framework.proto.OpProto.Var.comment)
  return comment_.GetNoArena();
}
void OpProto_Var::set_comment(const ::std::string& value) {
  set_has_comment();
  comment_.SetNoArena(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:paddle_mobile.framework.proto.OpProto.Var.comment)
}
#if LANG_CXX11
void OpProto_Var::set_comment(::std::string&& value) {
  set_has_comment();
  comment_.SetNoArena(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:paddle_mobile.framework.proto.OpProto.Var.comment)
}
#endif
void OpProto_Var::set_comment(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_comment();
  comment_.SetNoArena(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(value));
  // @@protoc_insertion_point(field_set_char:paddle_mobile.framework.proto.OpProto.Var.comment)
}
void OpProto_Var::set_comment(const char* value, size_t size) {
  set_has_comment();
  comment_.SetNoArena(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:paddle_mobile.framework.proto.OpProto.Var.comment)
}
::std::string* OpProto_Var::mutable_comment() {
  set_has_comment();
  // @@protoc_insertion_point(field_mutable:paddle_mobile.framework.proto.OpProto.Var.comment)
  return comment_.MutableNoArena(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* OpProto_Var::release_comment() {
  // @@protoc_insertion_point(field_release:paddle_mobile.framework.proto.OpProto.Var.comment)
  clear_has_comment();
  return comment_.ReleaseNoArena(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void OpProto_Var::set_allocated_comment(::std::string* comment) {
  if (comment != NULL) {
    set_has_comment();
  } else {
    clear_has_comment();
  }
  comment_.SetAllocatedNoArena(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited(), comment);
  // @@protoc_insertion_point(field_set_allocated:paddle_mobile.framework.proto.OpProto.Var.comment)
}

// optional bool duplicable = 3 [default = false];
bool OpProto_Var::has_duplicable() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void OpProto_Var::set_has_duplicable() { _has_bits_[0] |= 0x00000004u; }
void OpProto_Var::clear_has_duplicable() { _has_bits_[0] &= ~0x00000004u; }
void OpProto_Var::clear_duplicable() {
  duplicable_ = false;
  clear_has_duplicable();
}
bool OpProto_Var::duplicable() const {
  // @@protoc_insertion_point(field_get:paddle_mobile.framework.proto.OpProto.Var.duplicable)
  return duplicable_;
}
void OpProto_Var::set_duplicable(bool value) {
  set_has_duplicable();
  duplicable_ = value;
  // @@protoc_insertion_point(field_set:paddle_mobile.framework.proto.OpProto.Var.duplicable)
}

// optional bool intermediate = 4 [default = false];
bool OpProto_Var::has_intermediate() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void OpProto_Var::set_has_intermediate() { _has_bits_[0] |= 0x00000008u; }
void OpProto_Var::clear_has_intermediate() { _has_bits_[0] &= ~0x00000008u; }
void OpProto_Var::clear_intermediate() {
  intermediate_ = false;
  clear_has_intermediate();
}
bool OpProto_Var::intermediate() const {
  // @@protoc_insertion_point(field_get:paddle_mobile.framework.proto.OpProto.Var.intermediate)
  return intermediate_;
}
void OpProto_Var::set_intermediate(bool value) {
  set_has_intermediate();
  intermediate_ = value;
  // @@protoc_insertion_point(field_set:paddle_mobile.framework.proto.OpProto.Var.intermediate)
}

// optional bool dispensable = 5 [default = false];
bool OpProto_Var::has_dispensable() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void OpProto_Var::set_has_dispensable() { _has_bits_[0] |= 0x00000010u; }
void OpProto_Var::clear_has_dispensable() { _has_bits_[0] &= ~0x00000010u; }
void OpProto_Var::clear_dispensable() {
  dispensable_ = false;
  clear_has_dispensable();
}
bool OpProto_Var::dispensable() const {
  // @@protoc_insertion_point(field_get:paddle_mobile.framework.proto.OpProto.Var.dispensable)
  return dispensable_;
}
void OpProto_Var::set_dispensable(bool value) {
  set_has_dispensable();
  dispensable_ = value;
  // @@protoc_insertion_point(field_set:paddle_mobile.framework.proto.OpProto.Var.dispensable)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int OpProto_Attr::kNameFieldNumber;
const int OpProto_Attr::kTypeFieldNumber;
const int OpProto_Attr::kCommentFieldNumber;
const int OpProto_Attr::kGeneratedFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

OpProto_Attr::OpProto_Attr()
    : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_framework_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:paddle_mobile.framework.proto.OpProto.Attr)
}
OpProto_Attr::OpProto_Attr(const OpProto_Attr& from)
    : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_name()) {
    name_.AssignWithDefault(
        &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
        from.name_);
  }
  comment_.UnsafeSetDefault(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_comment()) {
    comment_.AssignWithDefault(
        &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
        from.comment_);
  }
  ::memcpy(&type_, &from.type_,
           static_cast<size_t>(reinterpret_cast<char*>(&generated_) -
                               reinterpret_cast<char*>(&type_)) +
               sizeof(generated_));
  // @@protoc_insertion_point(copy_constructor:paddle_mobile.framework.proto.OpProto.Attr)
}

void OpProto_Attr::SharedCtor() {
  _cached_size_ = 0;
  name_.UnsafeSetDefault(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
  comment_.UnsafeSetDefault(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&type_, 0, static_cast<size_t>(reinterpret_cast<char*>(&generated_) -
                                          reinterpret_cast<char*>(&type_)) +
                          sizeof(generated_));
}

OpProto_Attr::~OpProto_Attr() {
  // @@protoc_insertion_point(destructor:paddle_mobile.framework.proto.OpProto.Attr)
  SharedDtor();
}

void OpProto_Attr::SharedDtor() {
  name_.DestroyNoArena(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
  comment_.DestroyNoArena(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void OpProto_Attr::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const OpProto_Attr& OpProto_Attr::default_instance() {
  protobuf_framework_2eproto::InitDefaults();
  return *internal_default_instance();
}

OpProto_Attr* OpProto_Attr::New(::google::protobuf::Arena* arena) const {
  OpProto_Attr* n = new OpProto_Attr;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void OpProto_Attr::Clear() {
  // @@protoc_insertion_point(message_clear_start:paddle_mobile.framework.proto.OpProto.Attr)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(!name_.IsDefault(
          &::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*name_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(!comment_.IsDefault(
          &::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*comment_.UnsafeRawStringPointer())->clear();
    }
  }
  if (cached_has_bits & 12u) {
    ::memset(&type_, 0,
             static_cast<size_t>(reinterpret_cast<char*>(&generated_) -
                                 reinterpret_cast<char*>(&type_)) +
                 sizeof(generated_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool OpProto_Attr::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) \
  if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::io::LazyStringOutputStream unknown_fields_string(
      ::google::protobuf::NewPermanentCallback(
          &_internal_metadata_,
          &::google::protobuf::internal::InternalMetadataWithArenaLite::
              mutable_unknown_fields));
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_string, false);
  // @@protoc_insertion_point(parse_start:paddle_mobile.framework.proto.OpProto.Attr)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p =
        input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (
        ::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string name = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) ==
            static_cast<::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
              input, this->mutable_name()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required .paddle_mobile.framework.proto.AttrType type = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) ==
            static_cast<::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
               int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
              input, &value)));
          if (::paddle_mobile::framework::proto::AttrType_IsValid(value)) {
            set_type(static_cast<::paddle_mobile::framework::proto::AttrType>(
                value));
          } else {
            unknown_fields_stream.WriteVarint32(16u);
            unknown_fields_stream.WriteVarint32(
                static_cast<::google::protobuf::uint32>(value));
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required string comment = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) ==
            static_cast<::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
              input, this->mutable_comment()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool generated = 4 [default = false];
      case 4: {
        if (static_cast<::google::protobuf::uint8>(tag) ==
            static_cast<::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          set_has_generated();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
               bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
              input, &generated_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:paddle_mobile.framework.proto.OpProto.Attr)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:paddle_mobile.framework.proto.OpProto.Attr)
  return false;
#undef DO_
}

void OpProto_Attr::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:paddle_mobile.framework.proto.OpProto.Attr)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string name = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
        1, this->name(), output);
  }

  // required .paddle_mobile.framework.proto.AttrType type = 2;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(2, this->type(),
                                                            output);
  }

  // required string comment = 3;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
        3, this->comment(), output);
  }

  // optional bool generated = 4 [default = false];
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(
        4, this->generated(), output);
  }

  output->WriteRaw(
      _internal_metadata_.unknown_fields().data(),
      static_cast<int>(_internal_metadata_.unknown_fields().size()));
  // @@protoc_insertion_point(serialize_end:paddle_mobile.framework.proto.OpProto.Attr)
}

size_t OpProto_Attr::RequiredFieldsByteSizeFallback() const {
  // @@protoc_insertion_point(required_fields_byte_size_fallback_start:paddle_mobile.framework.proto.OpProto.Attr)
  size_t total_size = 0;

  if (has_name()) {
    // required string name = 1;
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                          this->name());
  }

  if (has_comment()) {
    // required string comment = 3;
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                          this->comment());
  }

  if (has_type()) {
    // required .paddle_mobile.framework.proto.AttrType type = 2;
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::EnumSize(
                          this->type());
  }

  return total_size;
}
size_t OpProto_Attr::ByteSizeLong() const {
  // @@protoc_insertion_point(message_byte_size_start:paddle_mobile.framework.proto.OpProto.Attr)
  size_t total_size = 0;

  total_size += _internal_metadata_.unknown_fields().size();

  if (((_has_bits_[0] & 0x00000007) ^ 0x00000007) ==
      0) {  // All required fields are present.
    // required string name = 1;
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                          this->name());

    // required string comment = 3;
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                          this->comment());

    // required .paddle_mobile.framework.proto.AttrType type = 2;
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::EnumSize(
                          this->type());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  // optional bool generated = 4 [default = false];
  if (has_generated()) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void OpProto_Attr::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const OpProto_Attr*>(&from));
}

void OpProto_Attr::MergeFrom(const OpProto_Attr& from) {
  // @@protoc_insertion_point(class_specific_merge_from_start:paddle_mobile.framework.proto.OpProto.Attr)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 15u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_name();
      name_.AssignWithDefault(
          &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
          from.name_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_comment();
      comment_.AssignWithDefault(
          &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
          from.comment_);
    }
    if (cached_has_bits & 0x00000004u) {
      type_ = from.type_;
    }
    if (cached_has_bits & 0x00000008u) {
      generated_ = from.generated_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void OpProto_Attr::CopyFrom(const OpProto_Attr& from) {
  // @@protoc_insertion_point(class_specific_copy_from_start:paddle_mobile.framework.proto.OpProto.Attr)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool OpProto_Attr::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000007) != 0x00000007) return false;
  return true;
}

void OpProto_Attr::Swap(OpProto_Attr* other) {
  if (other == this) return;
  InternalSwap(other);
}
void OpProto_Attr::InternalSwap(OpProto_Attr* other) {
  using std::swap;
  name_.Swap(&other->name_);
  comment_.Swap(&other->comment_);
  swap(type_, other->type_);
  swap(generated_, other->generated_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::std::string OpProto_Attr::GetTypeName() const {
  return "paddle_mobile.framework.proto.OpProto.Attr";
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// OpProto_Attr

// required string name = 1;
bool OpProto_Attr::has_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void OpProto_Attr::set_has_name() { _has_bits_[0] |= 0x00000001u; }
void OpProto_Attr::clear_has_name() { _has_bits_[0] &= ~0x00000001u; }
void OpProto_Attr::clear_name() {
  name_.ClearToEmptyNoArena(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_name();
}
const ::std::string& OpProto_Attr::name() const {
  // @@protoc_insertion_point(field_get:paddle_mobile.framework.proto.OpProto.Attr.name)
  return name_.GetNoArena();
}
void OpProto_Attr::set_name(const ::std::string& value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
                   value);
  // @@protoc_insertion_point(field_set:paddle_mobile.framework.proto.OpProto.Attr.name)
}
#if LANG_CXX11
void OpProto_Attr::set_name(::std::string&& value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
                   ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:paddle_mobile.framework.proto.OpProto.Attr.name)
}
#endif
void OpProto_Attr::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
                   ::std::string(value));
  // @@protoc_insertion_point(field_set_char:paddle_mobile.framework.proto.OpProto.Attr.name)
}
void OpProto_Attr::set_name(const char* value, size_t size) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
                   ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:paddle_mobile.framework.proto.OpProto.Attr.name)
}
::std::string* OpProto_Attr::mutable_name() {
  set_has_name();
  // @@protoc_insertion_point(field_mutable:paddle_mobile.framework.proto.OpProto.Attr.name)
  return name_.MutableNoArena(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* OpProto_Attr::release_name() {
  // @@protoc_insertion_point(field_release:paddle_mobile.framework.proto.OpProto.Attr.name)
  clear_has_name();
  return name_.ReleaseNoArena(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void OpProto_Attr::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    set_has_name();
  } else {
    clear_has_name();
  }
  name_.SetAllocatedNoArena(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:paddle_mobile.framework.proto.OpProto.Attr.name)
}

// required .paddle_mobile.framework.proto.AttrType type = 2;
bool OpProto_Attr::has_type() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void OpProto_Attr::set_has_type() { _has_bits_[0] |= 0x00000004u; }
void OpProto_Attr::clear_has_type() { _has_bits_[0] &= ~0x00000004u; }
void OpProto_Attr::clear_type() {
  type_ = 0;
  clear_has_type();
}
::paddle_mobile::framework::proto::AttrType OpProto_Attr::type() const {
  // @@protoc_insertion_point(field_get:paddle_mobile.framework.proto.OpProto.Attr.type)
  return static_cast<::paddle_mobile::framework::proto::AttrType>(type_);
}
void OpProto_Attr::set_type(::paddle_mobile::framework::proto::AttrType value) {
  assert(::paddle_mobile::framework::proto::AttrType_IsValid(value));
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:paddle_mobile.framework.proto.OpProto.Attr.type)
}

// required string comment = 3;
bool OpProto_Attr::has_comment() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void OpProto_Attr::set_has_comment() { _has_bits_[0] |= 0x00000002u; }
void OpProto_Attr::clear_has_comment() { _has_bits_[0] &= ~0x00000002u; }
void OpProto_Attr::clear_comment() {
  comment_.ClearToEmptyNoArena(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_comment();
}
const ::std::string& OpProto_Attr::comment() const {
  // @@protoc_insertion_point(field_get:paddle_mobile.framework.proto.OpProto.Attr.comment)
  return comment_.GetNoArena();
}
void OpProto_Attr::set_comment(const ::std::string& value) {
  set_has_comment();
  comment_.SetNoArena(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:paddle_mobile.framework.proto.OpProto.Attr.comment)
}
#if LANG_CXX11
void OpProto_Attr::set_comment(::std::string&& value) {
  set_has_comment();
  comment_.SetNoArena(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:paddle_mobile.framework.proto.OpProto.Attr.comment)
}
#endif
void OpProto_Attr::set_comment(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_comment();
  comment_.SetNoArena(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(value));
  // @@protoc_insertion_point(field_set_char:paddle_mobile.framework.proto.OpProto.Attr.comment)
}
void OpProto_Attr::set_comment(const char* value, size_t size) {
  set_has_comment();
  comment_.SetNoArena(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:paddle_mobile.framework.proto.OpProto.Attr.comment)
}
::std::string* OpProto_Attr::mutable_comment() {
  set_has_comment();
  // @@protoc_insertion_point(field_mutable:paddle_mobile.framework.proto.OpProto.Attr.comment)
  return comment_.MutableNoArena(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* OpProto_Attr::release_comment() {
  // @@protoc_insertion_point(field_release:paddle_mobile.framework.proto.OpProto.Attr.comment)
  clear_has_comment();
  return comment_.ReleaseNoArena(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void OpProto_Attr::set_allocated_comment(::std::string* comment) {
  if (comment != NULL) {
    set_has_comment();
  } else {
    clear_has_comment();
  }
  comment_.SetAllocatedNoArena(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited(), comment);
  // @@protoc_insertion_point(field_set_allocated:paddle_mobile.framework.proto.OpProto.Attr.comment)
}

// optional bool generated = 4 [default = false];
bool OpProto_Attr::has_generated() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void OpProto_Attr::set_has_generated() { _has_bits_[0] |= 0x00000008u; }
void OpProto_Attr::clear_has_generated() { _has_bits_[0] &= ~0x00000008u; }
void OpProto_Attr::clear_generated() {
  generated_ = false;
  clear_has_generated();
}
bool OpProto_Attr::generated() const {
  // @@protoc_insertion_point(field_get:paddle_mobile.framework.proto.OpProto.Attr.generated)
  return generated_;
}
void OpProto_Attr::set_generated(bool value) {
  set_has_generated();
  generated_ = value;
  // @@protoc_insertion_point(field_set:paddle_mobile.framework.proto.OpProto.Attr.generated)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int OpProto::kTypeFieldNumber;
const int OpProto::kInputsFieldNumber;
const int OpProto::kOutputsFieldNumber;
const int OpProto::kAttrsFieldNumber;
const int OpProto::kCommentFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

OpProto::OpProto()
    : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_framework_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:paddle_mobile.framework.proto.OpProto)
}
OpProto::OpProto(const OpProto& from)
    : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      inputs_(from.inputs_),
      outputs_(from.outputs_),
      attrs_(from.attrs_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  type_.UnsafeSetDefault(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_type()) {
    type_.AssignWithDefault(
        &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
        from.type_);
  }
  comment_.UnsafeSetDefault(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_comment()) {
    comment_.AssignWithDefault(
        &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
        from.comment_);
  }
  // @@protoc_insertion_point(copy_constructor:paddle_mobile.framework.proto.OpProto)
}

void OpProto::SharedCtor() {
  _cached_size_ = 0;
  type_.UnsafeSetDefault(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
  comment_.UnsafeSetDefault(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

OpProto::~OpProto() {
  // @@protoc_insertion_point(destructor:paddle_mobile.framework.proto.OpProto)
  SharedDtor();
}

void OpProto::SharedDtor() {
  type_.DestroyNoArena(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
  comment_.DestroyNoArena(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void OpProto::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const OpProto& OpProto::default_instance() {
  protobuf_framework_2eproto::InitDefaults();
  return *internal_default_instance();
}

OpProto* OpProto::New(::google::protobuf::Arena* arena) const {
  OpProto* n = new OpProto;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void OpProto::Clear() {
  // @@protoc_insertion_point(message_clear_start:paddle_mobile.framework.proto.OpProto)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  inputs_.Clear();
  outputs_.Clear();
  attrs_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(!type_.IsDefault(
          &::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*type_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(!comment_.IsDefault(
          &::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*comment_.UnsafeRawStringPointer())->clear();
    }
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool OpProto::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) \
  if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::io::LazyStringOutputStream unknown_fields_string(
      ::google::protobuf::NewPermanentCallback(
          &_internal_metadata_,
          &::google::protobuf::internal::InternalMetadataWithArenaLite::
              mutable_unknown_fields));
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_string, false);
  // @@protoc_insertion_point(parse_start:paddle_mobile.framework.proto.OpProto)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p =
        input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (
        ::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string type = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) ==
            static_cast<::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
              input, this->mutable_type()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .paddle_mobile.framework.proto.OpProto.Var inputs = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) ==
            static_cast<::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::
                  ReadMessageNoVirtual(input, add_inputs()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .paddle_mobile.framework.proto.OpProto.Var outputs = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) ==
            static_cast<::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::
                  ReadMessageNoVirtual(input, add_outputs()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .paddle_mobile.framework.proto.OpProto.Attr attrs = 4;
      case 4: {
        if (static_cast<::google::protobuf::uint8>(tag) ==
            static_cast<::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::
                  ReadMessageNoVirtual(input, add_attrs()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required string comment = 5;
      case 5: {
        if (static_cast<::google::protobuf::uint8>(tag) ==
            static_cast<::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
              input, this->mutable_comment()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:paddle_mobile.framework.proto.OpProto)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:paddle_mobile.framework.proto.OpProto)
  return false;
#undef DO_
}

void OpProto::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:paddle_mobile.framework.proto.OpProto)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string type = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
        1, this->type(), output);
  }

  // repeated .paddle_mobile.framework.proto.OpProto.Var inputs = 2;
  for (unsigned int i = 0, n = static_cast<unsigned int>(this->inputs_size());
       i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
        2, this->inputs(static_cast<int>(i)), output);
  }

  // repeated .paddle_mobile.framework.proto.OpProto.Var outputs = 3;
  for (unsigned int i = 0, n = static_cast<unsigned int>(this->outputs_size());
       i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
        3, this->outputs(static_cast<int>(i)), output);
  }

  // repeated .paddle_mobile.framework.proto.OpProto.Attr attrs = 4;
  for (unsigned int i = 0, n = static_cast<unsigned int>(this->attrs_size());
       i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
        4, this->attrs(static_cast<int>(i)), output);
  }

  // required string comment = 5;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
        5, this->comment(), output);
  }

  output->WriteRaw(
      _internal_metadata_.unknown_fields().data(),
      static_cast<int>(_internal_metadata_.unknown_fields().size()));
  // @@protoc_insertion_point(serialize_end:paddle_mobile.framework.proto.OpProto)
}

size_t OpProto::RequiredFieldsByteSizeFallback() const {
  // @@protoc_insertion_point(required_fields_byte_size_fallback_start:paddle_mobile.framework.proto.OpProto)
  size_t total_size = 0;

  if (has_type()) {
    // required string type = 1;
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                          this->type());
  }

  if (has_comment()) {
    // required string comment = 5;
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                          this->comment());
  }

  return total_size;
}
size_t OpProto::ByteSizeLong() const {
  // @@protoc_insertion_point(message_byte_size_start:paddle_mobile.framework.proto.OpProto)
  size_t total_size = 0;

  total_size += _internal_metadata_.unknown_fields().size();

  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) ==
      0) {  // All required fields are present.
    // required string type = 1;
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                          this->type());

    // required string comment = 5;
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                          this->comment());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  // repeated .paddle_mobile.framework.proto.OpProto.Var inputs = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->inputs_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
          ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
              this->inputs(static_cast<int>(i)));
    }
  }

  // repeated .paddle_mobile.framework.proto.OpProto.Var outputs = 3;
  {
    unsigned int count = static_cast<unsigned int>(this->outputs_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
          ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
              this->outputs(static_cast<int>(i)));
    }
  }

  // repeated .paddle_mobile.framework.proto.OpProto.Attr attrs = 4;
  {
    unsigned int count = static_cast<unsigned int>(this->attrs_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
          ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
              this->attrs(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void OpProto::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const OpProto*>(&from));
}

void OpProto::MergeFrom(const OpProto& from) {
  // @@protoc_insertion_point(class_specific_merge_from_start:paddle_mobile.framework.proto.OpProto)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void)cached_has_bits;

  inputs_.MergeFrom(from.inputs_);
  outputs_.MergeFrom(from.outputs_);
  attrs_.MergeFrom(from.attrs_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_type();
      type_.AssignWithDefault(
          &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
          from.type_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_comment();
      comment_.AssignWithDefault(
          &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
          from.comment_);
    }
  }
}

void OpProto::CopyFrom(const OpProto& from) {
  // @@protoc_insertion_point(class_specific_copy_from_start:paddle_mobile.framework.proto.OpProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool OpProto::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;
  if (!::google::protobuf::internal::AllAreInitialized(this->inputs()))
    return false;
  if (!::google::protobuf::internal::AllAreInitialized(this->outputs()))
    return false;
  if (!::google::protobuf::internal::AllAreInitialized(this->attrs()))
    return false;
  return true;
}

void OpProto::Swap(OpProto* other) {
  if (other == this) return;
  InternalSwap(other);
}
void OpProto::InternalSwap(OpProto* other) {
  using std::swap;
  inputs_.InternalSwap(&other->inputs_);
  outputs_.InternalSwap(&other->outputs_);
  attrs_.InternalSwap(&other->attrs_);
  type_.Swap(&other->type_);
  comment_.Swap(&other->comment_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::std::string OpProto::GetTypeName() const {
  return "paddle_mobile.framework.proto.OpProto";
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// OpProto

// required string type = 1;
bool OpProto::has_type() const { return (_has_bits_[0] & 0x00000001u) != 0; }
void OpProto::set_has_type() { _has_bits_[0] |= 0x00000001u; }
void OpProto::clear_has_type() { _has_bits_[0] &= ~0x00000001u; }
void OpProto::clear_type() {
  type_.ClearToEmptyNoArena(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_type();
}
const ::std::string& OpProto::type() const {
  // @@protoc_insertion_point(field_get:paddle_mobile.framework.proto.OpProto.type)
  return type_.GetNoArena();
}
void OpProto::set_type(const ::std::string& value) {
  set_has_type();
  type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
                   value);
  // @@protoc_insertion_point(field_set:paddle_mobile.framework.proto.OpProto.type)
}
#if LANG_CXX11
void OpProto::set_type(::std::string&& value) {
  set_has_type();
  type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
                   ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:paddle_mobile.framework.proto.OpProto.type)
}
#endif
void OpProto::set_type(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_type();
  type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
                   ::std::string(value));
  // @@protoc_insertion_point(field_set_char:paddle_mobile.framework.proto.OpProto.type)
}
void OpProto::set_type(const char* value, size_t size) {
  set_has_type();
  type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
                   ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:paddle_mobile.framework.proto.OpProto.type)
}
::std::string* OpProto::mutable_type() {
  set_has_type();
  // @@protoc_insertion_point(field_mutable:paddle_mobile.framework.proto.OpProto.type)
  return type_.MutableNoArena(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* OpProto::release_type() {
  // @@protoc_insertion_point(field_release:paddle_mobile.framework.proto.OpProto.type)
  clear_has_type();
  return type_.ReleaseNoArena(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void OpProto::set_allocated_type(::std::string* type) {
  if (type != NULL) {
    set_has_type();
  } else {
    clear_has_type();
  }
  type_.SetAllocatedNoArena(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited(), type);
  // @@protoc_insertion_point(field_set_allocated:paddle_mobile.framework.proto.OpProto.type)
}

// repeated .paddle_mobile.framework.proto.OpProto.Var inputs = 2;
int OpProto::inputs_size() const { return inputs_.size(); }
void OpProto::clear_inputs() { inputs_.Clear(); }
const ::paddle_mobile::framework::proto::OpProto_Var& OpProto::inputs(
    int index) const {
  // @@protoc_insertion_point(field_get:paddle_mobile.framework.proto.OpProto.inputs)
  return inputs_.Get(index);
}
::paddle_mobile::framework::proto::OpProto_Var* OpProto::mutable_inputs(
    int index) {
  // @@protoc_insertion_point(field_mutable:paddle_mobile.framework.proto.OpProto.inputs)
  return inputs_.Mutable(index);
}
::paddle_mobile::framework::proto::OpProto_Var* OpProto::add_inputs() {
  // @@protoc_insertion_point(field_add:paddle_mobile.framework.proto.OpProto.inputs)
  return inputs_.Add();
}
::google::protobuf::RepeatedPtrField<
    ::paddle_mobile::framework::proto::OpProto_Var>*
OpProto::mutable_inputs() {
  // @@protoc_insertion_point(field_mutable_list:paddle_mobile.framework.proto.OpProto.inputs)
  return &inputs_;
}
const ::google::protobuf::RepeatedPtrField<
    ::paddle_mobile::framework::proto::OpProto_Var>&
OpProto::inputs() const {
  // @@protoc_insertion_point(field_list:paddle_mobile.framework.proto.OpProto.inputs)
  return inputs_;
}

// repeated .paddle_mobile.framework.proto.OpProto.Var outputs = 3;
int OpProto::outputs_size() const { return outputs_.size(); }
void OpProto::clear_outputs() { outputs_.Clear(); }
const ::paddle_mobile::framework::proto::OpProto_Var& OpProto::outputs(
    int index) const {
  // @@protoc_insertion_point(field_get:paddle_mobile.framework.proto.OpProto.outputs)
  return outputs_.Get(index);
}
::paddle_mobile::framework::proto::OpProto_Var* OpProto::mutable_outputs(
    int index) {
  // @@protoc_insertion_point(field_mutable:paddle_mobile.framework.proto.OpProto.outputs)
  return outputs_.Mutable(index);
}
::paddle_mobile::framework::proto::OpProto_Var* OpProto::add_outputs() {
  // @@protoc_insertion_point(field_add:paddle_mobile.framework.proto.OpProto.outputs)
  return outputs_.Add();
}
::google::protobuf::RepeatedPtrField<
    ::paddle_mobile::framework::proto::OpProto_Var>*
OpProto::mutable_outputs() {
  // @@protoc_insertion_point(field_mutable_list:paddle_mobile.framework.proto.OpProto.outputs)
  return &outputs_;
}
const ::google::protobuf::RepeatedPtrField<
    ::paddle_mobile::framework::proto::OpProto_Var>&
OpProto::outputs() const {
  // @@protoc_insertion_point(field_list:paddle_mobile.framework.proto.OpProto.outputs)
  return outputs_;
}

// repeated .paddle_mobile.framework.proto.OpProto.Attr attrs = 4;
int OpProto::attrs_size() const { return attrs_.size(); }
void OpProto::clear_attrs() { attrs_.Clear(); }
const ::paddle_mobile::framework::proto::OpProto_Attr& OpProto::attrs(
    int index) const {
  // @@protoc_insertion_point(field_get:paddle_mobile.framework.proto.OpProto.attrs)
  return attrs_.Get(index);
}
::paddle_mobile::framework::proto::OpProto_Attr* OpProto::mutable_attrs(
    int index) {
  // @@protoc_insertion_point(field_mutable:paddle_mobile.framework.proto.OpProto.attrs)
  return attrs_.Mutable(index);
}
::paddle_mobile::framework::proto::OpProto_Attr* OpProto::add_attrs() {
  // @@protoc_insertion_point(field_add:paddle_mobile.framework.proto.OpProto.attrs)
  return attrs_.Add();
}
::google::protobuf::RepeatedPtrField<
    ::paddle_mobile::framework::proto::OpProto_Attr>*
OpProto::mutable_attrs() {
  // @@protoc_insertion_point(field_mutable_list:paddle_mobile.framework.proto.OpProto.attrs)
  return &attrs_;
}
const ::google::protobuf::RepeatedPtrField<
    ::paddle_mobile::framework::proto::OpProto_Attr>&
OpProto::attrs() const {
  // @@protoc_insertion_point(field_list:paddle_mobile.framework.proto.OpProto.attrs)
  return attrs_;
}

// required string comment = 5;
bool OpProto::has_comment() const { return (_has_bits_[0] & 0x00000002u) != 0; }
void OpProto::set_has_comment() { _has_bits_[0] |= 0x00000002u; }
void OpProto::clear_has_comment() { _has_bits_[0] &= ~0x00000002u; }
void OpProto::clear_comment() {
  comment_.ClearToEmptyNoArena(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_comment();
}
const ::std::string& OpProto::comment() const {
  // @@protoc_insertion_point(field_get:paddle_mobile.framework.proto.OpProto.comment)
  return comment_.GetNoArena();
}
void OpProto::set_comment(const ::std::string& value) {
  set_has_comment();
  comment_.SetNoArena(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:paddle_mobile.framework.proto.OpProto.comment)
}
#if LANG_CXX11
void OpProto::set_comment(::std::string&& value) {
  set_has_comment();
  comment_.SetNoArena(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:paddle_mobile.framework.proto.OpProto.comment)
}
#endif
void OpProto::set_comment(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_comment();
  comment_.SetNoArena(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(value));
  // @@protoc_insertion_point(field_set_char:paddle_mobile.framework.proto.OpProto.comment)
}
void OpProto::set_comment(const char* value, size_t size) {
  set_has_comment();
  comment_.SetNoArena(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:paddle_mobile.framework.proto.OpProto.comment)
}
::std::string* OpProto::mutable_comment() {
  set_has_comment();
  // @@protoc_insertion_point(field_mutable:paddle_mobile.framework.proto.OpProto.comment)
  return comment_.MutableNoArena(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* OpProto::release_comment() {
  // @@protoc_insertion_point(field_release:paddle_mobile.framework.proto.OpProto.comment)
  clear_has_comment();
  return comment_.ReleaseNoArena(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void OpProto::set_allocated_comment(::std::string* comment) {
  if (comment != NULL) {
    set_has_comment();
  } else {
    clear_has_comment();
  }
  comment_.SetAllocatedNoArena(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited(), comment);
  // @@protoc_insertion_point(field_set_allocated:paddle_mobile.framework.proto.OpProto.comment)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int VarType_TensorDesc::kDataTypeFieldNumber;
const int VarType_TensorDesc::kDimsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

VarType_TensorDesc::VarType_TensorDesc()
    : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_framework_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:paddle_mobile.framework.proto.VarType.TensorDesc)
}
VarType_TensorDesc::VarType_TensorDesc(const VarType_TensorDesc& from)
    : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      dims_(from.dims_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  data_type_ = from.data_type_;
  // @@protoc_insertion_point(copy_constructor:paddle_mobile.framework.proto.VarType.TensorDesc)
}

void VarType_TensorDesc::SharedCtor() {
  _cached_size_ = 0;
  data_type_ = 0;
}

VarType_TensorDesc::~VarType_TensorDesc() {
  // @@protoc_insertion_point(destructor:paddle_mobile.framework.proto.VarType.TensorDesc)
  SharedDtor();
}

void VarType_TensorDesc::SharedDtor() {}

void VarType_TensorDesc::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const VarType_TensorDesc& VarType_TensorDesc::default_instance() {
  protobuf_framework_2eproto::InitDefaults();
  return *internal_default_instance();
}

VarType_TensorDesc* VarType_TensorDesc::New(
    ::google::protobuf::Arena* arena) const {
  VarType_TensorDesc* n = new VarType_TensorDesc;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void VarType_TensorDesc::Clear() {
  // @@protoc_insertion_point(message_clear_start:paddle_mobile.framework.proto.VarType.TensorDesc)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  dims_.Clear();
  data_type_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool VarType_TensorDesc::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) \
  if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::io::LazyStringOutputStream unknown_fields_string(
      ::google::protobuf::NewPermanentCallback(
          &_internal_metadata_,
          &::google::protobuf::internal::InternalMetadataWithArenaLite::
              mutable_unknown_fields));
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_string, false);
  // @@protoc_insertion_point(parse_start:paddle_mobile.framework.proto.VarType.TensorDesc)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p =
        input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (
        ::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .paddle_mobile.framework.proto.VarType.Type data_type = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) ==
            static_cast<::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
               int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
              input, &value)));
          if (::paddle_mobile::framework::proto::VarType_Type_IsValid(value)) {
            set_data_type(
                static_cast<::paddle_mobile::framework::proto::VarType_Type>(
                    value));
          } else {
            unknown_fields_stream.WriteVarint32(8u);
            unknown_fields_stream.WriteVarint32(
                static_cast<::google::protobuf::uint32>(value));
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated int64 dims = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) ==
            static_cast<::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          DO_((
              ::google::protobuf::internal::WireFormatLite::
                  ReadRepeatedPrimitive<
                      ::google::protobuf::int64,
                      ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                      1, 16u, input, this->mutable_dims())));
        } else if (static_cast<::google::protobuf::uint8>(tag) ==
                   static_cast<::google::protobuf::uint8>(
                       18u /* 18 & 0xFF */)) {
          DO_((
              ::google::protobuf::internal::WireFormatLite::
                  ReadPackedPrimitiveNoInline<
                      ::google::protobuf::int64,
                      ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                      input, this->mutable_dims())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:paddle_mobile.framework.proto.VarType.TensorDesc)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:paddle_mobile.framework.proto.VarType.TensorDesc)
  return false;
#undef DO_
}

void VarType_TensorDesc::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:paddle_mobile.framework.proto.VarType.TensorDesc)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .paddle_mobile.framework.proto.VarType.Type data_type = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
        1, this->data_type(), output);
  }

  // repeated int64 dims = 2;
  for (int i = 0, n = this->dims_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->dims(i),
                                                             output);
  }

  output->WriteRaw(
      _internal_metadata_.unknown_fields().data(),
      static_cast<int>(_internal_metadata_.unknown_fields().size()));
  // @@protoc_insertion_point(serialize_end:paddle_mobile.framework.proto.VarType.TensorDesc)
}

size_t VarType_TensorDesc::ByteSizeLong() const {
  // @@protoc_insertion_point(message_byte_size_start:paddle_mobile.framework.proto.VarType.TensorDesc)
  size_t total_size = 0;

  total_size += _internal_metadata_.unknown_fields().size();

  // required .paddle_mobile.framework.proto.VarType.Type data_type = 1;
  if (has_data_type()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::EnumSize(
                          this->data_type());
  }
  // repeated int64 dims = 2;
  {
    size_t data_size =
        ::google::protobuf::internal::WireFormatLite::Int64Size(this->dims_);
    total_size +=
        1 * ::google::protobuf::internal::FromIntSize(this->dims_size());
    total_size += data_size;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void VarType_TensorDesc::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const VarType_TensorDesc*>(&from));
}

void VarType_TensorDesc::MergeFrom(const VarType_TensorDesc& from) {
  // @@protoc_insertion_point(class_specific_merge_from_start:paddle_mobile.framework.proto.VarType.TensorDesc)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void)cached_has_bits;

  dims_.MergeFrom(from.dims_);
  if (from.has_data_type()) {
    set_data_type(from.data_type());
  }
}

void VarType_TensorDesc::CopyFrom(const VarType_TensorDesc& from) {
  // @@protoc_insertion_point(class_specific_copy_from_start:paddle_mobile.framework.proto.VarType.TensorDesc)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool VarType_TensorDesc::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  return true;
}

void VarType_TensorDesc::Swap(VarType_TensorDesc* other) {
  if (other == this) return;
  InternalSwap(other);
}
void VarType_TensorDesc::InternalSwap(VarType_TensorDesc* other) {
  using std::swap;
  dims_.InternalSwap(&other->dims_);
  swap(data_type_, other->data_type_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::std::string VarType_TensorDesc::GetTypeName() const {
  return "paddle_mobile.framework.proto.VarType.TensorDesc";
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// VarType_TensorDesc

// required .paddle_mobile.framework.proto.VarType.Type data_type = 1;
bool VarType_TensorDesc::has_data_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void VarType_TensorDesc::set_has_data_type() { _has_bits_[0] |= 0x00000001u; }
void VarType_TensorDesc::clear_has_data_type() {
  _has_bits_[0] &= ~0x00000001u;
}
void VarType_TensorDesc::clear_data_type() {
  data_type_ = 0;
  clear_has_data_type();
}
::paddle_mobile::framework::proto::VarType_Type VarType_TensorDesc::data_type()
    const {
  // @@protoc_insertion_point(field_get:paddle_mobile.framework.proto.VarType.TensorDesc.data_type)
  return static_cast<::paddle_mobile::framework::proto::VarType_Type>(
      data_type_);
}
void VarType_TensorDesc::set_data_type(
    ::paddle_mobile::framework::proto::VarType_Type value) {
  assert(::paddle_mobile::framework::proto::VarType_Type_IsValid(value));
  set_has_data_type();
  data_type_ = value;
  // @@protoc_insertion_point(field_set:paddle_mobile.framework.proto.VarType.TensorDesc.data_type)
}

// repeated int64 dims = 2;
int VarType_TensorDesc::dims_size() const { return dims_.size(); }
void VarType_TensorDesc::clear_dims() { dims_.Clear(); }
::google::protobuf::int64 VarType_TensorDesc::dims(int index) const {
  // @@protoc_insertion_point(field_get:paddle_mobile.framework.proto.VarType.TensorDesc.dims)
  return dims_.Get(index);
}
void VarType_TensorDesc::set_dims(int index, ::google::protobuf::int64 value) {
  dims_.Set(index, value);
  // @@protoc_insertion_point(field_set:paddle_mobile.framework.proto.VarType.TensorDesc.dims)
}
void VarType_TensorDesc::add_dims(::google::protobuf::int64 value) {
  dims_.Add(value);
  // @@protoc_insertion_point(field_add:paddle_mobile.framework.proto.VarType.TensorDesc.dims)
}
const ::google::protobuf::RepeatedField<::google::protobuf::int64>&
VarType_TensorDesc::dims() const {
  // @@protoc_insertion_point(field_list:paddle_mobile.framework.proto.VarType.TensorDesc.dims)
  return dims_;
}
::google::protobuf::RepeatedField<::google::protobuf::int64>*
VarType_TensorDesc::mutable_dims() {
  // @@protoc_insertion_point(field_mutable_list:paddle_mobile.framework.proto.VarType.TensorDesc.dims)
  return &dims_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int VarType_LoDTensorDesc::kTensorFieldNumber;
const int VarType_LoDTensorDesc::kLodLevelFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

VarType_LoDTensorDesc::VarType_LoDTensorDesc()
    : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_framework_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:paddle_mobile.framework.proto.VarType.LoDTensorDesc)
}
VarType_LoDTensorDesc::VarType_LoDTensorDesc(const VarType_LoDTensorDesc& from)
    : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_tensor()) {
    tensor_ = new ::paddle_mobile::framework::proto::VarType_TensorDesc(
        *from.tensor_);
  } else {
    tensor_ = NULL;
  }
  lod_level_ = from.lod_level_;
  // @@protoc_insertion_point(copy_constructor:paddle_mobile.framework.proto.VarType.LoDTensorDesc)
}

void VarType_LoDTensorDesc::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&tensor_, 0,
           static_cast<size_t>(reinterpret_cast<char*>(&lod_level_) -
                               reinterpret_cast<char*>(&tensor_)) +
               sizeof(lod_level_));
}

VarType_LoDTensorDesc::~VarType_LoDTensorDesc() {
  // @@protoc_insertion_point(destructor:paddle_mobile.framework.proto.VarType.LoDTensorDesc)
  SharedDtor();
}

void VarType_LoDTensorDesc::SharedDtor() {
  if (this != internal_default_instance()) delete tensor_;
}

void VarType_LoDTensorDesc::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const VarType_LoDTensorDesc& VarType_LoDTensorDesc::default_instance() {
  protobuf_framework_2eproto::InitDefaults();
  return *internal_default_instance();
}

VarType_LoDTensorDesc* VarType_LoDTensorDesc::New(
    ::google::protobuf::Arena* arena) const {
  VarType_LoDTensorDesc* n = new VarType_LoDTensorDesc;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void VarType_LoDTensorDesc::Clear() {
  // @@protoc_insertion_point(message_clear_start:paddle_mobile.framework.proto.VarType.LoDTensorDesc)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  if (has_tensor()) {
    GOOGLE_DCHECK(tensor_ != NULL);
    tensor_->::paddle_mobile::framework::proto::VarType_TensorDesc::Clear();
  }
  lod_level_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool VarType_LoDTensorDesc::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) \
  if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::io::LazyStringOutputStream unknown_fields_string(
      ::google::protobuf::NewPermanentCallback(
          &_internal_metadata_,
          &::google::protobuf::internal::InternalMetadataWithArenaLite::
              mutable_unknown_fields));
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_string, false);
  // @@protoc_insertion_point(parse_start:paddle_mobile.framework.proto.VarType.LoDTensorDesc)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p =
        input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (
        ::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .paddle_mobile.framework.proto.VarType.TensorDesc tensor = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) ==
            static_cast<::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::
                  ReadMessageNoVirtual(input, mutable_tensor()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 lod_level = 2 [default = 0];
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) ==
            static_cast<::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_lod_level();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
               ::google::protobuf::int32,
               ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
              input, &lod_level_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:paddle_mobile.framework.proto.VarType.LoDTensorDesc)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:paddle_mobile.framework.proto.VarType.LoDTensorDesc)
  return false;
#undef DO_
}

void VarType_LoDTensorDesc::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:paddle_mobile.framework.proto.VarType.LoDTensorDesc)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .paddle_mobile.framework.proto.VarType.TensorDesc tensor = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
        1, *this->tensor_, output);
  }

  // optional int32 lod_level = 2 [default = 0];
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
        2, this->lod_level(), output);
  }

  output->WriteRaw(
      _internal_metadata_.unknown_fields().data(),
      static_cast<int>(_internal_metadata_.unknown_fields().size()));
  // @@protoc_insertion_point(serialize_end:paddle_mobile.framework.proto.VarType.LoDTensorDesc)
}

size_t VarType_LoDTensorDesc::ByteSizeLong() const {
  // @@protoc_insertion_point(message_byte_size_start:paddle_mobile.framework.proto.VarType.LoDTensorDesc)
  size_t total_size = 0;

  total_size += _internal_metadata_.unknown_fields().size();

  // required .paddle_mobile.framework.proto.VarType.TensorDesc tensor = 1;
  if (has_tensor()) {
    total_size +=
        1 + ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
                *this->tensor_);
  }
  // optional int32 lod_level = 2 [default = 0];
  if (has_lod_level()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::Int32Size(
                          this->lod_level());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void VarType_LoDTensorDesc::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(
      *::google::protobuf::down_cast<const VarType_LoDTensorDesc*>(&from));
}

void VarType_LoDTensorDesc::MergeFrom(const VarType_LoDTensorDesc& from) {
  // @@protoc_insertion_point(class_specific_merge_from_start:paddle_mobile.framework.proto.VarType.LoDTensorDesc)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      mutable_tensor()
          ->::paddle_mobile::framework::proto::VarType_TensorDesc::MergeFrom(
              from.tensor());
    }
    if (cached_has_bits & 0x00000002u) {
      lod_level_ = from.lod_level_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void VarType_LoDTensorDesc::CopyFrom(const VarType_LoDTensorDesc& from) {
  // @@protoc_insertion_point(class_specific_copy_from_start:paddle_mobile.framework.proto.VarType.LoDTensorDesc)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool VarType_LoDTensorDesc::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  if (has_tensor()) {
    if (!this->tensor_->IsInitialized()) return false;
  }
  return true;
}

void VarType_LoDTensorDesc::Swap(VarType_LoDTensorDesc* other) {
  if (other == this) return;
  InternalSwap(other);
}
void VarType_LoDTensorDesc::InternalSwap(VarType_LoDTensorDesc* other) {
  using std::swap;
  swap(tensor_, other->tensor_);
  swap(lod_level_, other->lod_level_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::std::string VarType_LoDTensorDesc::GetTypeName() const {
  return "paddle_mobile.framework.proto.VarType.LoDTensorDesc";
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// VarType_LoDTensorDesc

// required .paddle_mobile.framework.proto.VarType.TensorDesc tensor = 1;
bool VarType_LoDTensorDesc::has_tensor() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void VarType_LoDTensorDesc::set_has_tensor() { _has_bits_[0] |= 0x00000001u; }
void VarType_LoDTensorDesc::clear_has_tensor() {
  _has_bits_[0] &= ~0x00000001u;
}
void VarType_LoDTensorDesc::clear_tensor() {
  if (tensor_ != NULL)
    tensor_->::paddle_mobile::framework::proto::VarType_TensorDesc::Clear();
  clear_has_tensor();
}
const ::paddle_mobile::framework::proto::VarType_TensorDesc&
VarType_LoDTensorDesc::tensor() const {
  const ::paddle_mobile::framework::proto::VarType_TensorDesc* p = tensor_;
  // @@protoc_insertion_point(field_get:paddle_mobile.framework.proto.VarType.LoDTensorDesc.tensor)
  return p != NULL ? *p : *reinterpret_cast<const ::paddle_mobile::framework::
                                                proto::VarType_TensorDesc*>(
                              &::paddle_mobile::framework::proto::
                                  _VarType_TensorDesc_default_instance_);
}
::paddle_mobile::framework::proto::VarType_TensorDesc*
VarType_LoDTensorDesc::mutable_tensor() {
  set_has_tensor();
  if (tensor_ == NULL) {
    tensor_ = new ::paddle_mobile::framework::proto::VarType_TensorDesc;
  }
  // @@protoc_insertion_point(field_mutable:paddle_mobile.framework.proto.VarType.LoDTensorDesc.tensor)
  return tensor_;
}
::paddle_mobile::framework::proto::VarType_TensorDesc*
VarType_LoDTensorDesc::release_tensor() {
  // @@protoc_insertion_point(field_release:paddle_mobile.framework.proto.VarType.LoDTensorDesc.tensor)
  clear_has_tensor();
  ::paddle_mobile::framework::proto::VarType_TensorDesc* temp = tensor_;
  tensor_ = NULL;
  return temp;
}
void VarType_LoDTensorDesc::set_allocated_tensor(
    ::paddle_mobile::framework::proto::VarType_TensorDesc* tensor) {
  delete tensor_;
  tensor_ = tensor;
  if (tensor) {
    set_has_tensor();
  } else {
    clear_has_tensor();
  }
  // @@protoc_insertion_point(field_set_allocated:paddle_mobile.framework.proto.VarType.LoDTensorDesc.tensor)
}

// optional int32 lod_level = 2 [default = 0];
bool VarType_LoDTensorDesc::has_lod_level() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void VarType_LoDTensorDesc::set_has_lod_level() {
  _has_bits_[0] |= 0x00000002u;
}
void VarType_LoDTensorDesc::clear_has_lod_level() {
  _has_bits_[0] &= ~0x00000002u;
}
void VarType_LoDTensorDesc::clear_lod_level() {
  lod_level_ = 0;
  clear_has_lod_level();
}
::google::protobuf::int32 VarType_LoDTensorDesc::lod_level() const {
  // @@protoc_insertion_point(field_get:paddle_mobile.framework.proto.VarType.LoDTensorDesc.lod_level)
  return lod_level_;
}
void VarType_LoDTensorDesc::set_lod_level(::google::protobuf::int32 value) {
  set_has_lod_level();
  lod_level_ = value;
  // @@protoc_insertion_point(field_set:paddle_mobile.framework.proto.VarType.LoDTensorDesc.lod_level)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int VarType_LoDTensorArrayDesc::kTensorFieldNumber;
const int VarType_LoDTensorArrayDesc::kLodLevelFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

VarType_LoDTensorArrayDesc::VarType_LoDTensorArrayDesc()
    : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_framework_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:paddle_mobile.framework.proto.VarType.LoDTensorArrayDesc)
}
VarType_LoDTensorArrayDesc::VarType_LoDTensorArrayDesc(
    const VarType_LoDTensorArrayDesc& from)
    : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_tensor()) {
    tensor_ = new ::paddle_mobile::framework::proto::VarType_TensorDesc(
        *from.tensor_);
  } else {
    tensor_ = NULL;
  }
  lod_level_ = from.lod_level_;
  // @@protoc_insertion_point(copy_constructor:paddle_mobile.framework.proto.VarType.LoDTensorArrayDesc)
}

void VarType_LoDTensorArrayDesc::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&tensor_, 0,
           static_cast<size_t>(reinterpret_cast<char*>(&lod_level_) -
                               reinterpret_cast<char*>(&tensor_)) +
               sizeof(lod_level_));
}

VarType_LoDTensorArrayDesc::~VarType_LoDTensorArrayDesc() {
  // @@protoc_insertion_point(destructor:paddle_mobile.framework.proto.VarType.LoDTensorArrayDesc)
  SharedDtor();
}

void VarType_LoDTensorArrayDesc::SharedDtor() {
  if (this != internal_default_instance()) delete tensor_;
}

void VarType_LoDTensorArrayDesc::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const VarType_LoDTensorArrayDesc&
VarType_LoDTensorArrayDesc::default_instance() {
  protobuf_framework_2eproto::InitDefaults();
  return *internal_default_instance();
}

VarType_LoDTensorArrayDesc* VarType_LoDTensorArrayDesc::New(
    ::google::protobuf::Arena* arena) const {
  VarType_LoDTensorArrayDesc* n = new VarType_LoDTensorArrayDesc;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void VarType_LoDTensorArrayDesc::Clear() {
  // @@protoc_insertion_point(message_clear_start:paddle_mobile.framework.proto.VarType.LoDTensorArrayDesc)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  if (has_tensor()) {
    GOOGLE_DCHECK(tensor_ != NULL);
    tensor_->::paddle_mobile::framework::proto::VarType_TensorDesc::Clear();
  }
  lod_level_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool VarType_LoDTensorArrayDesc::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) \
  if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::io::LazyStringOutputStream unknown_fields_string(
      ::google::protobuf::NewPermanentCallback(
          &_internal_metadata_,
          &::google::protobuf::internal::InternalMetadataWithArenaLite::
              mutable_unknown_fields));
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_string, false);
  // @@protoc_insertion_point(parse_start:paddle_mobile.framework.proto.VarType.LoDTensorArrayDesc)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p =
        input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (
        ::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .paddle_mobile.framework.proto.VarType.TensorDesc tensor = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) ==
            static_cast<::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::
                  ReadMessageNoVirtual(input, mutable_tensor()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 lod_level = 2 [default = 0];
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) ==
            static_cast<::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_lod_level();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
               ::google::protobuf::int32,
               ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
              input, &lod_level_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:paddle_mobile.framework.proto.VarType.LoDTensorArrayDesc)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:paddle_mobile.framework.proto.VarType.LoDTensorArrayDesc)
  return false;
#undef DO_
}

void VarType_LoDTensorArrayDesc::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:paddle_mobile.framework.proto.VarType.LoDTensorArrayDesc)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .paddle_mobile.framework.proto.VarType.TensorDesc tensor = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
        1, *this->tensor_, output);
  }

  // optional int32 lod_level = 2 [default = 0];
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
        2, this->lod_level(), output);
  }

  output->WriteRaw(
      _internal_metadata_.unknown_fields().data(),
      static_cast<int>(_internal_metadata_.unknown_fields().size()));
  // @@protoc_insertion_point(serialize_end:paddle_mobile.framework.proto.VarType.LoDTensorArrayDesc)
}

size_t VarType_LoDTensorArrayDesc::ByteSizeLong() const {
  // @@protoc_insertion_point(message_byte_size_start:paddle_mobile.framework.proto.VarType.LoDTensorArrayDesc)
  size_t total_size = 0;

  total_size += _internal_metadata_.unknown_fields().size();

  // required .paddle_mobile.framework.proto.VarType.TensorDesc tensor = 1;
  if (has_tensor()) {
    total_size +=
        1 + ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
                *this->tensor_);
  }
  // optional int32 lod_level = 2 [default = 0];
  if (has_lod_level()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::Int32Size(
                          this->lod_level());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void VarType_LoDTensorArrayDesc::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(
      *::google::protobuf::down_cast<const VarType_LoDTensorArrayDesc*>(&from));
}

void VarType_LoDTensorArrayDesc::MergeFrom(
    const VarType_LoDTensorArrayDesc& from) {
  // @@protoc_insertion_point(class_specific_merge_from_start:paddle_mobile.framework.proto.VarType.LoDTensorArrayDesc)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      mutable_tensor()
          ->::paddle_mobile::framework::proto::VarType_TensorDesc::MergeFrom(
              from.tensor());
    }
    if (cached_has_bits & 0x00000002u) {
      lod_level_ = from.lod_level_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void VarType_LoDTensorArrayDesc::CopyFrom(
    const VarType_LoDTensorArrayDesc& from) {
  // @@protoc_insertion_point(class_specific_copy_from_start:paddle_mobile.framework.proto.VarType.LoDTensorArrayDesc)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool VarType_LoDTensorArrayDesc::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  if (has_tensor()) {
    if (!this->tensor_->IsInitialized()) return false;
  }
  return true;
}

void VarType_LoDTensorArrayDesc::Swap(VarType_LoDTensorArrayDesc* other) {
  if (other == this) return;
  InternalSwap(other);
}
void VarType_LoDTensorArrayDesc::InternalSwap(
    VarType_LoDTensorArrayDesc* other) {
  using std::swap;
  swap(tensor_, other->tensor_);
  swap(lod_level_, other->lod_level_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::std::string VarType_LoDTensorArrayDesc::GetTypeName() const {
  return "paddle_mobile.framework.proto.VarType.LoDTensorArrayDesc";
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// VarType_LoDTensorArrayDesc

// required .paddle_mobile.framework.proto.VarType.TensorDesc tensor = 1;
bool VarType_LoDTensorArrayDesc::has_tensor() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void VarType_LoDTensorArrayDesc::set_has_tensor() {
  _has_bits_[0] |= 0x00000001u;
}
void VarType_LoDTensorArrayDesc::clear_has_tensor() {
  _has_bits_[0] &= ~0x00000001u;
}
void VarType_LoDTensorArrayDesc::clear_tensor() {
  if (tensor_ != NULL)
    tensor_->::paddle_mobile::framework::proto::VarType_TensorDesc::Clear();
  clear_has_tensor();
}
const ::paddle_mobile::framework::proto::VarType_TensorDesc&
VarType_LoDTensorArrayDesc::tensor() const {
  const ::paddle_mobile::framework::proto::VarType_TensorDesc* p = tensor_;
  // @@protoc_insertion_point(field_get:paddle_mobile.framework.proto.VarType.LoDTensorArrayDesc.tensor)
  return p != NULL ? *p : *reinterpret_cast<const ::paddle_mobile::framework::
                                                proto::VarType_TensorDesc*>(
                              &::paddle_mobile::framework::proto::
                                  _VarType_TensorDesc_default_instance_);
}
::paddle_mobile::framework::proto::VarType_TensorDesc*
VarType_LoDTensorArrayDesc::mutable_tensor() {
  set_has_tensor();
  if (tensor_ == NULL) {
    tensor_ = new ::paddle_mobile::framework::proto::VarType_TensorDesc;
  }
  // @@protoc_insertion_point(field_mutable:paddle_mobile.framework.proto.VarType.LoDTensorArrayDesc.tensor)
  return tensor_;
}
::paddle_mobile::framework::proto::VarType_TensorDesc*
VarType_LoDTensorArrayDesc::release_tensor() {
  // @@protoc_insertion_point(field_release:paddle_mobile.framework.proto.VarType.LoDTensorArrayDesc.tensor)
  clear_has_tensor();
  ::paddle_mobile::framework::proto::VarType_TensorDesc* temp = tensor_;
  tensor_ = NULL;
  return temp;
}
void VarType_LoDTensorArrayDesc::set_allocated_tensor(
    ::paddle_mobile::framework::proto::VarType_TensorDesc* tensor) {
  delete tensor_;
  tensor_ = tensor;
  if (tensor) {
    set_has_tensor();
  } else {
    clear_has_tensor();
  }
  // @@protoc_insertion_point(field_set_allocated:paddle_mobile.framework.proto.VarType.LoDTensorArrayDesc.tensor)
}

// optional int32 lod_level = 2 [default = 0];
bool VarType_LoDTensorArrayDesc::has_lod_level() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void VarType_LoDTensorArrayDesc::set_has_lod_level() {
  _has_bits_[0] |= 0x00000002u;
}
void VarType_LoDTensorArrayDesc::clear_has_lod_level() {
  _has_bits_[0] &= ~0x00000002u;
}
void VarType_LoDTensorArrayDesc::clear_lod_level() {
  lod_level_ = 0;
  clear_has_lod_level();
}
::google::protobuf::int32 VarType_LoDTensorArrayDesc::lod_level() const {
  // @@protoc_insertion_point(field_get:paddle_mobile.framework.proto.VarType.LoDTensorArrayDesc.lod_level)
  return lod_level_;
}
void VarType_LoDTensorArrayDesc::set_lod_level(
    ::google::protobuf::int32 value) {
  set_has_lod_level();
  lod_level_ = value;
  // @@protoc_insertion_point(field_set:paddle_mobile.framework.proto.VarType.LoDTensorArrayDesc.lod_level)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int VarType_ReaderDesc::kLodTensorFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

VarType_ReaderDesc::VarType_ReaderDesc()
    : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_framework_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:paddle_mobile.framework.proto.VarType.ReaderDesc)
}
VarType_ReaderDesc::VarType_ReaderDesc(const VarType_ReaderDesc& from)
    : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      lod_tensor_(from.lod_tensor_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:paddle_mobile.framework.proto.VarType.ReaderDesc)
}

void VarType_ReaderDesc::SharedCtor() { _cached_size_ = 0; }

VarType_ReaderDesc::~VarType_ReaderDesc() {
  // @@protoc_insertion_point(destructor:paddle_mobile.framework.proto.VarType.ReaderDesc)
  SharedDtor();
}

void VarType_ReaderDesc::SharedDtor() {}

void VarType_ReaderDesc::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const VarType_ReaderDesc& VarType_ReaderDesc::default_instance() {
  protobuf_framework_2eproto::InitDefaults();
  return *internal_default_instance();
}

VarType_ReaderDesc* VarType_ReaderDesc::New(
    ::google::protobuf::Arena* arena) const {
  VarType_ReaderDesc* n = new VarType_ReaderDesc;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void VarType_ReaderDesc::Clear() {
  // @@protoc_insertion_point(message_clear_start:paddle_mobile.framework.proto.VarType.ReaderDesc)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  lod_tensor_.Clear();
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool VarType_ReaderDesc::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) \
  if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::io::LazyStringOutputStream unknown_fields_string(
      ::google::protobuf::NewPermanentCallback(
          &_internal_metadata_,
          &::google::protobuf::internal::InternalMetadataWithArenaLite::
              mutable_unknown_fields));
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_string, false);
  // @@protoc_insertion_point(parse_start:paddle_mobile.framework.proto.VarType.ReaderDesc)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p =
        input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (
        ::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .paddle_mobile.framework.proto.VarType.LoDTensorDesc
      // lod_tensor = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) ==
            static_cast<::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::
                  ReadMessageNoVirtual(input, add_lod_tensor()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:paddle_mobile.framework.proto.VarType.ReaderDesc)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:paddle_mobile.framework.proto.VarType.ReaderDesc)
  return false;
#undef DO_
}

void VarType_ReaderDesc::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:paddle_mobile.framework.proto.VarType.ReaderDesc)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void)cached_has_bits;

  // repeated .paddle_mobile.framework.proto.VarType.LoDTensorDesc lod_tensor =
  // 1;
  for (unsigned int i = 0,
                    n = static_cast<unsigned int>(this->lod_tensor_size());
       i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
        1, this->lod_tensor(static_cast<int>(i)), output);
  }

  output->WriteRaw(
      _internal_metadata_.unknown_fields().data(),
      static_cast<int>(_internal_metadata_.unknown_fields().size()));
  // @@protoc_insertion_point(serialize_end:paddle_mobile.framework.proto.VarType.ReaderDesc)
}

size_t VarType_ReaderDesc::ByteSizeLong() const {
  // @@protoc_insertion_point(message_byte_size_start:paddle_mobile.framework.proto.VarType.ReaderDesc)
  size_t total_size = 0;

  total_size += _internal_metadata_.unknown_fields().size();

  // repeated .paddle_mobile.framework.proto.VarType.LoDTensorDesc lod_tensor =
  // 1;
  {
    unsigned int count = static_cast<unsigned int>(this->lod_tensor_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
          ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
              this->lod_tensor(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void VarType_ReaderDesc::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const VarType_ReaderDesc*>(&from));
}

void VarType_ReaderDesc::MergeFrom(const VarType_ReaderDesc& from) {
  // @@protoc_insertion_point(class_specific_merge_from_start:paddle_mobile.framework.proto.VarType.ReaderDesc)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void)cached_has_bits;

  lod_tensor_.MergeFrom(from.lod_tensor_);
}

void VarType_ReaderDesc::CopyFrom(const VarType_ReaderDesc& from) {
  // @@protoc_insertion_point(class_specific_copy_from_start:paddle_mobile.framework.proto.VarType.ReaderDesc)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool VarType_ReaderDesc::IsInitialized() const {
  if (!::google::protobuf::internal::AllAreInitialized(this->lod_tensor()))
    return false;
  return true;
}

void VarType_ReaderDesc::Swap(VarType_ReaderDesc* other) {
  if (other == this) return;
  InternalSwap(other);
}
void VarType_ReaderDesc::InternalSwap(VarType_ReaderDesc* other) {
  using std::swap;
  lod_tensor_.InternalSwap(&other->lod_tensor_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::std::string VarType_ReaderDesc::GetTypeName() const {
  return "paddle_mobile.framework.proto.VarType.ReaderDesc";
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// VarType_ReaderDesc

// repeated .paddle_mobile.framework.proto.VarType.LoDTensorDesc lod_tensor = 1;
int VarType_ReaderDesc::lod_tensor_size() const { return lod_tensor_.size(); }
void VarType_ReaderDesc::clear_lod_tensor() { lod_tensor_.Clear(); }
const ::paddle_mobile::framework::proto::VarType_LoDTensorDesc&
VarType_ReaderDesc::lod_tensor(int index) const {
  // @@protoc_insertion_point(field_get:paddle_mobile.framework.proto.VarType.ReaderDesc.lod_tensor)
  return lod_tensor_.Get(index);
}
::paddle_mobile::framework::proto::VarType_LoDTensorDesc*
VarType_ReaderDesc::mutable_lod_tensor(int index) {
  // @@protoc_insertion_point(field_mutable:paddle_mobile.framework.proto.VarType.ReaderDesc.lod_tensor)
  return lod_tensor_.Mutable(index);
}
::paddle_mobile::framework::proto::VarType_LoDTensorDesc*
VarType_ReaderDesc::add_lod_tensor() {
  // @@protoc_insertion_point(field_add:paddle_mobile.framework.proto.VarType.ReaderDesc.lod_tensor)
  return lod_tensor_.Add();
}
::google::protobuf::RepeatedPtrField<
    ::paddle_mobile::framework::proto::VarType_LoDTensorDesc>*
VarType_ReaderDesc::mutable_lod_tensor() {
  // @@protoc_insertion_point(field_mutable_list:paddle_mobile.framework.proto.VarType.ReaderDesc.lod_tensor)
  return &lod_tensor_;
}
const ::google::protobuf::RepeatedPtrField<
    ::paddle_mobile::framework::proto::VarType_LoDTensorDesc>&
VarType_ReaderDesc::lod_tensor() const {
  // @@protoc_insertion_point(field_list:paddle_mobile.framework.proto.VarType.ReaderDesc.lod_tensor)
  return lod_tensor_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int VarType_ChannelDesc::kDataTypeFieldNumber;
const int VarType_ChannelDesc::kCapacityFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

VarType_ChannelDesc::VarType_ChannelDesc()
    : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_framework_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:paddle_mobile.framework.proto.VarType.ChannelDesc)
}
VarType_ChannelDesc::VarType_ChannelDesc(const VarType_ChannelDesc& from)
    : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&capacity_, &from.capacity_,
           static_cast<size_t>(reinterpret_cast<char*>(&data_type_) -
                               reinterpret_cast<char*>(&capacity_)) +
               sizeof(data_type_));
  // @@protoc_insertion_point(copy_constructor:paddle_mobile.framework.proto.VarType.ChannelDesc)
}

void VarType_ChannelDesc::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&capacity_, 0,
           static_cast<size_t>(reinterpret_cast<char*>(&data_type_) -
                               reinterpret_cast<char*>(&capacity_)) +
               sizeof(data_type_));
}

VarType_ChannelDesc::~VarType_ChannelDesc() {
  // @@protoc_insertion_point(destructor:paddle_mobile.framework.proto.VarType.ChannelDesc)
  SharedDtor();
}

void VarType_ChannelDesc::SharedDtor() {}

void VarType_ChannelDesc::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const VarType_ChannelDesc& VarType_ChannelDesc::default_instance() {
  protobuf_framework_2eproto::InitDefaults();
  return *internal_default_instance();
}

VarType_ChannelDesc* VarType_ChannelDesc::New(
    ::google::protobuf::Arena* arena) const {
  VarType_ChannelDesc* n = new VarType_ChannelDesc;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void VarType_ChannelDesc::Clear() {
  // @@protoc_insertion_point(message_clear_start:paddle_mobile.framework.proto.VarType.ChannelDesc)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    ::memset(&capacity_, 0,
             static_cast<size_t>(reinterpret_cast<char*>(&data_type_) -
                                 reinterpret_cast<char*>(&capacity_)) +
                 sizeof(data_type_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool VarType_ChannelDesc::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) \
  if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::io::LazyStringOutputStream unknown_fields_string(
      ::google::protobuf::NewPermanentCallback(
          &_internal_metadata_,
          &::google::protobuf::internal::InternalMetadataWithArenaLite::
              mutable_unknown_fields));
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_string, false);
  // @@protoc_insertion_point(parse_start:paddle_mobile.framework.proto.VarType.ChannelDesc)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p =
        input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (
        ::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .paddle_mobile.framework.proto.VarType.Type data_type = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) ==
            static_cast<::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
               int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
              input, &value)));
          if (::paddle_mobile::framework::proto::VarType_Type_IsValid(value)) {
            set_data_type(
                static_cast<::paddle_mobile::framework::proto::VarType_Type>(
                    value));
          } else {
            unknown_fields_stream.WriteVarint32(8u);
            unknown_fields_stream.WriteVarint32(
                static_cast<::google::protobuf::uint32>(value));
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int64 capacity = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) ==
            static_cast<::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_capacity();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
               ::google::protobuf::int64,
               ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
              input, &capacity_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:paddle_mobile.framework.proto.VarType.ChannelDesc)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:paddle_mobile.framework.proto.VarType.ChannelDesc)
  return false;
#undef DO_
}

void VarType_ChannelDesc::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:paddle_mobile.framework.proto.VarType.ChannelDesc)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .paddle_mobile.framework.proto.VarType.Type data_type = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
        1, this->data_type(), output);
  }

  // required int64 capacity = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(
        2, this->capacity(), output);
  }

  output->WriteRaw(
      _internal_metadata_.unknown_fields().data(),
      static_cast<int>(_internal_metadata_.unknown_fields().size()));
  // @@protoc_insertion_point(serialize_end:paddle_mobile.framework.proto.VarType.ChannelDesc)
}

size_t VarType_ChannelDesc::RequiredFieldsByteSizeFallback() const {
  // @@protoc_insertion_point(required_fields_byte_size_fallback_start:paddle_mobile.framework.proto.VarType.ChannelDesc)
  size_t total_size = 0;

  if (has_capacity()) {
    // required int64 capacity = 2;
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::Int64Size(
                          this->capacity());
  }

  if (has_data_type()) {
    // required .paddle_mobile.framework.proto.VarType.Type data_type = 1;
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::EnumSize(
                          this->data_type());
  }

  return total_size;
}
size_t VarType_ChannelDesc::ByteSizeLong() const {
  // @@protoc_insertion_point(message_byte_size_start:paddle_mobile.framework.proto.VarType.ChannelDesc)
  size_t total_size = 0;

  total_size += _internal_metadata_.unknown_fields().size();

  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) ==
      0) {  // All required fields are present.
    // required int64 capacity = 2;
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::Int64Size(
                          this->capacity());

    // required .paddle_mobile.framework.proto.VarType.Type data_type = 1;
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::EnumSize(
                          this->data_type());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void VarType_ChannelDesc::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const VarType_ChannelDesc*>(&from));
}

void VarType_ChannelDesc::MergeFrom(const VarType_ChannelDesc& from) {
  // @@protoc_insertion_point(class_specific_merge_from_start:paddle_mobile.framework.proto.VarType.ChannelDesc)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      capacity_ = from.capacity_;
    }
    if (cached_has_bits & 0x00000002u) {
      data_type_ = from.data_type_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void VarType_ChannelDesc::CopyFrom(const VarType_ChannelDesc& from) {
  // @@protoc_insertion_point(class_specific_copy_from_start:paddle_mobile.framework.proto.VarType.ChannelDesc)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool VarType_ChannelDesc::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;
  return true;
}

void VarType_ChannelDesc::Swap(VarType_ChannelDesc* other) {
  if (other == this) return;
  InternalSwap(other);
}
void VarType_ChannelDesc::InternalSwap(VarType_ChannelDesc* other) {
  using std::swap;
  swap(capacity_, other->capacity_);
  swap(data_type_, other->data_type_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::std::string VarType_ChannelDesc::GetTypeName() const {
  return "paddle_mobile.framework.proto.VarType.ChannelDesc";
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// VarType_ChannelDesc

// required .paddle_mobile.framework.proto.VarType.Type data_type = 1;
bool VarType_ChannelDesc::has_data_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void VarType_ChannelDesc::set_has_data_type() { _has_bits_[0] |= 0x00000002u; }
void VarType_ChannelDesc::clear_has_data_type() {
  _has_bits_[0] &= ~0x00000002u;
}
void VarType_ChannelDesc::clear_data_type() {
  data_type_ = 0;
  clear_has_data_type();
}
::paddle_mobile::framework::proto::VarType_Type VarType_ChannelDesc::data_type()
    const {
  // @@protoc_insertion_point(field_get:paddle_mobile.framework.proto.VarType.ChannelDesc.data_type)
  return static_cast<::paddle_mobile::framework::proto::VarType_Type>(
      data_type_);
}
void VarType_ChannelDesc::set_data_type(
    ::paddle_mobile::framework::proto::VarType_Type value) {
  assert(::paddle_mobile::framework::proto::VarType_Type_IsValid(value));
  set_has_data_type();
  data_type_ = value;
  // @@protoc_insertion_point(field_set:paddle_mobile.framework.proto.VarType.ChannelDesc.data_type)
}

// required int64 capacity = 2;
bool VarType_ChannelDesc::has_capacity() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void VarType_ChannelDesc::set_has_capacity() { _has_bits_[0] |= 0x00000001u; }
void VarType_ChannelDesc::clear_has_capacity() {
  _has_bits_[0] &= ~0x00000001u;
}
void VarType_ChannelDesc::clear_capacity() {
  capacity_ = GOOGLE_LONGLONG(0);
  clear_has_capacity();
}
::google::protobuf::int64 VarType_ChannelDesc::capacity() const {
  // @@protoc_insertion_point(field_get:paddle_mobile.framework.proto.VarType.ChannelDesc.capacity)
  return capacity_;
}
void VarType_ChannelDesc::set_capacity(::google::protobuf::int64 value) {
  set_has_capacity();
  capacity_ = value;
  // @@protoc_insertion_point(field_set:paddle_mobile.framework.proto.VarType.ChannelDesc.capacity)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int VarType_Tuple::kElementTypeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

VarType_Tuple::VarType_Tuple()
    : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_framework_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:paddle_mobile.framework.proto.VarType.Tuple)
}
VarType_Tuple::VarType_Tuple(const VarType_Tuple& from)
    : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      element_type_(from.element_type_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:paddle_mobile.framework.proto.VarType.Tuple)
}

void VarType_Tuple::SharedCtor() { _cached_size_ = 0; }

VarType_Tuple::~VarType_Tuple() {
  // @@protoc_insertion_point(destructor:paddle_mobile.framework.proto.VarType.Tuple)
  SharedDtor();
}

void VarType_Tuple::SharedDtor() {}

void VarType_Tuple::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const VarType_Tuple& VarType_Tuple::default_instance() {
  protobuf_framework_2eproto::InitDefaults();
  return *internal_default_instance();
}

VarType_Tuple* VarType_Tuple::New(::google::protobuf::Arena* arena) const {
  VarType_Tuple* n = new VarType_Tuple;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void VarType_Tuple::Clear() {
  // @@protoc_insertion_point(message_clear_start:paddle_mobile.framework.proto.VarType.Tuple)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  element_type_.Clear();
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool VarType_Tuple::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) \
  if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::io::LazyStringOutputStream unknown_fields_string(
      ::google::protobuf::NewPermanentCallback(
          &_internal_metadata_,
          &::google::protobuf::internal::InternalMetadataWithArenaLite::
              mutable_unknown_fields));
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_string, false);
  // @@protoc_insertion_point(parse_start:paddle_mobile.framework.proto.VarType.Tuple)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p =
        input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (
        ::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .paddle_mobile.framework.proto.VarType.Type element_type = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) ==
            static_cast<::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
               int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
              input, &value)));
          if (::paddle_mobile::framework::proto::VarType_Type_IsValid(value)) {
            add_element_type(
                static_cast<::paddle_mobile::framework::proto::VarType_Type>(
                    value));
          } else {
            unknown_fields_stream.WriteVarint32(tag);
            unknown_fields_stream.WriteVarint32(
                static_cast<::google::protobuf::uint32>(value));
          }
        } else if (static_cast<::google::protobuf::uint8>(tag) ==
                   static_cast<::google::protobuf::uint8>(
                       10u /* 10 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::
                   ReadPackedEnumPreserveUnknowns(
                       input, 1,
                       ::paddle_mobile::framework::proto::VarType_Type_IsValid,
                       &unknown_fields_stream, this->mutable_element_type())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:paddle_mobile.framework.proto.VarType.Tuple)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:paddle_mobile.framework.proto.VarType.Tuple)
  return false;
#undef DO_
}

void VarType_Tuple::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:paddle_mobile.framework.proto.VarType.Tuple)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void)cached_has_bits;

  // repeated .paddle_mobile.framework.proto.VarType.Type element_type = 1;
  for (int i = 0, n = this->element_type_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
        1, this->element_type(i), output);
  }

  output->WriteRaw(
      _internal_metadata_.unknown_fields().data(),
      static_cast<int>(_internal_metadata_.unknown_fields().size()));
  // @@protoc_insertion_point(serialize_end:paddle_mobile.framework.proto.VarType.Tuple)
}

size_t VarType_Tuple::ByteSizeLong() const {
  // @@protoc_insertion_point(message_byte_size_start:paddle_mobile.framework.proto.VarType.Tuple)
  size_t total_size = 0;

  total_size += _internal_metadata_.unknown_fields().size();

  // repeated .paddle_mobile.framework.proto.VarType.Type element_type = 1;
  {
    size_t data_size = 0;
    unsigned int count = static_cast<unsigned int>(this->element_type_size());
    for (unsigned int i = 0; i < count; i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::EnumSize(
          this->element_type(static_cast<int>(i)));
    }
    total_size += (1UL * count) + data_size;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void VarType_Tuple::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const VarType_Tuple*>(&from));
}

void VarType_Tuple::MergeFrom(const VarType_Tuple& from) {
  // @@protoc_insertion_point(class_specific_merge_from_start:paddle_mobile.framework.proto.VarType.Tuple)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void)cached_has_bits;

  element_type_.MergeFrom(from.element_type_);
}

void VarType_Tuple::CopyFrom(const VarType_Tuple& from) {
  // @@protoc_insertion_point(class_specific_copy_from_start:paddle_mobile.framework.proto.VarType.Tuple)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool VarType_Tuple::IsInitialized() const { return true; }

void VarType_Tuple::Swap(VarType_Tuple* other) {
  if (other == this) return;
  InternalSwap(other);
}
void VarType_Tuple::InternalSwap(VarType_Tuple* other) {
  using std::swap;
  element_type_.InternalSwap(&other->element_type_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::std::string VarType_Tuple::GetTypeName() const {
  return "paddle_mobile.framework.proto.VarType.Tuple";
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// VarType_Tuple

// repeated .paddle_mobile.framework.proto.VarType.Type element_type = 1;
int VarType_Tuple::element_type_size() const { return element_type_.size(); }
void VarType_Tuple::clear_element_type() { element_type_.Clear(); }
::paddle_mobile::framework::proto::VarType_Type VarType_Tuple::element_type(
    int index) const {
  // @@protoc_insertion_point(field_get:paddle_mobile.framework.proto.VarType.Tuple.element_type)
  return static_cast<::paddle_mobile::framework::proto::VarType_Type>(
      element_type_.Get(index));
}
void VarType_Tuple::set_element_type(
    int index, ::paddle_mobile::framework::proto::VarType_Type value) {
  assert(::paddle_mobile::framework::proto::VarType_Type_IsValid(value));
  element_type_.Set(index, value);
  // @@protoc_insertion_point(field_set:paddle_mobile.framework.proto.VarType.Tuple.element_type)
}
void VarType_Tuple::add_element_type(
    ::paddle_mobile::framework::proto::VarType_Type value) {
  assert(::paddle_mobile::framework::proto::VarType_Type_IsValid(value));
  element_type_.Add(value);
  // @@protoc_insertion_point(field_add:paddle_mobile.framework.proto.VarType.Tuple.element_type)
}
const ::google::protobuf::RepeatedField<int>& VarType_Tuple::element_type()
    const {
  // @@protoc_insertion_point(field_list:paddle_mobile.framework.proto.VarType.Tuple.element_type)
  return element_type_;
}
::google::protobuf::RepeatedField<int>* VarType_Tuple::mutable_element_type() {
  // @@protoc_insertion_point(field_mutable_list:paddle_mobile.framework.proto.VarType.Tuple.element_type)
  return &element_type_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int VarType::kTypeFieldNumber;
const int VarType::kSelectedRowsFieldNumber;
const int VarType::kLodTensorFieldNumber;
const int VarType::kTensorArrayFieldNumber;
const int VarType::kReaderFieldNumber;
const int VarType::kChannelFieldNumber;
const int VarType::kTupleFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

VarType::VarType()
    : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_framework_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:paddle_mobile.framework.proto.VarType)
}
VarType::VarType(const VarType& from)
    : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_selected_rows()) {
    selected_rows_ = new ::paddle_mobile::framework::proto::VarType_TensorDesc(
        *from.selected_rows_);
  } else {
    selected_rows_ = NULL;
  }
  if (from.has_lod_tensor()) {
    lod_tensor_ = new ::paddle_mobile::framework::proto::VarType_LoDTensorDesc(
        *from.lod_tensor_);
  } else {
    lod_tensor_ = NULL;
  }
  if (from.has_tensor_array()) {
    tensor_array_ =
        new ::paddle_mobile::framework::proto::VarType_LoDTensorArrayDesc(
            *from.tensor_array_);
  } else {
    tensor_array_ = NULL;
  }
  if (from.has_reader()) {
    reader_ = new ::paddle_mobile::framework::proto::VarType_ReaderDesc(
        *from.reader_);
  } else {
    reader_ = NULL;
  }
  if (from.has_channel()) {
    channel_ = new ::paddle_mobile::framework::proto::VarType_ChannelDesc(
        *from.channel_);
  } else {
    channel_ = NULL;
  }
  if (from.has_tuple()) {
    tuple_ = new ::paddle_mobile::framework::proto::VarType_Tuple(*from.tuple_);
  } else {
    tuple_ = NULL;
  }
  type_ = from.type_;
  // @@protoc_insertion_point(copy_constructor:paddle_mobile.framework.proto.VarType)
}

void VarType::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&selected_rows_, 0,
           static_cast<size_t>(reinterpret_cast<char*>(&type_) -
                               reinterpret_cast<char*>(&selected_rows_)) +
               sizeof(type_));
}

VarType::~VarType() {
  // @@protoc_insertion_point(destructor:paddle_mobile.framework.proto.VarType)
  SharedDtor();
}

void VarType::SharedDtor() {
  if (this != internal_default_instance()) delete selected_rows_;
  if (this != internal_default_instance()) delete lod_tensor_;
  if (this != internal_default_instance()) delete tensor_array_;
  if (this != internal_default_instance()) delete reader_;
  if (this != internal_default_instance()) delete channel_;
  if (this != internal_default_instance()) delete tuple_;
}

void VarType::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const VarType& VarType::default_instance() {
  protobuf_framework_2eproto::InitDefaults();
  return *internal_default_instance();
}

VarType* VarType::New(::google::protobuf::Arena* arena) const {
  VarType* n = new VarType;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void VarType::Clear() {
  // @@protoc_insertion_point(message_clear_start:paddle_mobile.framework.proto.VarType)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 63u) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(selected_rows_ != NULL);
      selected_rows_
          ->::paddle_mobile::framework::proto::VarType_TensorDesc::Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(lod_tensor_ != NULL);
      lod_tensor_
          ->::paddle_mobile::framework::proto::VarType_LoDTensorDesc::Clear();
    }
    if (cached_has_bits & 0x00000004u) {
      GOOGLE_DCHECK(tensor_array_ != NULL);
      tensor_array_->::paddle_mobile::framework::proto::
          VarType_LoDTensorArrayDesc::Clear();
    }
    if (cached_has_bits & 0x00000008u) {
      GOOGLE_DCHECK(reader_ != NULL);
      reader_->::paddle_mobile::framework::proto::VarType_ReaderDesc::Clear();
    }
    if (cached_has_bits & 0x00000010u) {
      GOOGLE_DCHECK(channel_ != NULL);
      channel_->::paddle_mobile::framework::proto::VarType_ChannelDesc::Clear();
    }
    if (cached_has_bits & 0x00000020u) {
      GOOGLE_DCHECK(tuple_ != NULL);
      tuple_->::paddle_mobile::framework::proto::VarType_Tuple::Clear();
    }
  }
  type_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool VarType::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) \
  if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::io::LazyStringOutputStream unknown_fields_string(
      ::google::protobuf::NewPermanentCallback(
          &_internal_metadata_,
          &::google::protobuf::internal::InternalMetadataWithArenaLite::
              mutable_unknown_fields));
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_string, false);
  // @@protoc_insertion_point(parse_start:paddle_mobile.framework.proto.VarType)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p =
        input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (
        ::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .paddle_mobile.framework.proto.VarType.Type type = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) ==
            static_cast<::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
               int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
              input, &value)));
          if (::paddle_mobile::framework::proto::VarType_Type_IsValid(value)) {
            set_type(
                static_cast<::paddle_mobile::framework::proto::VarType_Type>(
                    value));
          } else {
            unknown_fields_stream.WriteVarint32(8u);
            unknown_fields_stream.WriteVarint32(
                static_cast<::google::protobuf::uint32>(value));
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .paddle_mobile.framework.proto.VarType.TensorDesc
      // selected_rows = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) ==
            static_cast<::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::
                  ReadMessageNoVirtual(input, mutable_selected_rows()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .paddle_mobile.framework.proto.VarType.LoDTensorDesc
      // lod_tensor = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) ==
            static_cast<::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::
                  ReadMessageNoVirtual(input, mutable_lod_tensor()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .paddle_mobile.framework.proto.VarType.LoDTensorArrayDesc
      // tensor_array = 4;
      case 4: {
        if (static_cast<::google::protobuf::uint8>(tag) ==
            static_cast<::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::
                  ReadMessageNoVirtual(input, mutable_tensor_array()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .paddle_mobile.framework.proto.VarType.ReaderDesc reader = 5;
      case 5: {
        if (static_cast<::google::protobuf::uint8>(tag) ==
            static_cast<::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::
                  ReadMessageNoVirtual(input, mutable_reader()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .paddle_mobile.framework.proto.VarType.ChannelDesc channel =
      // 6;
      case 6: {
        if (static_cast<::google::protobuf::uint8>(tag) ==
            static_cast<::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::
                  ReadMessageNoVirtual(input, mutable_channel()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .paddle_mobile.framework.proto.VarType.Tuple tuple = 7;
      case 7: {
        if (static_cast<::google::protobuf::uint8>(tag) ==
            static_cast<::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::
                  ReadMessageNoVirtual(input, mutable_tuple()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:paddle_mobile.framework.proto.VarType)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:paddle_mobile.framework.proto.VarType)
  return false;
#undef DO_
}

void VarType::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:paddle_mobile.framework.proto.VarType)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .paddle_mobile.framework.proto.VarType.Type type = 1;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(1, this->type(),
                                                            output);
  }

  // optional .paddle_mobile.framework.proto.VarType.TensorDesc selected_rows =
  // 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
        2, *this->selected_rows_, output);
  }

  // optional .paddle_mobile.framework.proto.VarType.LoDTensorDesc lod_tensor =
  // 3;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
        3, *this->lod_tensor_, output);
  }

  // optional .paddle_mobile.framework.proto.VarType.LoDTensorArrayDesc
  // tensor_array = 4;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
        4, *this->tensor_array_, output);
  }

  // optional .paddle_mobile.framework.proto.VarType.ReaderDesc reader = 5;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
        5, *this->reader_, output);
  }

  // optional .paddle_mobile.framework.proto.VarType.ChannelDesc channel = 6;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
        6, *this->channel_, output);
  }

  // optional .paddle_mobile.framework.proto.VarType.Tuple tuple = 7;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(7, *this->tuple_,
                                                               output);
  }

  output->WriteRaw(
      _internal_metadata_.unknown_fields().data(),
      static_cast<int>(_internal_metadata_.unknown_fields().size()));
  // @@protoc_insertion_point(serialize_end:paddle_mobile.framework.proto.VarType)
}

size_t VarType::ByteSizeLong() const {
  // @@protoc_insertion_point(message_byte_size_start:paddle_mobile.framework.proto.VarType)
  size_t total_size = 0;

  total_size += _internal_metadata_.unknown_fields().size();

  // required .paddle_mobile.framework.proto.VarType.Type type = 1;
  if (has_type()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::EnumSize(
                          this->type());
  }
  if (_has_bits_[0 / 32] & 63u) {
    // optional .paddle_mobile.framework.proto.VarType.TensorDesc selected_rows
    // = 2;
    if (has_selected_rows()) {
      total_size +=
          1 +
          ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
              *this->selected_rows_);
    }

    // optional .paddle_mobile.framework.proto.VarType.LoDTensorDesc lod_tensor
    // = 3;
    if (has_lod_tensor()) {
      total_size +=
          1 +
          ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
              *this->lod_tensor_);
    }

    // optional .paddle_mobile.framework.proto.VarType.LoDTensorArrayDesc
    // tensor_array = 4;
    if (has_tensor_array()) {
      total_size +=
          1 +
          ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
              *this->tensor_array_);
    }

    // optional .paddle_mobile.framework.proto.VarType.ReaderDesc reader = 5;
    if (has_reader()) {
      total_size +=
          1 +
          ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
              *this->reader_);
    }

    // optional .paddle_mobile.framework.proto.VarType.ChannelDesc channel = 6;
    if (has_channel()) {
      total_size +=
          1 +
          ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
              *this->channel_);
    }

    // optional .paddle_mobile.framework.proto.VarType.Tuple tuple = 7;
    if (has_tuple()) {
      total_size +=
          1 +
          ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
              *this->tuple_);
    }
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void VarType::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const VarType*>(&from));
}

void VarType::MergeFrom(const VarType& from) {
  // @@protoc_insertion_point(class_specific_merge_from_start:paddle_mobile.framework.proto.VarType)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 127u) {
    if (cached_has_bits & 0x00000001u) {
      mutable_selected_rows()
          ->::paddle_mobile::framework::proto::VarType_TensorDesc::MergeFrom(
              from.selected_rows());
    }
    if (cached_has_bits & 0x00000002u) {
      mutable_lod_tensor()
          ->::paddle_mobile::framework::proto::VarType_LoDTensorDesc::MergeFrom(
              from.lod_tensor());
    }
    if (cached_has_bits & 0x00000004u) {
      mutable_tensor_array()->::paddle_mobile::framework::proto::
          VarType_LoDTensorArrayDesc::MergeFrom(from.tensor_array());
    }
    if (cached_has_bits & 0x00000008u) {
      mutable_reader()
          ->::paddle_mobile::framework::proto::VarType_ReaderDesc::MergeFrom(
              from.reader());
    }
    if (cached_has_bits & 0x00000010u) {
      mutable_channel()
          ->::paddle_mobile::framework::proto::VarType_ChannelDesc::MergeFrom(
              from.channel());
    }
    if (cached_has_bits & 0x00000020u) {
      mutable_tuple()
          ->::paddle_mobile::framework::proto::VarType_Tuple::MergeFrom(
              from.tuple());
    }
    if (cached_has_bits & 0x00000040u) {
      type_ = from.type_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void VarType::CopyFrom(const VarType& from) {
  // @@protoc_insertion_point(class_specific_copy_from_start:paddle_mobile.framework.proto.VarType)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool VarType::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000040) != 0x00000040) return false;
  if (has_selected_rows()) {
    if (!this->selected_rows_->IsInitialized()) return false;
  }
  if (has_lod_tensor()) {
    if (!this->lod_tensor_->IsInitialized()) return false;
  }
  if (has_tensor_array()) {
    if (!this->tensor_array_->IsInitialized()) return false;
  }
  if (has_reader()) {
    if (!this->reader_->IsInitialized()) return false;
  }
  if (has_channel()) {
    if (!this->channel_->IsInitialized()) return false;
  }
  return true;
}

void VarType::Swap(VarType* other) {
  if (other == this) return;
  InternalSwap(other);
}
void VarType::InternalSwap(VarType* other) {
  using std::swap;
  swap(selected_rows_, other->selected_rows_);
  swap(lod_tensor_, other->lod_tensor_);
  swap(tensor_array_, other->tensor_array_);
  swap(reader_, other->reader_);
  swap(channel_, other->channel_);
  swap(tuple_, other->tuple_);
  swap(type_, other->type_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::std::string VarType::GetTypeName() const {
  return "paddle_mobile.framework.proto.VarType";
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// VarType

// required .paddle_mobile.framework.proto.VarType.Type type = 1;
bool VarType::has_type() const { return (_has_bits_[0] & 0x00000040u) != 0; }
void VarType::set_has_type() { _has_bits_[0] |= 0x00000040u; }
void VarType::clear_has_type() { _has_bits_[0] &= ~0x00000040u; }
void VarType::clear_type() {
  type_ = 0;
  clear_has_type();
}
::paddle_mobile::framework::proto::VarType_Type VarType::type() const {
  // @@protoc_insertion_point(field_get:paddle_mobile.framework.proto.VarType.type)
  return static_cast<::paddle_mobile::framework::proto::VarType_Type>(type_);
}
void VarType::set_type(::paddle_mobile::framework::proto::VarType_Type value) {
  assert(::paddle_mobile::framework::proto::VarType_Type_IsValid(value));
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:paddle_mobile.framework.proto.VarType.type)
}

// optional .paddle_mobile.framework.proto.VarType.TensorDesc selected_rows = 2;
bool VarType::has_selected_rows() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void VarType::set_has_selected_rows() { _has_bits_[0] |= 0x00000001u; }
void VarType::clear_has_selected_rows() { _has_bits_[0] &= ~0x00000001u; }
void VarType::clear_selected_rows() {
  if (selected_rows_ != NULL)
    selected_rows_
        ->::paddle_mobile::framework::proto::VarType_TensorDesc::Clear();
  clear_has_selected_rows();
}
const ::paddle_mobile::framework::proto::VarType_TensorDesc&
VarType::selected_rows() const {
  const ::paddle_mobile::framework::proto::VarType_TensorDesc* p =
      selected_rows_;
  // @@protoc_insertion_point(field_get:paddle_mobile.framework.proto.VarType.selected_rows)
  return p != NULL ? *p : *reinterpret_cast<const ::paddle_mobile::framework::
                                                proto::VarType_TensorDesc*>(
                              &::paddle_mobile::framework::proto::
                                  _VarType_TensorDesc_default_instance_);
}
::paddle_mobile::framework::proto::VarType_TensorDesc*
VarType::mutable_selected_rows() {
  set_has_selected_rows();
  if (selected_rows_ == NULL) {
    selected_rows_ = new ::paddle_mobile::framework::proto::VarType_TensorDesc;
  }
  // @@protoc_insertion_point(field_mutable:paddle_mobile.framework.proto.VarType.selected_rows)
  return selected_rows_;
}
::paddle_mobile::framework::proto::VarType_TensorDesc*
VarType::release_selected_rows() {
  // @@protoc_insertion_point(field_release:paddle_mobile.framework.proto.VarType.selected_rows)
  clear_has_selected_rows();
  ::paddle_mobile::framework::proto::VarType_TensorDesc* temp = selected_rows_;
  selected_rows_ = NULL;
  return temp;
}
void VarType::set_allocated_selected_rows(
    ::paddle_mobile::framework::proto::VarType_TensorDesc* selected_rows) {
  delete selected_rows_;
  selected_rows_ = selected_rows;
  if (selected_rows) {
    set_has_selected_rows();
  } else {
    clear_has_selected_rows();
  }
  // @@protoc_insertion_point(field_set_allocated:paddle_mobile.framework.proto.VarType.selected_rows)
}

// optional .paddle_mobile.framework.proto.VarType.LoDTensorDesc lod_tensor = 3;
bool VarType::has_lod_tensor() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void VarType::set_has_lod_tensor() { _has_bits_[0] |= 0x00000002u; }
void VarType::clear_has_lod_tensor() { _has_bits_[0] &= ~0x00000002u; }
void VarType::clear_lod_tensor() {
  if (lod_tensor_ != NULL)
    lod_tensor_
        ->::paddle_mobile::framework::proto::VarType_LoDTensorDesc::Clear();
  clear_has_lod_tensor();
}
const ::paddle_mobile::framework::proto::VarType_LoDTensorDesc&
VarType::lod_tensor() const {
  const ::paddle_mobile::framework::proto::VarType_LoDTensorDesc* p =
      lod_tensor_;
  // @@protoc_insertion_point(field_get:paddle_mobile.framework.proto.VarType.lod_tensor)
  return p != NULL ? *p : *reinterpret_cast<const ::paddle_mobile::framework::
                                                proto::VarType_LoDTensorDesc*>(
                              &::paddle_mobile::framework::proto::
                                  _VarType_LoDTensorDesc_default_instance_);
}
::paddle_mobile::framework::proto::VarType_LoDTensorDesc*
VarType::mutable_lod_tensor() {
  set_has_lod_tensor();
  if (lod_tensor_ == NULL) {
    lod_tensor_ = new ::paddle_mobile::framework::proto::VarType_LoDTensorDesc;
  }
  // @@protoc_insertion_point(field_mutable:paddle_mobile.framework.proto.VarType.lod_tensor)
  return lod_tensor_;
}
::paddle_mobile::framework::proto::VarType_LoDTensorDesc*
VarType::release_lod_tensor() {
  // @@protoc_insertion_point(field_release:paddle_mobile.framework.proto.VarType.lod_tensor)
  clear_has_lod_tensor();
  ::paddle_mobile::framework::proto::VarType_LoDTensorDesc* temp = lod_tensor_;
  lod_tensor_ = NULL;
  return temp;
}
void VarType::set_allocated_lod_tensor(
    ::paddle_mobile::framework::proto::VarType_LoDTensorDesc* lod_tensor) {
  delete lod_tensor_;
  lod_tensor_ = lod_tensor;
  if (lod_tensor) {
    set_has_lod_tensor();
  } else {
    clear_has_lod_tensor();
  }
  // @@protoc_insertion_point(field_set_allocated:paddle_mobile.framework.proto.VarType.lod_tensor)
}

// optional .paddle_mobile.framework.proto.VarType.LoDTensorArrayDesc
// tensor_array = 4;
bool VarType::has_tensor_array() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void VarType::set_has_tensor_array() { _has_bits_[0] |= 0x00000004u; }
void VarType::clear_has_tensor_array() { _has_bits_[0] &= ~0x00000004u; }
void VarType::clear_tensor_array() {
  if (tensor_array_ != NULL)
    tensor_array_->::paddle_mobile::framework::proto::
        VarType_LoDTensorArrayDesc::Clear();
  clear_has_tensor_array();
}
const ::paddle_mobile::framework::proto::VarType_LoDTensorArrayDesc&
VarType::tensor_array() const {
  const ::paddle_mobile::framework::proto::VarType_LoDTensorArrayDesc* p =
      tensor_array_;
  // @@protoc_insertion_point(field_get:paddle_mobile.framework.proto.VarType.tensor_array)
  return p != NULL ? *p
                   : *reinterpret_cast<const ::paddle_mobile::framework::proto::
                                           VarType_LoDTensorArrayDesc*>(
                         &::paddle_mobile::framework::proto::
                             _VarType_LoDTensorArrayDesc_default_instance_);
}
::paddle_mobile::framework::proto::VarType_LoDTensorArrayDesc*
VarType::mutable_tensor_array() {
  set_has_tensor_array();
  if (tensor_array_ == NULL) {
    tensor_array_ =
        new ::paddle_mobile::framework::proto::VarType_LoDTensorArrayDesc;
  }
  // @@protoc_insertion_point(field_mutable:paddle_mobile.framework.proto.VarType.tensor_array)
  return tensor_array_;
}
::paddle_mobile::framework::proto::VarType_LoDTensorArrayDesc*
VarType::release_tensor_array() {
  // @@protoc_insertion_point(field_release:paddle_mobile.framework.proto.VarType.tensor_array)
  clear_has_tensor_array();
  ::paddle_mobile::framework::proto::VarType_LoDTensorArrayDesc* temp =
      tensor_array_;
  tensor_array_ = NULL;
  return temp;
}
void VarType::set_allocated_tensor_array(
    ::paddle_mobile::framework::proto::VarType_LoDTensorArrayDesc*
        tensor_array) {
  delete tensor_array_;
  tensor_array_ = tensor_array;
  if (tensor_array) {
    set_has_tensor_array();
  } else {
    clear_has_tensor_array();
  }
  // @@protoc_insertion_point(field_set_allocated:paddle_mobile.framework.proto.VarType.tensor_array)
}

// optional .paddle_mobile.framework.proto.VarType.ReaderDesc reader = 5;
bool VarType::has_reader() const { return (_has_bits_[0] & 0x00000008u) != 0; }
void VarType::set_has_reader() { _has_bits_[0] |= 0x00000008u; }
void VarType::clear_has_reader() { _has_bits_[0] &= ~0x00000008u; }
void VarType::clear_reader() {
  if (reader_ != NULL)
    reader_->::paddle_mobile::framework::proto::VarType_ReaderDesc::Clear();
  clear_has_reader();
}
const ::paddle_mobile::framework::proto::VarType_ReaderDesc& VarType::reader()
    const {
  const ::paddle_mobile::framework::proto::VarType_ReaderDesc* p = reader_;
  // @@protoc_insertion_point(field_get:paddle_mobile.framework.proto.VarType.reader)
  return p != NULL ? *p : *reinterpret_cast<const ::paddle_mobile::framework::
                                                proto::VarType_ReaderDesc*>(
                              &::paddle_mobile::framework::proto::
                                  _VarType_ReaderDesc_default_instance_);
}
::paddle_mobile::framework::proto::VarType_ReaderDesc*
VarType::mutable_reader() {
  set_has_reader();
  if (reader_ == NULL) {
    reader_ = new ::paddle_mobile::framework::proto::VarType_ReaderDesc;
  }
  // @@protoc_insertion_point(field_mutable:paddle_mobile.framework.proto.VarType.reader)
  return reader_;
}
::paddle_mobile::framework::proto::VarType_ReaderDesc*
VarType::release_reader() {
  // @@protoc_insertion_point(field_release:paddle_mobile.framework.proto.VarType.reader)
  clear_has_reader();
  ::paddle_mobile::framework::proto::VarType_ReaderDesc* temp = reader_;
  reader_ = NULL;
  return temp;
}
void VarType::set_allocated_reader(
    ::paddle_mobile::framework::proto::VarType_ReaderDesc* reader) {
  delete reader_;
  reader_ = reader;
  if (reader) {
    set_has_reader();
  } else {
    clear_has_reader();
  }
  // @@protoc_insertion_point(field_set_allocated:paddle_mobile.framework.proto.VarType.reader)
}

// optional .paddle_mobile.framework.proto.VarType.ChannelDesc channel = 6;
bool VarType::has_channel() const { return (_has_bits_[0] & 0x00000010u) != 0; }
void VarType::set_has_channel() { _has_bits_[0] |= 0x00000010u; }
void VarType::clear_has_channel() { _has_bits_[0] &= ~0x00000010u; }
void VarType::clear_channel() {
  if (channel_ != NULL)
    channel_->::paddle_mobile::framework::proto::VarType_ChannelDesc::Clear();
  clear_has_channel();
}
const ::paddle_mobile::framework::proto::VarType_ChannelDesc& VarType::channel()
    const {
  const ::paddle_mobile::framework::proto::VarType_ChannelDesc* p = channel_;
  // @@protoc_insertion_point(field_get:paddle_mobile.framework.proto.VarType.channel)
  return p != NULL ? *p : *reinterpret_cast<const ::paddle_mobile::framework::
                                                proto::VarType_ChannelDesc*>(
                              &::paddle_mobile::framework::proto::
                                  _VarType_ChannelDesc_default_instance_);
}
::paddle_mobile::framework::proto::VarType_ChannelDesc*
VarType::mutable_channel() {
  set_has_channel();
  if (channel_ == NULL) {
    channel_ = new ::paddle_mobile::framework::proto::VarType_ChannelDesc;
  }
  // @@protoc_insertion_point(field_mutable:paddle_mobile.framework.proto.VarType.channel)
  return channel_;
}
::paddle_mobile::framework::proto::VarType_ChannelDesc*
VarType::release_channel() {
  // @@protoc_insertion_point(field_release:paddle_mobile.framework.proto.VarType.channel)
  clear_has_channel();
  ::paddle_mobile::framework::proto::VarType_ChannelDesc* temp = channel_;
  channel_ = NULL;
  return temp;
}
void VarType::set_allocated_channel(
    ::paddle_mobile::framework::proto::VarType_ChannelDesc* channel) {
  delete channel_;
  channel_ = channel;
  if (channel) {
    set_has_channel();
  } else {
    clear_has_channel();
  }
  // @@protoc_insertion_point(field_set_allocated:paddle_mobile.framework.proto.VarType.channel)
}

// optional .paddle_mobile.framework.proto.VarType.Tuple tuple = 7;
bool VarType::has_tuple() const { return (_has_bits_[0] & 0x00000020u) != 0; }
void VarType::set_has_tuple() { _has_bits_[0] |= 0x00000020u; }
void VarType::clear_has_tuple() { _has_bits_[0] &= ~0x00000020u; }
void VarType::clear_tuple() {
  if (tuple_ != NULL)
    tuple_->::paddle_mobile::framework::proto::VarType_Tuple::Clear();
  clear_has_tuple();
}
const ::paddle_mobile::framework::proto::VarType_Tuple& VarType::tuple() const {
  const ::paddle_mobile::framework::proto::VarType_Tuple* p = tuple_;
  // @@protoc_insertion_point(field_get:paddle_mobile.framework.proto.VarType.tuple)
  return p != NULL
             ? *p
             : *reinterpret_cast<
                   const ::paddle_mobile::framework::proto::VarType_Tuple*>(
                   &::paddle_mobile::framework::proto::
                       _VarType_Tuple_default_instance_);
}
::paddle_mobile::framework::proto::VarType_Tuple* VarType::mutable_tuple() {
  set_has_tuple();
  if (tuple_ == NULL) {
    tuple_ = new ::paddle_mobile::framework::proto::VarType_Tuple;
  }
  // @@protoc_insertion_point(field_mutable:paddle_mobile.framework.proto.VarType.tuple)
  return tuple_;
}
::paddle_mobile::framework::proto::VarType_Tuple* VarType::release_tuple() {
  // @@protoc_insertion_point(field_release:paddle_mobile.framework.proto.VarType.tuple)
  clear_has_tuple();
  ::paddle_mobile::framework::proto::VarType_Tuple* temp = tuple_;
  tuple_ = NULL;
  return temp;
}
void VarType::set_allocated_tuple(
    ::paddle_mobile::framework::proto::VarType_Tuple* tuple) {
  delete tuple_;
  tuple_ = tuple;
  if (tuple) {
    set_has_tuple();
  } else {
    clear_has_tuple();
  }
  // @@protoc_insertion_point(field_set_allocated:paddle_mobile.framework.proto.VarType.tuple)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int VarDesc::kNameFieldNumber;
const int VarDesc::kTypeFieldNumber;
const int VarDesc::kPersistableFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

VarDesc::VarDesc()
    : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_framework_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:paddle_mobile.framework.proto.VarDesc)
}
VarDesc::VarDesc(const VarDesc& from)
    : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_name()) {
    name_.AssignWithDefault(
        &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
        from.name_);
  }
  if (from.has_type()) {
    type_ = new ::paddle_mobile::framework::proto::VarType(*from.type_);
  } else {
    type_ = NULL;
  }
  persistable_ = from.persistable_;
  // @@protoc_insertion_point(copy_constructor:paddle_mobile.framework.proto.VarDesc)
}

void VarDesc::SharedCtor() {
  _cached_size_ = 0;
  name_.UnsafeSetDefault(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&type_, 0,
           static_cast<size_t>(reinterpret_cast<char*>(&persistable_) -
                               reinterpret_cast<char*>(&type_)) +
               sizeof(persistable_));
}

VarDesc::~VarDesc() {
  // @@protoc_insertion_point(destructor:paddle_mobile.framework.proto.VarDesc)
  SharedDtor();
}

void VarDesc::SharedDtor() {
  name_.DestroyNoArena(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete type_;
}

void VarDesc::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const VarDesc& VarDesc::default_instance() {
  protobuf_framework_2eproto::InitDefaults();
  return *internal_default_instance();
}

VarDesc* VarDesc::New(::google::protobuf::Arena* arena) const {
  VarDesc* n = new VarDesc;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void VarDesc::Clear() {
  // @@protoc_insertion_point(message_clear_start:paddle_mobile.framework.proto.VarDesc)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(!name_.IsDefault(
          &::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*name_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(type_ != NULL);
      type_->::paddle_mobile::framework::proto::VarType::Clear();
    }
  }
  persistable_ = false;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool VarDesc::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) \
  if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::io::LazyStringOutputStream unknown_fields_string(
      ::google::protobuf::NewPermanentCallback(
          &_internal_metadata_,
          &::google::protobuf::internal::InternalMetadataWithArenaLite::
              mutable_unknown_fields));
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_string, false);
  // @@protoc_insertion_point(parse_start:paddle_mobile.framework.proto.VarDesc)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p =
        input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (
        ::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string name = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) ==
            static_cast<::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
              input, this->mutable_name()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required .paddle_mobile.framework.proto.VarType type = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) ==
            static_cast<::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::
                  ReadMessageNoVirtual(input, mutable_type()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool persistable = 3 [default = false];
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) ==
            static_cast<::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_persistable();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
               bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
              input, &persistable_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:paddle_mobile.framework.proto.VarDesc)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:paddle_mobile.framework.proto.VarDesc)
  return false;
#undef DO_
}

void VarDesc::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:paddle_mobile.framework.proto.VarDesc)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string name = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
        1, this->name(), output);
  }

  // required .paddle_mobile.framework.proto.VarType type = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(2, *this->type_,
                                                               output);
  }

  // optional bool persistable = 3 [default = false];
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(
        3, this->persistable(), output);
  }

  output->WriteRaw(
      _internal_metadata_.unknown_fields().data(),
      static_cast<int>(_internal_metadata_.unknown_fields().size()));
  // @@protoc_insertion_point(serialize_end:paddle_mobile.framework.proto.VarDesc)
}

size_t VarDesc::RequiredFieldsByteSizeFallback() const {
  // @@protoc_insertion_point(required_fields_byte_size_fallback_start:paddle_mobile.framework.proto.VarDesc)
  size_t total_size = 0;

  if (has_name()) {
    // required string name = 1;
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                          this->name());
  }

  if (has_type()) {
    // required .paddle_mobile.framework.proto.VarType type = 2;
    total_size +=
        1 + ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
                *this->type_);
  }

  return total_size;
}
size_t VarDesc::ByteSizeLong() const {
  // @@protoc_insertion_point(message_byte_size_start:paddle_mobile.framework.proto.VarDesc)
  size_t total_size = 0;

  total_size += _internal_metadata_.unknown_fields().size();

  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) ==
      0) {  // All required fields are present.
    // required string name = 1;
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                          this->name());

    // required .paddle_mobile.framework.proto.VarType type = 2;
    total_size +=
        1 + ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
                *this->type_);

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  // optional bool persistable = 3 [default = false];
  if (has_persistable()) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void VarDesc::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const VarDesc*>(&from));
}

void VarDesc::MergeFrom(const VarDesc& from) {
  // @@protoc_insertion_point(class_specific_merge_from_start:paddle_mobile.framework.proto.VarDesc)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_name();
      name_.AssignWithDefault(
          &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
          from.name_);
    }
    if (cached_has_bits & 0x00000002u) {
      mutable_type()->::paddle_mobile::framework::proto::VarType::MergeFrom(
          from.type());
    }
    if (cached_has_bits & 0x00000004u) {
      persistable_ = from.persistable_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void VarDesc::CopyFrom(const VarDesc& from) {
  // @@protoc_insertion_point(class_specific_copy_from_start:paddle_mobile.framework.proto.VarDesc)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool VarDesc::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;
  if (has_type()) {
    if (!this->type_->IsInitialized()) return false;
  }
  return true;
}

void VarDesc::Swap(VarDesc* other) {
  if (other == this) return;
  InternalSwap(other);
}
void VarDesc::InternalSwap(VarDesc* other) {
  using std::swap;
  name_.Swap(&other->name_);
  swap(type_, other->type_);
  swap(persistable_, other->persistable_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::std::string VarDesc::GetTypeName() const {
  return "paddle_mobile.framework.proto.VarDesc";
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// VarDesc

// required string name = 1;
bool VarDesc::has_name() const { return (_has_bits_[0] & 0x00000001u) != 0; }
void VarDesc::set_has_name() { _has_bits_[0] |= 0x00000001u; }
void VarDesc::clear_has_name() { _has_bits_[0] &= ~0x00000001u; }
void VarDesc::clear_name() {
  name_.ClearToEmptyNoArena(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_name();
}
const ::std::string& VarDesc::name() const {
  // @@protoc_insertion_point(field_get:paddle_mobile.framework.proto.VarDesc.name)
  return name_.GetNoArena();
}
void VarDesc::set_name(const ::std::string& value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
                   value);
  // @@protoc_insertion_point(field_set:paddle_mobile.framework.proto.VarDesc.name)
}
#if LANG_CXX11
void VarDesc::set_name(::std::string&& value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
                   ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:paddle_mobile.framework.proto.VarDesc.name)
}
#endif
void VarDesc::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
                   ::std::string(value));
  // @@protoc_insertion_point(field_set_char:paddle_mobile.framework.proto.VarDesc.name)
}
void VarDesc::set_name(const char* value, size_t size) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
                   ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:paddle_mobile.framework.proto.VarDesc.name)
}
::std::string* VarDesc::mutable_name() {
  set_has_name();
  // @@protoc_insertion_point(field_mutable:paddle_mobile.framework.proto.VarDesc.name)
  return name_.MutableNoArena(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* VarDesc::release_name() {
  // @@protoc_insertion_point(field_release:paddle_mobile.framework.proto.VarDesc.name)
  clear_has_name();
  return name_.ReleaseNoArena(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void VarDesc::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    set_has_name();
  } else {
    clear_has_name();
  }
  name_.SetAllocatedNoArena(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:paddle_mobile.framework.proto.VarDesc.name)
}

// required .paddle_mobile.framework.proto.VarType type = 2;
bool VarDesc::has_type() const { return (_has_bits_[0] & 0x00000002u) != 0; }
void VarDesc::set_has_type() { _has_bits_[0] |= 0x00000002u; }
void VarDesc::clear_has_type() { _has_bits_[0] &= ~0x00000002u; }
void VarDesc::clear_type() {
  if (type_ != NULL) type_->::paddle_mobile::framework::proto::VarType::Clear();
  clear_has_type();
}
const ::paddle_mobile::framework::proto::VarType& VarDesc::type() const {
  const ::paddle_mobile::framework::proto::VarType* p = type_;
  // @@protoc_insertion_point(field_get:paddle_mobile.framework.proto.VarDesc.type)
  return p != NULL ? *p
                   : *reinterpret_cast<
                         const ::paddle_mobile::framework::proto::VarType*>(
                         &::paddle_mobile::framework::proto::
                             _VarType_default_instance_);
}
::paddle_mobile::framework::proto::VarType* VarDesc::mutable_type() {
  set_has_type();
  if (type_ == NULL) {
    type_ = new ::paddle_mobile::framework::proto::VarType;
  }
  // @@protoc_insertion_point(field_mutable:paddle_mobile.framework.proto.VarDesc.type)
  return type_;
}
::paddle_mobile::framework::proto::VarType* VarDesc::release_type() {
  // @@protoc_insertion_point(field_release:paddle_mobile.framework.proto.VarDesc.type)
  clear_has_type();
  ::paddle_mobile::framework::proto::VarType* temp = type_;
  type_ = NULL;
  return temp;
}
void VarDesc::set_allocated_type(
    ::paddle_mobile::framework::proto::VarType* type) {
  delete type_;
  type_ = type;
  if (type) {
    set_has_type();
  } else {
    clear_has_type();
  }
  // @@protoc_insertion_point(field_set_allocated:paddle_mobile.framework.proto.VarDesc.type)
}

// optional bool persistable = 3 [default = false];
bool VarDesc::has_persistable() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void VarDesc::set_has_persistable() { _has_bits_[0] |= 0x00000004u; }
void VarDesc::clear_has_persistable() { _has_bits_[0] &= ~0x00000004u; }
void VarDesc::clear_persistable() {
  persistable_ = false;
  clear_has_persistable();
}
bool VarDesc::persistable() const {
  // @@protoc_insertion_point(field_get:paddle_mobile.framework.proto.VarDesc.persistable)
  return persistable_;
}
void VarDesc::set_persistable(bool value) {
  set_has_persistable();
  persistable_ = value;
  // @@protoc_insertion_point(field_set:paddle_mobile.framework.proto.VarDesc.persistable)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int BlockDesc::kIdxFieldNumber;
const int BlockDesc::kParentIdxFieldNumber;
const int BlockDesc::kVarsFieldNumber;
const int BlockDesc::kOpsFieldNumber;
const int BlockDesc::kForwardBlockIdxFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

BlockDesc::BlockDesc()
    : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_framework_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:paddle_mobile.framework.proto.BlockDesc)
}
BlockDesc::BlockDesc(const BlockDesc& from)
    : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      vars_(from.vars_),
      ops_(from.ops_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&idx_, &from.idx_,
           static_cast<size_t>(reinterpret_cast<char*>(&forward_block_idx_) -
                               reinterpret_cast<char*>(&idx_)) +
               sizeof(forward_block_idx_));
  // @@protoc_insertion_point(copy_constructor:paddle_mobile.framework.proto.BlockDesc)
}

void BlockDesc::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&idx_, 0, static_cast<size_t>(reinterpret_cast<char*>(&parent_idx_) -
                                         reinterpret_cast<char*>(&idx_)) +
                         sizeof(parent_idx_));
  forward_block_idx_ = -1;
}

BlockDesc::~BlockDesc() {
  // @@protoc_insertion_point(destructor:paddle_mobile.framework.proto.BlockDesc)
  SharedDtor();
}

void BlockDesc::SharedDtor() {}

void BlockDesc::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const BlockDesc& BlockDesc::default_instance() {
  protobuf_framework_2eproto::InitDefaults();
  return *internal_default_instance();
}

BlockDesc* BlockDesc::New(::google::protobuf::Arena* arena) const {
  BlockDesc* n = new BlockDesc;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void BlockDesc::Clear() {
  // @@protoc_insertion_point(message_clear_start:paddle_mobile.framework.proto.BlockDesc)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  vars_.Clear();
  ops_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 7u) {
    ::memset(&idx_, 0,
             static_cast<size_t>(reinterpret_cast<char*>(&parent_idx_) -
                                 reinterpret_cast<char*>(&idx_)) +
                 sizeof(parent_idx_));
    forward_block_idx_ = -1;
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool BlockDesc::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) \
  if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::io::LazyStringOutputStream unknown_fields_string(
      ::google::protobuf::NewPermanentCallback(
          &_internal_metadata_,
          &::google::protobuf::internal::InternalMetadataWithArenaLite::
              mutable_unknown_fields));
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_string, false);
  // @@protoc_insertion_point(parse_start:paddle_mobile.framework.proto.BlockDesc)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p =
        input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (
        ::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 idx = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) ==
            static_cast<::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_idx();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
               ::google::protobuf::int32,
               ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
              input, &idx_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 parent_idx = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) ==
            static_cast<::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_parent_idx();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
               ::google::protobuf::int32,
               ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
              input, &parent_idx_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .paddle_mobile.framework.proto.VarDesc vars = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) ==
            static_cast<::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::
                  ReadMessageNoVirtual(input, add_vars()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .paddle_mobile.framework.proto.OpDesc ops = 4;
      case 4: {
        if (static_cast<::google::protobuf::uint8>(tag) ==
            static_cast<::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::
                  ReadMessageNoVirtual(input, add_ops()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 forward_block_idx = 5 [default = -1];
      case 5: {
        if (static_cast<::google::protobuf::uint8>(tag) ==
            static_cast<::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {
          set_has_forward_block_idx();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
               ::google::protobuf::int32,
               ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
              input, &forward_block_idx_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:paddle_mobile.framework.proto.BlockDesc)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:paddle_mobile.framework.proto.BlockDesc)
  return false;
#undef DO_
}

void BlockDesc::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:paddle_mobile.framework.proto.BlockDesc)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 idx = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->idx(),
                                                             output);
  }

  // required int32 parent_idx = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
        2, this->parent_idx(), output);
  }

  // repeated .paddle_mobile.framework.proto.VarDesc vars = 3;
  for (unsigned int i = 0, n = static_cast<unsigned int>(this->vars_size());
       i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
        3, this->vars(static_cast<int>(i)), output);
  }

  // repeated .paddle_mobile.framework.proto.OpDesc ops = 4;
  for (unsigned int i = 0, n = static_cast<unsigned int>(this->ops_size());
       i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
        4, this->ops(static_cast<int>(i)), output);
  }

  // optional int32 forward_block_idx = 5 [default = -1];
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
        5, this->forward_block_idx(), output);
  }

  output->WriteRaw(
      _internal_metadata_.unknown_fields().data(),
      static_cast<int>(_internal_metadata_.unknown_fields().size()));
  // @@protoc_insertion_point(serialize_end:paddle_mobile.framework.proto.BlockDesc)
}

size_t BlockDesc::RequiredFieldsByteSizeFallback() const {
  // @@protoc_insertion_point(required_fields_byte_size_fallback_start:paddle_mobile.framework.proto.BlockDesc)
  size_t total_size = 0;

  if (has_idx()) {
    // required int32 idx = 1;
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::Int32Size(
                          this->idx());
  }

  if (has_parent_idx()) {
    // required int32 parent_idx = 2;
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::Int32Size(
                          this->parent_idx());
  }

  return total_size;
}
size_t BlockDesc::ByteSizeLong() const {
  // @@protoc_insertion_point(message_byte_size_start:paddle_mobile.framework.proto.BlockDesc)
  size_t total_size = 0;

  total_size += _internal_metadata_.unknown_fields().size();

  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) ==
      0) {  // All required fields are present.
    // required int32 idx = 1;
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::Int32Size(
                          this->idx());

    // required int32 parent_idx = 2;
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::Int32Size(
                          this->parent_idx());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  // repeated .paddle_mobile.framework.proto.VarDesc vars = 3;
  {
    unsigned int count = static_cast<unsigned int>(this->vars_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
          ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
              this->vars(static_cast<int>(i)));
    }
  }

  // repeated .paddle_mobile.framework.proto.OpDesc ops = 4;
  {
    unsigned int count = static_cast<unsigned int>(this->ops_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
          ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
              this->ops(static_cast<int>(i)));
    }
  }

  // optional int32 forward_block_idx = 5 [default = -1];
  if (has_forward_block_idx()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::Int32Size(
                          this->forward_block_idx());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void BlockDesc::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const BlockDesc*>(&from));
}

void BlockDesc::MergeFrom(const BlockDesc& from) {
  // @@protoc_insertion_point(class_specific_merge_from_start:paddle_mobile.framework.proto.BlockDesc)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void)cached_has_bits;

  vars_.MergeFrom(from.vars_);
  ops_.MergeFrom(from.ops_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      idx_ = from.idx_;
    }
    if (cached_has_bits & 0x00000002u) {
      parent_idx_ = from.parent_idx_;
    }
    if (cached_has_bits & 0x00000004u) {
      forward_block_idx_ = from.forward_block_idx_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void BlockDesc::CopyFrom(const BlockDesc& from) {
  // @@protoc_insertion_point(class_specific_copy_from_start:paddle_mobile.framework.proto.BlockDesc)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BlockDesc::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;
  if (!::google::protobuf::internal::AllAreInitialized(this->vars()))
    return false;
  if (!::google::protobuf::internal::AllAreInitialized(this->ops()))
    return false;
  return true;
}

void BlockDesc::Swap(BlockDesc* other) {
  if (other == this) return;
  InternalSwap(other);
}
void BlockDesc::InternalSwap(BlockDesc* other) {
  using std::swap;
  vars_.InternalSwap(&other->vars_);
  ops_.InternalSwap(&other->ops_);
  swap(idx_, other->idx_);
  swap(parent_idx_, other->parent_idx_);
  swap(forward_block_idx_, other->forward_block_idx_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::std::string BlockDesc::GetTypeName() const {
  return "paddle_mobile.framework.proto.BlockDesc";
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// BlockDesc

// required int32 idx = 1;
bool BlockDesc::has_idx() const { return (_has_bits_[0] & 0x00000001u) != 0; }
void BlockDesc::set_has_idx() { _has_bits_[0] |= 0x00000001u; }
void BlockDesc::clear_has_idx() { _has_bits_[0] &= ~0x00000001u; }
void BlockDesc::clear_idx() {
  idx_ = 0;
  clear_has_idx();
}
::google::protobuf::int32 BlockDesc::idx() const {
  // @@protoc_insertion_point(field_get:paddle_mobile.framework.proto.BlockDesc.idx)
  return idx_;
}
void BlockDesc::set_idx(::google::protobuf::int32 value) {
  set_has_idx();
  idx_ = value;
  // @@protoc_insertion_point(field_set:paddle_mobile.framework.proto.BlockDesc.idx)
}

// required int32 parent_idx = 2;
bool BlockDesc::has_parent_idx() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void BlockDesc::set_has_parent_idx() { _has_bits_[0] |= 0x00000002u; }
void BlockDesc::clear_has_parent_idx() { _has_bits_[0] &= ~0x00000002u; }
void BlockDesc::clear_parent_idx() {
  parent_idx_ = 0;
  clear_has_parent_idx();
}
::google::protobuf::int32 BlockDesc::parent_idx() const {
  // @@protoc_insertion_point(field_get:paddle_mobile.framework.proto.BlockDesc.parent_idx)
  return parent_idx_;
}
void BlockDesc::set_parent_idx(::google::protobuf::int32 value) {
  set_has_parent_idx();
  parent_idx_ = value;
  // @@protoc_insertion_point(field_set:paddle_mobile.framework.proto.BlockDesc.parent_idx)
}

// repeated .paddle_mobile.framework.proto.VarDesc vars = 3;
int BlockDesc::vars_size() const { return vars_.size(); }
void BlockDesc::clear_vars() { vars_.Clear(); }
const ::paddle_mobile::framework::proto::VarDesc& BlockDesc::vars(
    int index) const {
  // @@protoc_insertion_point(field_get:paddle_mobile.framework.proto.BlockDesc.vars)
  return vars_.Get(index);
}
::paddle_mobile::framework::proto::VarDesc* BlockDesc::mutable_vars(int index) {
  // @@protoc_insertion_point(field_mutable:paddle_mobile.framework.proto.BlockDesc.vars)
  return vars_.Mutable(index);
}
::paddle_mobile::framework::proto::VarDesc* BlockDesc::add_vars() {
  // @@protoc_insertion_point(field_add:paddle_mobile.framework.proto.BlockDesc.vars)
  return vars_.Add();
}
::google::protobuf::RepeatedPtrField<
    ::paddle_mobile::framework::proto::VarDesc>*
BlockDesc::mutable_vars() {
  // @@protoc_insertion_point(field_mutable_list:paddle_mobile.framework.proto.BlockDesc.vars)
  return &vars_;
}
const ::google::protobuf::RepeatedPtrField<
    ::paddle_mobile::framework::proto::VarDesc>&
BlockDesc::vars() const {
  // @@protoc_insertion_point(field_list:paddle_mobile.framework.proto.BlockDesc.vars)
  return vars_;
}

// repeated .paddle_mobile.framework.proto.OpDesc ops = 4;
int BlockDesc::ops_size() const { return ops_.size(); }
void BlockDesc::clear_ops() { ops_.Clear(); }
const ::paddle_mobile::framework::proto::OpDesc& BlockDesc::ops(
    int index) const {
  // @@protoc_insertion_point(field_get:paddle_mobile.framework.proto.BlockDesc.ops)
  return ops_.Get(index);
}
::paddle_mobile::framework::proto::OpDesc* BlockDesc::mutable_ops(int index) {
  // @@protoc_insertion_point(field_mutable:paddle_mobile.framework.proto.BlockDesc.ops)
  return ops_.Mutable(index);
}
::paddle_mobile::framework::proto::OpDesc* BlockDesc::add_ops() {
  // @@protoc_insertion_point(field_add:paddle_mobile.framework.proto.BlockDesc.ops)
  return ops_.Add();
}
::google::protobuf::RepeatedPtrField<::paddle_mobile::framework::proto::OpDesc>*
BlockDesc::mutable_ops() {
  // @@protoc_insertion_point(field_mutable_list:paddle_mobile.framework.proto.BlockDesc.ops)
  return &ops_;
}
const ::google::protobuf::RepeatedPtrField<
    ::paddle_mobile::framework::proto::OpDesc>&
BlockDesc::ops() const {
  // @@protoc_insertion_point(field_list:paddle_mobile.framework.proto.BlockDesc.ops)
  return ops_;
}

// optional int32 forward_block_idx = 5 [default = -1];
bool BlockDesc::has_forward_block_idx() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void BlockDesc::set_has_forward_block_idx() { _has_bits_[0] |= 0x00000004u; }
void BlockDesc::clear_has_forward_block_idx() { _has_bits_[0] &= ~0x00000004u; }
void BlockDesc::clear_forward_block_idx() {
  forward_block_idx_ = -1;
  clear_has_forward_block_idx();
}
::google::protobuf::int32 BlockDesc::forward_block_idx() const {
  // @@protoc_insertion_point(field_get:paddle_mobile.framework.proto.BlockDesc.forward_block_idx)
  return forward_block_idx_;
}
void BlockDesc::set_forward_block_idx(::google::protobuf::int32 value) {
  set_has_forward_block_idx();
  forward_block_idx_ = value;
  // @@protoc_insertion_point(field_set:paddle_mobile.framework.proto.BlockDesc.forward_block_idx)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ProgramDesc::kBlocksFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ProgramDesc::ProgramDesc()
    : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_framework_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:paddle_mobile.framework.proto.ProgramDesc)
}
ProgramDesc::ProgramDesc(const ProgramDesc& from)
    : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      blocks_(from.blocks_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:paddle_mobile.framework.proto.ProgramDesc)
}

void ProgramDesc::SharedCtor() { _cached_size_ = 0; }

ProgramDesc::~ProgramDesc() {
  // @@protoc_insertion_point(destructor:paddle_mobile.framework.proto.ProgramDesc)
  SharedDtor();
}

void ProgramDesc::SharedDtor() {}

void ProgramDesc::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ProgramDesc& ProgramDesc::default_instance() {
  protobuf_framework_2eproto::InitDefaults();
  return *internal_default_instance();
}

ProgramDesc* ProgramDesc::New(::google::protobuf::Arena* arena) const {
  ProgramDesc* n = new ProgramDesc;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ProgramDesc::Clear() {
  // @@protoc_insertion_point(message_clear_start:paddle_mobile.framework.proto.ProgramDesc)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  blocks_.Clear();
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool ProgramDesc::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) \
  if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::io::LazyStringOutputStream unknown_fields_string(
      ::google::protobuf::NewPermanentCallback(
          &_internal_metadata_,
          &::google::protobuf::internal::InternalMetadataWithArenaLite::
              mutable_unknown_fields));
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_string, false);
  // @@protoc_insertion_point(parse_start:paddle_mobile.framework.proto.ProgramDesc)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p =
        input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (
        ::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .paddle_mobile.framework.proto.BlockDesc blocks = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) ==
            static_cast<::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::
                  ReadMessageNoVirtual(input, add_blocks()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:paddle_mobile.framework.proto.ProgramDesc)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:paddle_mobile.framework.proto.ProgramDesc)
  return false;
#undef DO_
}

void ProgramDesc::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:paddle_mobile.framework.proto.ProgramDesc)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void)cached_has_bits;

  // repeated .paddle_mobile.framework.proto.BlockDesc blocks = 1;
  for (unsigned int i = 0, n = static_cast<unsigned int>(this->blocks_size());
       i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
        1, this->blocks(static_cast<int>(i)), output);
  }

  output->WriteRaw(
      _internal_metadata_.unknown_fields().data(),
      static_cast<int>(_internal_metadata_.unknown_fields().size()));
  // @@protoc_insertion_point(serialize_end:paddle_mobile.framework.proto.ProgramDesc)
}

size_t ProgramDesc::ByteSizeLong() const {
  // @@protoc_insertion_point(message_byte_size_start:paddle_mobile.framework.proto.ProgramDesc)
  size_t total_size = 0;

  total_size += _internal_metadata_.unknown_fields().size();

  // repeated .paddle_mobile.framework.proto.BlockDesc blocks = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->blocks_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
          ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
              this->blocks(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ProgramDesc::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const ProgramDesc*>(&from));
}

void ProgramDesc::MergeFrom(const ProgramDesc& from) {
  // @@protoc_insertion_point(class_specific_merge_from_start:paddle_mobile.framework.proto.ProgramDesc)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void)cached_has_bits;

  blocks_.MergeFrom(from.blocks_);
}

void ProgramDesc::CopyFrom(const ProgramDesc& from) {
  // @@protoc_insertion_point(class_specific_copy_from_start:paddle_mobile.framework.proto.ProgramDesc)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ProgramDesc::IsInitialized() const {
  if (!::google::protobuf::internal::AllAreInitialized(this->blocks()))
    return false;
  return true;
}

void ProgramDesc::Swap(ProgramDesc* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ProgramDesc::InternalSwap(ProgramDesc* other) {
  using std::swap;
  blocks_.InternalSwap(&other->blocks_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::std::string ProgramDesc::GetTypeName() const {
  return "paddle_mobile.framework.proto.ProgramDesc";
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ProgramDesc

// repeated .paddle_mobile.framework.proto.BlockDesc blocks = 1;
int ProgramDesc::blocks_size() const { return blocks_.size(); }
void ProgramDesc::clear_blocks() { blocks_.Clear(); }
const ::paddle_mobile::framework::proto::BlockDesc& ProgramDesc::blocks(
    int index) const {
  // @@protoc_insertion_point(field_get:paddle_mobile.framework.proto.ProgramDesc.blocks)
  return blocks_.Get(index);
}
::paddle_mobile::framework::proto::BlockDesc* ProgramDesc::mutable_blocks(
    int index) {
  // @@protoc_insertion_point(field_mutable:paddle_mobile.framework.proto.ProgramDesc.blocks)
  return blocks_.Mutable(index);
}
::paddle_mobile::framework::proto::BlockDesc* ProgramDesc::add_blocks() {
  // @@protoc_insertion_point(field_add:paddle_mobile.framework.proto.ProgramDesc.blocks)
  return blocks_.Add();
}
::google::protobuf::RepeatedPtrField<
    ::paddle_mobile::framework::proto::BlockDesc>*
ProgramDesc::mutable_blocks() {
  // @@protoc_insertion_point(field_mutable_list:paddle_mobile.framework.proto.ProgramDesc.blocks)
  return &blocks_;
}
const ::google::protobuf::RepeatedPtrField<
    ::paddle_mobile::framework::proto::BlockDesc>&
ProgramDesc::blocks() const {
  // @@protoc_insertion_point(field_list:paddle_mobile.framework.proto.ProgramDesc.blocks)
  return blocks_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace proto
}  // namespace framework
}  // namespace paddle_mobile

// @@protoc_insertion_point(global_scope)
