# get the name of current operation system: Linux or Darwin
SYSTEM=$(shell "uname")

CXX_DEFINES = -DARM_WITH_OMP -DHPPL_STUB_FUNC -DLITE_WITH_ARM -DLITE_WITH_LIGHT_WEIGHT_FRAMEWORK \
              -DLITE_WITH_LINUX -DPADDLE_DISABLE_PROFILER -DPADDLE_NO_PYTHON -DPADDLE_WITH_TESTING
LDFLAGS = -latomic -pthread -ldl -llog -lz -static-libstdc++

SYSROOT_COMPLILE = --sysroot=$(NDK_ROOT)/sysroot

SYSTEM_INCLUDES = -I$(NDK_ROOT)/sources/cxx-stl/llvm-libc++/include \
                  -I$(NDK_ROOT)/sources/cxx-stl/llvm-libc++abi/include \
                  -I$(NDK_ROOT)/sources/android/support/include \
                  -I$(NDK_ROOT)/sysroot/usr/include \

NDK_NAME=$(shell echo $(NDK_ROOT) | grep -Eo "android-ndk-r[0-9]{2}")
NDK_VERSION=$(shell echo $(NDK_NAME) | grep -Eo "[0-9]{2}")
$(info NDK_NAME: $(NDK_NAME))
$(info NDK_VERSION: $(NDK_VERSION))

ifeq ($(SYSTEM), Linux)
    HOST_NAME = linux
    HOST_TARGET = linux-x86_64
else
    HOST_NAME = darwin
    HOST_TARGET = darwin-x86_64
endif

$(info HOST_NAME: $(HOST_NAME))
$(info HOST_TARGET: $(HOST_TARGET))

ifeq ($(shell expr $(NDK_VERSION) \<= 18), 1)
    ifeq ($(ARM_ABI), arm8)
        CC = $(NDK_ROOT)/toolchains/aarch64-linux-android-4.9/prebuilt/$(HOST_TARGET)/bin/aarch64-linux-android-g++
        SYSROOT_LINK = --sysroot=$(NDK_ROOT)/platforms/android-21/arch-arm64
    else
        CC = $(NDK_ROOT)/toolchains/arm-linux-androideabi-4.9/prebuilt/$(HOST_TARGET)/bin/arm-linux-androideabi-g++
        SYSROOT_LINK = --sysroot=$(NDK_ROOT)/platforms/android-21/arch-arm
    endif
else
    ifeq ($(ARM_ABI), arm8)
        CC = $(NDK_ROOT)/toolchains/llvm/prebuilt/$(HOST_TARGET)/bin/aarch64-linux-android21-clang++
    else
        CC = $(NDK_ROOT)/toolchains/llvm/prebuilt/$(HOST_TARGET)/bin/armv7a-linux-androideabi16-clang++
    endif
endif

ifeq ($(NDK_VERSION), 18)
    ifeq ($(ARM_ABI), arm8)
        LDFLAGS +=  -gcc-toolchain $(NDK_ROOT)/toolchains/aarch64-$(HOST_NAME)-android-4.9/prebuilt/linux-x86_64
    else
        LDFLAGS += -gcc-toolchain $(NDK_ROOT)/toolchains/arm-$(HOST_NAME)-androideabi-4.9/prebuilt/linux-x86_64
    endif
endif

ifeq ($(ARM_ABI), arm8)
    CXX_FLAGS = -funwind-tables -no-canonical-prefixes -D__ANDROID_API__=21 -fexceptions -frtti -std=c++11 -O3 -DNDEBUG -fPIE
    CXXFLAGS_LINK = $(CXX_FLAGS) -pie -Wl,--gc-sections
    SYSTEM_LIBS = $(NDK_ROOT)/sources/cxx-stl/llvm-libc++/libs/arm64-v8a/libc++_static.a \
                  $(NDK_ROOT)/sources/cxx-stl/llvm-libc++/libs/arm64-v8a/libc++abi.a \
                  $(NDK_ROOT)/platforms/android-21/arch-arm64/usr/lib/libstdc++.so
    INCLUDES = $(SYSTEM_INCLUDES) -I$(NDK_ROOT)/sysroot/usr/include/aarch64-linux-android
else
    CXX_FLAGS = -march=armv7-a -mthumb -mfpu=neon -mfloat-abi=softfp -funwind-tables -no-canonical-prefixes \
                   -D__ANDROID_API__=16 -fexceptions -frtti  -std=c++11 -O3 -DNDEBUG -fPIE
    CXXFLAGS_LINK = $(CXX_FLAGS) -pie -Wl,--fix-cortex-a8 -Wl,--gc-sections -Wl,-z,nocopyreloc
    SYSTEM_LIBS = $(NDK_ROOT)/sources/cxx-stl/llvm-libc++/libs/armeabi-v7a/libc++_static.a \
                  $(NDK_ROOT)/sources/cxx-stl/llvm-libc++/libs/armeabi-v7a/libc++abi.a \
                  $(NDK_ROOT)/sources/cxx-stl/llvm-libc++/libs/armeabi-v7a/libandroid_support.a \
                  $(NDK_ROOT)/sources/cxx-stl/llvm-libc++/libs/armeabi-v7a/libunwind.a
    INCLUDES = $(SYSTEM_INCLUDES) -I$(NDK_ROOT)/sysroot/usr/include/arm-linux-androideabi
endif

ifeq ($(shell expr $(NDK_VERSION) \>= 21), 1)
    CXX_FLAGS += -fopenmp -static-openmp
else
    CXX_FLAGS += -fopenmp
endif
