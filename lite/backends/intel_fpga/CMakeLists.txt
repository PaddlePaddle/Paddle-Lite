if (NOT LITE_WITH_INTEL_FPGA)
    return()
endif()

set(LITE_INTEL_FPGA_PATH "${PADDLE_SOURCE_DIR}/lite/backends/intel_fpga")
set(LITE_INTEL_FPGA_LLDRV_PATH "${PADDLE_SOURCE_DIR}/lite/backends/intel_fpga/lldrv")

message("intel_fpga_path ${LITE_INTEL_FPGA_PATH}")
file(GLOB INTEL_FPGA_CPP "${LITE_INTEL_FPGA_PATH}/*.cpp")
file(GLOB LLDRV_CPP "${LITE_INTEL_FPGA_LLDRV_PATH}/*.cpp")
message("intel_fpga cpp: ${INTEL_FPGA_CPP}")
set(INTEL_FPGA_ALL_CPP "")
FOREACH(FILE_PATH ${LLDRV_CPP})
    STRING(REGEX REPLACE ".+/(.+\\..*)" "\\1" FILE_NAME ${FILE_PATH})
    list(APPEND INTEL_FPGA_ALL_CPP lldrv/${FILE_NAME})
ENDFOREACH(FILE_PATH)
FOREACH(FILE_PATH ${INTELFPGA_CPP})
    STRING(REGEX REPLACE ".+/(.+\\..*)" "\\1" FILE_NAME ${FILE_PATH})
    list(APPEND INTEL_FPGA_ALL_CPP ${FILE_NAME})
ENDFOREACH(FILE_PATH)
message("intel_fpga src: ${INTEL_FPGA_ALL_CPP}")
cc_library(kernel_intel_fpga SRCS ${INTEL_FPGA_ALL_CPP})
cc_library(intel_fpga_target_wrapper SRCS target_wrapper.cpp DEPS kernel_intel_fpga)
